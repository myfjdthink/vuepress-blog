[
  {
    "title": "使用注解简化 Mongoose 事务的使用",
    "created": "2019-12-25T01:45:41.000Z",
    "updated": "2019-12-25T02:08:22.000Z",
    "tags": [
      "akajs",
      "Node",
      "posts"
    ],
    "content": "## mongoose 提供的事务\n\nMongoDB 4.0 开始提供了事务支持，mongoose 也提供了相应的实现，不过目前的写法还是比较繁琐。  \n我们看一下 mongoose 给出的 demo\n\n    const Customer = db.model('Customer', new Schema({ name: String })); let session = null; return Customer.createCollection(). then(() => db.startSession()). then(_session => { session = _session; // Start a transaction session.startTransaction(); // This `create()` is part of the transaction because of the `session` // option. return Customer.create([{ name: 'Test' }], { session: session }); }). // Transactions execute in isolation, so unless you pass a `session` // to `findOne()` you won't see the document until the transaction // is committed. then(() => Customer.findOne({ name: 'Test' })). then(doc => assert.ok(!doc)). // This `findOne()` will return the doc, because passing the `session` // means this `findOne()` will run as part of the transaction. then(() => Customer.findOne({ name: 'Test' }).session(session)). then(doc => assert.ok(doc)). // Once the transaction is committed, the write operation becomes // visible outside of the transaction. then(() => session.commitTransaction()). then(() => Customer.findOne({ name: 'Test' })). then(doc => assert.ok(doc)); \n\n这个 demo 暴露了两个问题：\n\n1.  需要为每一个事务里做提交和回滚的处理\n2.  事务是用 session 来区分的，你需要一直传递 session\n\n## 使用注解\n\n所以 akajs 提供了一个事务的注解来简化这个处理流程。\n\n    import * as mongoose from 'mongoose' import {Schema} from 'mongoose' import * as assert from 'assert' import {Transactional, getSession} from './decorators/Transactional' mongoose.connect('mongodb://localhost:27017,localhost:27018,localhost:27019/test?replicaSet=rs', {useNewUrlParser: true}) mongoose.set('debug', true) let db = mongoose.connection const Customer = db.model('Customer', new Schema({name: String})) class ClassA { @Transactional() async main (key) { await new Customer({name: 'ClassA'}).save({session: getSession()}) const doc1 = await Customer.findOne({name: 'ClassA'}) assert.ok(!doc1) await new ClassB().step2() return key } } class ClassB { async step2 () { const doc2 = await Customer.findOne({name: 'ClassA'}).session(getSession()) assert.ok(doc2) await Customer.remove({}).session(getSession()) } } new ClassA().main('aaa').then((res) => { console.log('res', res) mongoose.disconnect(console.log) }).catch(console.error) \n\n解析：\n\n*   @Transactional() 注解会自动提交或回滚事务（发生异常时）。具体实现见[Transactional.ts](https://github.com/kaolalicai/akajs/blob/master/packages/mongoose/decorators/Transactional.ts) ，核心实现部分，使用 try catch 捕获异常，实现自动回滚。\n\n    try { const value = await originalMethod.apply(this, [...args]) // Since the mutations ran without an error, commit the transaction. await session.commitTransaction() // Return any value returned by `mutations` to make this function as transparent as possible. return value } catch (error) { // Abort the transaction as an error has occurred in the mutations above. await session.abortTransaction() // Rethrow the error to be caught by the caller. throw error } finally { // End the previous session. session.endSession() } \n\n*   为了避免嵌套调用时，你需要一直传递 session 的尴尬~，akajs 提供全局的 getSession() 方法，其实现原理是依赖 [Async Hooks](https://nodejs.org/api/async_hooks.html) ，是 Node 的实验性特性，  \n    你对此介意的话，请不要在生产环境使用。\n\n**注意** mongodb 的事务必须在复制集上使用，在开发环境启动 mongodb 复制集，推荐使用 [run-rs](https://www.npmjs.com/package/run-rs)\n\n## 更进一步\n\n当然，在每一个需要 Session 的地方调用 getSession() 方法还是稍显累赘，我们可以通过 wrap mongoose 的各个方法，来实现自动注入 session。\n\n例如把 mongoose 的 findOne 方法替换为\n\n    let originFindOne = mongoose.findOne mongoose.findOne = () => { originFindOne().session(getSession()) } \n\n但是工作量有些多，暂时没时间做。\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%23%23%20mongoose%20%E6%8F%90%E4%BE%9B%E7%9A%84%E4%BA%8B%E5%8A%A1%0AMongoDB%204.0%20%E5%BC%80%E5%A7%8B%E6%8F%90%E4%BE%9B%E4%BA%86%E4%BA%8B%E5%8A%A1%E6%94%AF%E6%8C%81%EF%BC%8Cmongoose%20%E4%B9%9F%E6%8F%90%E4%BE%9B%E4%BA%86%E7%9B%B8%E5%BA%94%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E4%B8%8D%E8%BF%87%E7%9B%AE%E5%89%8D%E7%9A%84%E5%86%99%E6%B3%95%E8%BF%98%E6%98%AF%E6%AF%94%E8%BE%83%E7%B9%81%E7%90%90%E3%80%82%20%0A%E6%88%91%E4%BB%AC%E7%9C%8B%E4%B8%80%E4%B8%8B%20mongoose%20%E7%BB%99%E5%87%BA%E7%9A%84%20demo%20%0A%0A%60%60%60js%0Aconst%20Customer%20%3D%20db.model('Customer'%2C%20new%20Schema(%7B%20name%3A%20String%20%7D))%3B%0A%0Alet%20session%20%3D%20null%3B%0Areturn%20Customer.createCollection().%0A%20%20then(()%20%3D%3E%20db.startSession()).%0A%20%20then(_session%20%3D%3E%20%7B%0A%20%20%20%20session%20%3D%20_session%3B%0A%20%20%20%20%2F%2F%20Start%20a%20transaction%0A%20%20%20%20session.startTransaction()%3B%0A%20%20%20%20%2F%2F%20This%20%60create()%60%20is%20part%20of%20the%20transaction%20because%20of%20the%20%60session%60%0A%20%20%20%20%2F%2F%20option.%0A%20%20%20%20return%20Customer.create(%5B%7B%20name%3A%20'Test'%20%7D%5D%2C%20%7B%20session%3A%20session%20%7D)%3B%0A%20%20%7D).%0A%20%20%2F%2F%20Transactions%20execute%20in%20isolation%2C%20so%20unless%20you%20pass%20a%20%60session%60%0A%20%20%2F%2F%20to%20%60findOne()%60%20you%20won't%20see%20the%20document%20until%20the%20transaction%0A%20%20%2F%2F%20is%20committed.%0A%20%20then(()%20%3D%3E%20Customer.findOne(%7B%20name%3A%20'Test'%20%7D)).%0A%20%20then(doc%20%3D%3E%20assert.ok(!doc)).%0A%20%20%2F%2F%20This%20%60findOne()%60%20will%20return%20the%20doc%2C%20because%20passing%20the%20%60session%60%0A%20%20%2F%2F%20means%20this%20%60findOne()%60%20will%20run%20as%20part%20of%20the%20transaction.%0A%20%20then(()%20%3D%3E%20Customer.findOne(%7B%20name%3A%20'Test'%20%7D).session(session)).%0A%20%20then(doc%20%3D%3E%20assert.ok(doc)).%0A%20%20%2F%2F%20Once%20the%20transaction%20is%20committed%2C%20the%20write%20operation%20becomes%0A%20%20%2F%2F%20visible%20outside%20of%20the%20transaction.%0A%20%20then(()%20%3D%3E%20session.commitTransaction()).%0A%20%20then(()%20%3D%3E%20Customer.findOne(%7B%20name%3A%20'Test'%20%7D)).%0A%20%20then(doc%20%3D%3E%20assert.ok(doc))%3B%0A%60%60%60%0A%0A%E8%BF%99%E4%B8%AA%20demo%20%E6%9A%B4%E9%9C%B2%E4%BA%86%E4%B8%A4%E4%B8%AA%E9%97%AE%E9%A2%98%EF%BC%9A%0A1.%20%E9%9C%80%E8%A6%81%E4%B8%BA%E6%AF%8F%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%E9%87%8C%E5%81%9A%E6%8F%90%E4%BA%A4%E5%92%8C%E5%9B%9E%E6%BB%9A%E7%9A%84%E5%A4%84%E7%90%86%0A2.%20%E4%BA%8B%E5%8A%A1%E6%98%AF%E7%94%A8%20session%20%E6%9D%A5%E5%8C%BA%E5%88%86%E7%9A%84%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%80%E7%9B%B4%E4%BC%A0%E9%80%92%20session%0A%0A%23%23%20%E4%BD%BF%E7%94%A8%E6%B3%A8%E8%A7%A3%0A%E6%89%80%E4%BB%A5%20akajs%20%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%B3%A8%E8%A7%A3%E6%9D%A5%E7%AE%80%E5%8C%96%E8%BF%99%E4%B8%AA%E5%A4%84%E7%90%86%E6%B5%81%E7%A8%8B%E3%80%82%0A%60%60%60ts%0Aimport%20*%20as%20mongoose%20from%20'mongoose'%0Aimport%20%7BSchema%7D%20from%20'mongoose'%0Aimport%20*%20as%20assert%20from%20'assert'%0Aimport%20%7BTransactional%2C%20getSession%7D%20from%20'.%2Fdecorators%2FTransactional'%0A%0Amongoose.connect('mongodb%3A%2F%2Flocalhost%3A27017%2Clocalhost%3A27018%2Clocalhost%3A27019%2Ftest%3FreplicaSet%3Drs'%2C%20%7BuseNewUrlParser%3A%20true%7D)%0Amongoose.set('debug'%2C%20true)%0Alet%20db%20%3D%20mongoose.connection%0Aconst%20Customer%20%3D%20db.model('Customer'%2C%20new%20Schema(%7Bname%3A%20String%7D))%0A%0Aclass%20ClassA%20%7B%0A%20%20%40Transactional()%0A%20%20async%20main%20(key)%20%7B%0A%20%20%20%20await%20new%20Customer(%7Bname%3A%20'ClassA'%7D).save(%7Bsession%3A%20getSession()%7D)%0A%20%20%20%20const%20doc1%20%3D%20await%20Customer.findOne(%7Bname%3A%20'ClassA'%7D)%0A%20%20%20%20assert.ok(!doc1)%0A%20%20%20%20await%20new%20ClassB().step2()%0A%20%20%20%20return%20key%0A%20%20%7D%0A%7D%0A%0Aclass%20ClassB%20%7B%0A%20%20async%20step2%20()%20%7B%0A%20%20%20%20const%20doc2%20%3D%20await%20Customer.findOne(%7Bname%3A%20'ClassA'%7D).session(getSession())%0A%20%20%20%20assert.ok(doc2)%0A%20%20%20%20await%20Customer.remove(%7B%7D).session(getSession())%0A%20%20%7D%0A%7D%0A%0Anew%20ClassA().main('aaa').then((res)%20%3D%3E%20%7B%0A%20%20console.log('res'%2C%20res)%0A%20%20mongoose.disconnect(console.log)%0A%7D).catch(console.error)%0A%0A%60%60%60%0A%0A%E8%A7%A3%E6%9E%90%EF%BC%9A%0A%0A-%20%40Transactional()%20%E6%B3%A8%E8%A7%A3%E4%BC%9A%E8%87%AA%E5%8A%A8%E6%8F%90%E4%BA%A4%E6%88%96%E5%9B%9E%E6%BB%9A%E4%BA%8B%E5%8A%A1%EF%BC%88%E5%8F%91%E7%94%9F%E5%BC%82%E5%B8%B8%E6%97%B6%EF%BC%89%E3%80%82%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E8%A7%81%5BTransactional.ts%5D(https%3A%2F%2Fgithub.com%2Fkaolalicai%2Fakajs%2Fblob%2Fmaster%2Fpackages%2Fmongoose%2Fdecorators%2FTransactional.ts)%20%EF%BC%8C%E6%A0%B8%E5%BF%83%E5%AE%9E%E7%8E%B0%E9%83%A8%E5%88%86%EF%BC%8C%E4%BD%BF%E7%94%A8%20try%20catch%20%E6%8D%95%E8%8E%B7%E5%BC%82%E5%B8%B8%EF%BC%8C%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E5%9B%9E%E6%BB%9A%E3%80%82%0A%0A%60%60%60ts%0Atry%20%7B%0A%20%20const%20value%20%3D%20await%20originalMethod.apply(this%2C%20%5B...args%5D)%0A%20%20%2F%2F%20Since%20the%20mutations%20ran%20without%20an%20error%2C%20commit%20the%20transaction.%0A%20%20await%20session.commitTransaction()%0A%20%20%2F%2F%20Return%20any%20value%20returned%20by%20%60mutations%60%20to%20make%20this%20function%20as%20transparent%20as%20possible.%0A%20%20return%20value%0A%7D%20catch%20(error)%20%7B%0A%20%20%2F%2F%20Abort%20the%20transaction%20as%20an%20error%20has%20occurred%20in%20the%20mutations%20above.%0A%20%20await%20session.abortTransaction()%0A%20%20%2F%2F%20Rethrow%20the%20error%20to%20be%20caught%20by%20the%20caller.%0A%20%20throw%20error%0A%7D%20finally%20%7B%0A%20%20%2F%2F%20End%20the%20previous%20session.%0A%20%20session.endSession()%0A%7D%0A%60%60%60%0A%0A-%20%E4%B8%BA%E4%BA%86%E9%81%BF%E5%85%8D%E5%B5%8C%E5%A5%97%E8%B0%83%E7%94%A8%E6%97%B6%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E4%B8%80%E7%9B%B4%E4%BC%A0%E9%80%92%20session%20%E7%9A%84%E5%B0%B4%E5%B0%AC~%EF%BC%8Cakajs%20%E6%8F%90%E4%BE%9B%E5%85%A8%E5%B1%80%E7%9A%84%20getSession()%20%E6%96%B9%E6%B3%95%EF%BC%8C%E5%85%B6%E5%AE%9E%E7%8E%B0%E5%8E%9F%E7%90%86%E6%98%AF%E4%BE%9D%E8%B5%96%20%5BAsync%20Hooks%5D(https%3A%2F%2Fnodejs.org%2Fapi%2Fasync_hooks.html)%20%EF%BC%8C%E6%98%AF%20Node%20%E7%9A%84%E5%AE%9E%E9%AA%8C%E6%80%A7%E7%89%B9%E6%80%A7%EF%BC%8C%0A%E4%BD%A0%E5%AF%B9%E6%AD%A4%E4%BB%8B%E6%84%8F%E7%9A%84%E8%AF%9D%EF%BC%8C%E8%AF%B7%E4%B8%8D%E8%A6%81%E5%9C%A8%E7%94%9F%E4%BA%A7%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E3%80%82%0A%0A**%E6%B3%A8%E6%84%8F**%20mongodb%20%E7%9A%84%E4%BA%8B%E5%8A%A1%E5%BF%85%E9%A1%BB%E5%9C%A8%E5%A4%8D%E5%88%B6%E9%9B%86%E4%B8%8A%E4%BD%BF%E7%94%A8%EF%BC%8C%E5%9C%A8%E5%BC%80%E5%8F%91%E7%8E%AF%E5%A2%83%E5%90%AF%E5%8A%A8%20mongodb%20%E5%A4%8D%E5%88%B6%E9%9B%86%EF%BC%8C%E6%8E%A8%E8%8D%90%E4%BD%BF%E7%94%A8%20%5Brun-rs%5D(https%3A%2F%2Fwww.npmjs.com%2Fpackage%2Frun-rs)%0A%0A%23%23%20%E6%9B%B4%E8%BF%9B%E4%B8%80%E6%AD%A5%0A%E5%BD%93%E7%84%B6%EF%BC%8C%E5%9C%A8%E6%AF%8F%E4%B8%80%E4%B8%AA%E9%9C%80%E8%A6%81%20Session%20%E7%9A%84%E5%9C%B0%E6%96%B9%E8%B0%83%E7%94%A8%20getSession()%20%20%E6%96%B9%E6%B3%95%E8%BF%98%E6%98%AF%E7%A8%8D%E6%98%BE%E7%B4%AF%E8%B5%98%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%20wrap%20mongoose%20%E7%9A%84%E5%90%84%E4%B8%AA%E6%96%B9%E6%B3%95%EF%BC%8C%E6%9D%A5%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5%20session%E3%80%82%0A%0A%E4%BE%8B%E5%A6%82%E6%8A%8A%20mongoose%20%E7%9A%84%20findOne%20%E6%96%B9%E6%B3%95%E6%9B%BF%E6%8D%A2%E4%B8%BA%0A%0A%60%60%60ts%0Alet%20originFindOne%20%3D%20mongoose.findOne%0Amongoose.findOne%20%3D%20()%20%3D%3E%20%7B%0AoriginFindOne().session(getSession())%0A%7D%0A%60%60%60%0A%0A%E4%BD%86%E6%98%AF%E5%B7%A5%E4%BD%9C%E9%87%8F%E6%9C%89%E4%BA%9B%E5%A4%9A%EF%BC%8C%E6%9A%82%E6%97%B6%E6%B2%A1%E6%97%B6%E9%97%B4%E5%81%9A%E3%80%82%0A</center>"
  },
  {
    "title": "基于 async-hook 实现的 koa 国际化解决方案",
    "created": "2019-11-21T00:06:51.000Z",
    "updated": "2019-12-25T01:45:42.000Z",
    "tags": [
      "akajs",
      "Node",
      "posts"
    ],
    "content": "*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">前言</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">koa 的 mvc 结构</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">eggjs 的结构反转方案</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">获取调用链</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Java 的 Threadlocal</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Node.js 的 async-hooks</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">国际化的最终实现方案</a>\n\n## 前言\n\n在 koa 上实现国际化，有个现成的工具包 [koa-locales](https://github.com/koajs/locales)  \n简单配置一下就可以使用了\n\n    async function home(ctx) { ctx.body = { message: ctx.__('Hello, %s', 'fengmk2'), }; } \n\n但是这里有个问题，想要获得国际化的内容，就必须访问 ctx 对象(request 里附带了用户所使用的的语言信息)，这里的访问就成了问题。\n\n## koa 的 mvc 结构\n\n一般来说，基于 koa 的应用会采用经典的 mvc 结构, 一个用户请求进来，其调用链是这样的。\n\n> router  \n> -->controller  \n> ---->service  \n> ------>model\n\n如果我们要在 service 层或者 model 层访问 koa 的 ctx 对象，就需要在调用过程把参数一层一层传递下去：\n\n    async function home(ctx) { ctx.body = service.hello(ctx) } \n\n    function hello(ctx) { ctx.__(xxx) } \n\n这是一件非常恶心的事情。  \n那要怎么解决这个问题呢？\n\n## eggjs 的结构反转方案\n\n[eggjs](https://eggjs.github.io/zh/) 采用了结构翻转的设计，当用户请求进来时，初始化 controller 和 service 等对象，挂载在 ctx 上。\n\n> ctx 对象几乎可以在编写应用时的任何一个地方获取到.  \n> 在 Controller、Service 等可以通过 this.app，或者所有 Context 对象上的 ctx.app：\n\n    // app/controller/home.js class HomeController extends Controller { async index() { // 从 `Controller/Service` 基类继承的属性： `this.app` console.log(this.app.config.name); // 从 ctx 对象上获取 console.log(this.ctx.app.config.name); } } \n\neggjs 根本没有传递 ctx，而是所有东西都挂载在 ctx 上，所以 eggjs 这里的国际化就很好做了。\n\n其实这个也是我不考虑使用 eggjs 的一个重要原因，**这种设计模式打破的 function 简单的特性**。普通的 function 参数即是输入，返回值即是输出，这种特性是非常好写 Unit Test 的。\n\n而在 function 里访问 this.xxx 这个方式，就意味着能访问的对象取决于上下文而非函数的参数，这会给测试带来灾难，你需要联系上下文才能知道 this 里面究竟有什么。\n\n当然 eggjs 里面只是往 this.ctx 挂载类似静态类的实现，并没有保存变量，一定程度上避免了混乱的问题，不过开了这个头，就容易走歪了。\n\n## 获取调用链\n\n其他语言是如何解决这个问题的呢？\n\n### Java 的 Threadlocal\n\nJava 的解决方案是 Threadlocal, 在 J2EE 中，用户的每个请求都会非配给一个线程，Java 提供了 Threadlocal 这样一个关于创建线程局部变量的类。通常情况下，我们创建的变量是可以被任何一个线程访问并修改的。而使用ThreadLocal创建的变量只能被当前线程访问，其他线程则无法访问和修改。\n\n> 一个请求绑定一个线程，一个线程绑定一个变量。\n\n有了这个特性，Java 的 Web 框架一般会在线程初始化之后，把 Session 写入 Threadlocal，然后在任意一处代码中都能访问到同一个 Session。\n\n### Node.js 的 async-hooks\n\n好消息是 Node 世界里也有类似 Java 的 Threadlocal 实现，就是 [Async Hooks](https://nodejs.org/api/async_hooks.html#async_hooks_async_hooks)。\n\n**注意 async_hooks 目前还是实验性特性！而且已经实验了 2 年多还没转正！**\n\nAsync hook 对每一个函数（不论异步还是同步）提供了一个 Async scope，你可以通过 async_hooks.currentId() 获取当前函数的 Async ID。\n\n    const async_hooks = require('async_hooks'); console.log('default Async Id', async_hooks.currentId()); // 1 process.nextTick(() => { console.log('nextTick Async Id', async_hooks.currentId()); // 5 test(); }); function test () { console.log('nextTick Async Id', async_hooks.currentId()); // 5 } \n\n在同一个 Async scope 中，你会拿到相同的 Async ID。  \n基于这个特性，我们就能追踪一个用户请求触发的所有异步操作了。\n\n## 国际化的最终实现方案\n\nOK，既然技术上可行，那我们就可以给出具体实现了。\n\n1.  使用 koa-locales 实现多语言配置文件的解析，和用户语言的识别。\n2.  把 koa-locales 里进行文本翻译的方法抽成工具类\n3.  编写一个过滤器，把用户语言与 async_hooks 的 Async ID 绑定\n4.  在 service 层代码中调用工具类，工具类通过 Async ID 获取当前用户的语言，进行文本翻译。\n\napp.ts 注册\n\n    const koa = new Koa() // 国际化 initI18n(koa, { // dirs: ['$PWD/locales'], functionName: 'i18n', defaultLocale: 'zh-CN' }) \n\nI18nUtil.ts 工具类\n\n    import * as locales from 'koa-locales' import {logger} from '@akajs/utils' import {createNamespace} from 'cls-hooked' const session = createNamespace('i18n locale') let defaultLocale = 'zh-CN' // 把 koa-locales 的文本翻译方法抽出来 let gettext = function (locale: string, key: string, ...values) { // 等待被覆盖 return key } // 新的文本翻译方法，给 Service 层调用 export function i18n (key?: string, ...values: Array<any>) { // get locale logger.debug('locale form namespace ', session.get('locale')) let locale = session.get('locale') || defaultLocale return gettext(locale, key, ...values) } export function initI18n (app, options) { locales(app, options) app.use(async (ctx, next) => new Promise( session.bind(async (resolve, reject) => { try { let locale = ctx.__getLocale() logger.debug('locale ', locale) session.set('locale', locale) await next() resolve() } catch (err) { reject(err) } }) )) gettext = app[options.functionName || '__'] defaultLocale = options.defaultLocale } \n\nUserService.ts 在 Service 中使用 i18n\n\n    async register (value: RegisterDto) { throw new BizError(i18n('Phone %s Used', phone)) } \n\n最终，我们可以在任意代码中引入 I18nUtil.ts 工具类，就可以准确获取用户当前语言了, 实际上是为每个用户请求建立一个 Session：\n\n> 用户发起请求 --> 中间件保存用户语言到 session --> Service --> I18nUtil get 用户语言 from session。\n\n解析：最终的实现方案中，我们并没有直接使用 async_hooks 特性，而是用了 [cls-hooked](https://github.com/Jeff-Lewis/cls-hooked) 这个包提升了易用性和兼容性，[Pandora.js](https://github.com/midwayjs/pandora) 还使用这个包来做 Node 应用的调用链记录，有兴趣的可以了解下。\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%5BTOC%5D%0A%0A%23%23%20%E5%89%8D%E8%A8%80%0A%E5%9C%A8%20koa%20%E4%B8%8A%E5%AE%9E%E7%8E%B0%E5%9B%BD%E9%99%85%E5%8C%96%EF%BC%8C%E6%9C%89%E4%B8%AA%E7%8E%B0%E6%88%90%E7%9A%84%E5%B7%A5%E5%85%B7%E5%8C%85%20%5Bkoa-locales%5D(https%3A%2F%2Fgithub.com%2Fkoajs%2Flocales)%0A%E7%AE%80%E5%8D%95%E9%85%8D%E7%BD%AE%E4%B8%80%E4%B8%8B%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%E4%BA%86%0A%0A%60%60%60ts%0Aasync%20function%20home(ctx)%20%7B%0A%20%20ctx.body%20%3D%20%7B%0A%20%20%20%20message%3A%20ctx.__('Hello%2C%20%25s'%2C%20'fengmk2')%2C%0A%20%20%7D%3B%0A%7D%0A%60%60%60%0A%0A%E4%BD%86%E6%98%AF%E8%BF%99%E9%87%8C%E6%9C%89%E4%B8%AA%E9%97%AE%E9%A2%98%EF%BC%8C%E6%83%B3%E8%A6%81%E8%8E%B7%E5%BE%97%E5%9B%BD%E9%99%85%E5%8C%96%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%8C%E5%B0%B1%E5%BF%85%E9%A1%BB%E8%AE%BF%E9%97%AE%20ctx%20%E5%AF%B9%E8%B1%A1(request%20%E9%87%8C%E9%99%84%E5%B8%A6%E4%BA%86%E7%94%A8%E6%88%B7%E6%89%80%E4%BD%BF%E7%94%A8%E7%9A%84%E7%9A%84%E8%AF%AD%E8%A8%80%E4%BF%A1%E6%81%AF)%EF%BC%8C%E8%BF%99%E9%87%8C%E7%9A%84%E8%AE%BF%E9%97%AE%E5%B0%B1%E6%88%90%E4%BA%86%E9%97%AE%E9%A2%98%E3%80%82%0A%0A%23%23%20koa%20%E7%9A%84%20mvc%20%E7%BB%93%E6%9E%84%0A%E4%B8%80%E8%88%AC%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%9F%BA%E4%BA%8E%20koa%20%E7%9A%84%E5%BA%94%E7%94%A8%E4%BC%9A%E9%87%87%E7%94%A8%E7%BB%8F%E5%85%B8%E7%9A%84%20mvc%20%E7%BB%93%E6%9E%84%2C%20%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E8%AF%B7%E6%B1%82%E8%BF%9B%E6%9D%A5%EF%BC%8C%E5%85%B6%E8%B0%83%E7%94%A8%E9%93%BE%E6%98%AF%E8%BF%99%E6%A0%B7%E7%9A%84%E3%80%82%0A%0A%3Erouter%0A%3E--%3Econtroller%0A%3E----%3Eservice%0A%3E------%3Emodel%0A%20%20%20%20%0A%E5%A6%82%E6%9E%9C%E6%88%91%E4%BB%AC%E8%A6%81%E5%9C%A8%20service%20%E5%B1%82%E6%88%96%E8%80%85%20model%20%E5%B1%82%E8%AE%BF%E9%97%AE%20koa%20%E7%9A%84%20ctx%20%E5%AF%B9%E8%B1%A1%EF%BC%8C%E5%B0%B1%E9%9C%80%E8%A6%81%E5%9C%A8%E8%B0%83%E7%94%A8%E8%BF%87%E7%A8%8B%E6%8A%8A%E5%8F%82%E6%95%B0%E4%B8%80%E5%B1%82%E4%B8%80%E5%B1%82%E4%BC%A0%E9%80%92%E4%B8%8B%E5%8E%BB%EF%BC%9A%0A%60%60%60ts%0Aasync%20function%20home(ctx)%20%7B%0A%20%20ctx.body%20%3D%20service.hello(ctx)%0A%7D%0A%60%60%60%0A%60%60%60ts%0Afunction%20hello(ctx)%20%7B%0A%20%20ctx.__(xxx)%0A%7D%0A%60%60%60%0A%E8%BF%99%E6%98%AF%E4%B8%80%E4%BB%B6%E9%9D%9E%E5%B8%B8%E6%81%B6%E5%BF%83%E7%9A%84%E4%BA%8B%E6%83%85%E3%80%82%0A%E9%82%A3%E8%A6%81%E6%80%8E%E4%B9%88%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%E5%91%A2%EF%BC%9F%0A%0A%23%23%20eggjs%20%E7%9A%84%E7%BB%93%E6%9E%84%E5%8F%8D%E8%BD%AC%E6%96%B9%E6%A1%88%0A%5Beggjs%5D(https%3A%2F%2Feggjs.github.io%2Fzh%2F)%20%E9%87%87%E7%94%A8%E4%BA%86%E7%BB%93%E6%9E%84%E7%BF%BB%E8%BD%AC%E7%9A%84%E8%AE%BE%E8%AE%A1%EF%BC%8C%E5%BD%93%E7%94%A8%E6%88%B7%E8%AF%B7%E6%B1%82%E8%BF%9B%E6%9D%A5%E6%97%B6%EF%BC%8C%E5%88%9D%E5%A7%8B%E5%8C%96%20controller%20%E5%92%8C%20service%20%E7%AD%89%E5%AF%B9%E8%B1%A1%EF%BC%8C%E6%8C%82%E8%BD%BD%E5%9C%A8%20ctx%20%E4%B8%8A%E3%80%82%0A%0A%3Ectx%20%E5%AF%B9%E8%B1%A1%E5%87%A0%E4%B9%8E%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%BC%96%E5%86%99%E5%BA%94%E7%94%A8%E6%97%B6%E7%9A%84%E4%BB%BB%E4%BD%95%E4%B8%80%E4%B8%AA%E5%9C%B0%E6%96%B9%E8%8E%B7%E5%8F%96%E5%88%B0.%0A%3E%E5%9C%A8%20Controller%E3%80%81Service%20%E7%AD%89%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%20this.app%EF%BC%8C%E6%88%96%E8%80%85%E6%89%80%E6%9C%89%20Context%20%E5%AF%B9%E8%B1%A1%E4%B8%8A%E7%9A%84%20ctx.app%EF%BC%9A%0A%0A%0A%60%60%60js%0A%2F%2F%20app%2Fcontroller%2Fhome.js%0Aclass%20HomeController%20extends%20Controller%20%7B%0A%20%20async%20index()%20%7B%0A%20%20%20%20%2F%2F%20%E4%BB%8E%20%60Controller%2FService%60%20%E5%9F%BA%E7%B1%BB%E7%BB%A7%E6%89%BF%E7%9A%84%E5%B1%9E%E6%80%A7%EF%BC%9A%20%60this.app%60%0A%20%20%20%20console.log(this.app.config.name)%3B%0A%20%20%20%20%2F%2F%20%E4%BB%8E%20ctx%20%E5%AF%B9%E8%B1%A1%E4%B8%8A%E8%8E%B7%E5%8F%96%0A%20%20%20%20console.log(this.ctx.app.config.name)%3B%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0Aeggjs%20%E6%A0%B9%E6%9C%AC%E6%B2%A1%E6%9C%89%E4%BC%A0%E9%80%92%20ctx%EF%BC%8C%E8%80%8C%E6%98%AF%E6%89%80%E6%9C%89%E4%B8%9C%E8%A5%BF%E9%83%BD%E6%8C%82%E8%BD%BD%E5%9C%A8%20ctx%20%E4%B8%8A%EF%BC%8C%E6%89%80%E4%BB%A5%20eggjs%20%E8%BF%99%E9%87%8C%E7%9A%84%E5%9B%BD%E9%99%85%E5%8C%96%E5%B0%B1%E5%BE%88%E5%A5%BD%E5%81%9A%E4%BA%86%E3%80%82%0A%0A%E5%85%B6%E5%AE%9E%E8%BF%99%E4%B8%AA%E4%B9%9F%E6%98%AF%E6%88%91%E4%B8%8D%E8%80%83%E8%99%91%E4%BD%BF%E7%94%A8%20eggjs%20%E7%9A%84%E4%B8%80%E4%B8%AA%E9%87%8D%E8%A6%81%E5%8E%9F%E5%9B%A0%EF%BC%8C**%E8%BF%99%E7%A7%8D%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F%E6%89%93%E7%A0%B4%E7%9A%84%20function%20%E7%AE%80%E5%8D%95%E7%9A%84%E7%89%B9%E6%80%A7**%E3%80%82%E6%99%AE%E9%80%9A%E7%9A%84%20function%20%E5%8F%82%E6%95%B0%E5%8D%B3%E6%98%AF%E8%BE%93%E5%85%A5%EF%BC%8C%E8%BF%94%E5%9B%9E%E5%80%BC%E5%8D%B3%E6%98%AF%E8%BE%93%E5%87%BA%EF%BC%8C%E8%BF%99%E7%A7%8D%E7%89%B9%E6%80%A7%E6%98%AF%E9%9D%9E%E5%B8%B8%E5%A5%BD%E5%86%99%20Unit%20Test%20%E7%9A%84%E3%80%82%0A%0A%E8%80%8C%E5%9C%A8%20function%20%E9%87%8C%E8%AE%BF%E9%97%AE%20this.xxx%20%E8%BF%99%E4%B8%AA%E6%96%B9%E5%BC%8F%EF%BC%8C%E5%B0%B1%E6%84%8F%E5%91%B3%E7%9D%80%E8%83%BD%E8%AE%BF%E9%97%AE%E7%9A%84%E5%AF%B9%E8%B1%A1%E5%8F%96%E5%86%B3%E4%BA%8E%E4%B8%8A%E4%B8%8B%E6%96%87%E8%80%8C%E9%9D%9E%E5%87%BD%E6%95%B0%E7%9A%84%E5%8F%82%E6%95%B0%EF%BC%8C%E8%BF%99%E4%BC%9A%E7%BB%99%E6%B5%8B%E8%AF%95%E5%B8%A6%E6%9D%A5%E7%81%BE%E9%9A%BE%EF%BC%8C%E4%BD%A0%E9%9C%80%E8%A6%81%E8%81%94%E7%B3%BB%E4%B8%8A%E4%B8%8B%E6%96%87%E6%89%8D%E8%83%BD%E7%9F%A5%E9%81%93%20this%20%E9%87%8C%E9%9D%A2%E7%A9%B6%E7%AB%9F%E6%9C%89%E4%BB%80%E4%B9%88%E3%80%82%0A%0A%E5%BD%93%E7%84%B6%20eggjs%20%E9%87%8C%E9%9D%A2%E5%8F%AA%E6%98%AF%E5%BE%80%20this.ctx%20%E6%8C%82%E8%BD%BD%E7%B1%BB%E4%BC%BC%E9%9D%99%E6%80%81%E7%B1%BB%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%B9%B6%E6%B2%A1%E6%9C%89%E4%BF%9D%E5%AD%98%E5%8F%98%E9%87%8F%EF%BC%8C%E4%B8%80%E5%AE%9A%E7%A8%8B%E5%BA%A6%E4%B8%8A%E9%81%BF%E5%85%8D%E4%BA%86%E6%B7%B7%E4%B9%B1%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%8C%E4%B8%8D%E8%BF%87%E5%BC%80%E4%BA%86%E8%BF%99%E4%B8%AA%E5%A4%B4%EF%BC%8C%E5%B0%B1%E5%AE%B9%E6%98%93%E8%B5%B0%E6%AD%AA%E4%BA%86%E3%80%82%0A%0A%23%23%20%E8%8E%B7%E5%8F%96%E8%B0%83%E7%94%A8%E9%93%BE%0A%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E6%98%AF%E5%A6%82%E4%BD%95%E8%A7%A3%E5%86%B3%E8%BF%99%E4%B8%AA%E9%97%AE%E9%A2%98%E7%9A%84%E5%91%A2%EF%BC%9F%0A%0A%23%23%23%20Java%20%E7%9A%84%20Threadlocal%0AJava%20%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E6%98%AF%20Threadlocal%2C%20%E5%9C%A8%20J2EE%20%E4%B8%AD%EF%BC%8C%E7%94%A8%E6%88%B7%E7%9A%84%E6%AF%8F%E4%B8%AA%E8%AF%B7%E6%B1%82%E9%83%BD%E4%BC%9A%E9%9D%9E%E9%85%8D%E7%BB%99%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%EF%BC%8CJava%20%E6%8F%90%E4%BE%9B%E4%BA%86%20Threadlocal%20%E8%BF%99%E6%A0%B7%E4%B8%80%E4%B8%AA%E5%85%B3%E4%BA%8E%E5%88%9B%E5%BB%BA%E7%BA%BF%E7%A8%8B%E5%B1%80%E9%83%A8%E5%8F%98%E9%87%8F%E7%9A%84%E7%B1%BB%E3%80%82%E9%80%9A%E5%B8%B8%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8C%E6%88%91%E4%BB%AC%E5%88%9B%E5%BB%BA%E7%9A%84%E5%8F%98%E9%87%8F%E6%98%AF%E5%8F%AF%E4%BB%A5%E8%A2%AB%E4%BB%BB%E4%BD%95%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E8%AE%BF%E9%97%AE%E5%B9%B6%E4%BF%AE%E6%94%B9%E7%9A%84%E3%80%82%E8%80%8C%E4%BD%BF%E7%94%A8ThreadLocal%E5%88%9B%E5%BB%BA%E7%9A%84%E5%8F%98%E9%87%8F%E5%8F%AA%E8%83%BD%E8%A2%AB%E5%BD%93%E5%89%8D%E7%BA%BF%E7%A8%8B%E8%AE%BF%E9%97%AE%EF%BC%8C%E5%85%B6%E4%BB%96%E7%BA%BF%E7%A8%8B%E5%88%99%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E5%92%8C%E4%BF%AE%E6%94%B9%E3%80%82%0A%0A%3E%E4%B8%80%E4%B8%AA%E8%AF%B7%E6%B1%82%E7%BB%91%E5%AE%9A%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%EF%BC%8C%E4%B8%80%E4%B8%AA%E7%BA%BF%E7%A8%8B%E7%BB%91%E5%AE%9A%E4%B8%80%E4%B8%AA%E5%8F%98%E9%87%8F%E3%80%82%0A%0A%E6%9C%89%E4%BA%86%E8%BF%99%E4%B8%AA%E7%89%B9%E6%80%A7%EF%BC%8CJava%20%E7%9A%84%20Web%20%E6%A1%86%E6%9E%B6%E4%B8%80%E8%88%AC%E4%BC%9A%E5%9C%A8%E7%BA%BF%E7%A8%8B%E5%88%9D%E5%A7%8B%E5%8C%96%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%8A%8A%20Session%20%E5%86%99%E5%85%A5%20Threadlocal%EF%BC%8C%E7%84%B6%E5%90%8E%E5%9C%A8%E4%BB%BB%E6%84%8F%E4%B8%80%E5%A4%84%E4%BB%A3%E7%A0%81%E4%B8%AD%E9%83%BD%E8%83%BD%E8%AE%BF%E9%97%AE%E5%88%B0%E5%90%8C%E4%B8%80%E4%B8%AA%20Session%E3%80%82%0A%0A%23%23%23%20Node.js%20%E7%9A%84%20async-hooks%0A%0A%E5%A5%BD%E6%B6%88%E6%81%AF%E6%98%AF%20Node%20%E4%B8%96%E7%95%8C%E9%87%8C%E4%B9%9F%E6%9C%89%E7%B1%BB%E4%BC%BC%20Java%20%E7%9A%84%20Threadlocal%20%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%B0%B1%E6%98%AF%20%5BAsync%20Hooks%5D(https%3A%2F%2Fnodejs.org%2Fapi%2Fasync_hooks.html%23async_hooks_async_hooks)%E3%80%82%0A%0A**%E6%B3%A8%E6%84%8F%20async_hooks%20%E7%9B%AE%E5%89%8D%E8%BF%98%E6%98%AF%E5%AE%9E%E9%AA%8C%E6%80%A7%E7%89%B9%E6%80%A7%EF%BC%81%E8%80%8C%E4%B8%94%E5%B7%B2%E7%BB%8F%E5%AE%9E%E9%AA%8C%E4%BA%86%202%20%E5%B9%B4%E5%A4%9A%E8%BF%98%E6%B2%A1%E8%BD%AC%E6%AD%A3%EF%BC%81**%0A%0AAsync%20hook%20%E5%AF%B9%E6%AF%8F%E4%B8%80%E4%B8%AA%E5%87%BD%E6%95%B0%EF%BC%88%E4%B8%8D%E8%AE%BA%E5%BC%82%E6%AD%A5%E8%BF%98%E6%98%AF%E5%90%8C%E6%AD%A5%EF%BC%89%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%80%E4%B8%AA%20Async%20scope%EF%BC%8C%E4%BD%A0%E5%8F%AF%E4%BB%A5%E9%80%9A%E8%BF%87%20async_hooks.currentId()%20%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E5%87%BD%E6%95%B0%E7%9A%84%20Async%20ID%E3%80%82%0A%0A%60%60%60js%0Aconst%20async_hooks%20%3D%20require('async_hooks')%3B%0A%0Aconsole.log('default%20Async%20Id'%2C%20async_hooks.currentId())%3B%20%2F%2F%201%0A%0Aprocess.nextTick(()%20%3D%3E%20%7B%0A%20%20console.log('nextTick%20Async%20Id'%2C%20async_hooks.currentId())%3B%20%2F%2F%205%0A%20%20test()%3B%0A%7D)%3B%0A%0Afunction%20test%20()%20%7B%0A%20%20console.log('nextTick%20Async%20Id'%2C%20async_hooks.currentId())%3B%20%2F%2F%205%0A%7D%0A%60%60%60%0A%0A%E5%9C%A8%E5%90%8C%E4%B8%80%E4%B8%AA%20Async%20scope%20%E4%B8%AD%EF%BC%8C%E4%BD%A0%E4%BC%9A%E6%8B%BF%E5%88%B0%E7%9B%B8%E5%90%8C%E7%9A%84%20Async%20ID%E3%80%82%0A%E5%9F%BA%E4%BA%8E%E8%BF%99%E4%B8%AA%E7%89%B9%E6%80%A7%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B0%B1%E8%83%BD%E8%BF%BD%E8%B8%AA%E4%B8%80%E4%B8%AA%E7%94%A8%E6%88%B7%E8%AF%B7%E6%B1%82%E8%A7%A6%E5%8F%91%E7%9A%84%E6%89%80%E6%9C%89%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C%E4%BA%86%E3%80%82%0A%0A%23%23%20%E5%9B%BD%E9%99%85%E5%8C%96%E7%9A%84%E6%9C%80%E7%BB%88%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88%0AOK%EF%BC%8C%E6%97%A2%E7%84%B6%E6%8A%80%E6%9C%AF%E4%B8%8A%E5%8F%AF%E8%A1%8C%EF%BC%8C%E9%82%A3%E6%88%91%E4%BB%AC%E5%B0%B1%E5%8F%AF%E4%BB%A5%E7%BB%99%E5%87%BA%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E4%BA%86%E3%80%82%0A1.%20%E4%BD%BF%E7%94%A8%20koa-locales%20%E5%AE%9E%E7%8E%B0%E5%A4%9A%E8%AF%AD%E8%A8%80%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E7%9A%84%E8%A7%A3%E6%9E%90%EF%BC%8C%E5%92%8C%E7%94%A8%E6%88%B7%E8%AF%AD%E8%A8%80%E7%9A%84%E8%AF%86%E5%88%AB%E3%80%82%0A2.%20%E6%8A%8A%20koa-locales%20%E9%87%8C%E8%BF%9B%E8%A1%8C%E6%96%87%E6%9C%AC%E7%BF%BB%E8%AF%91%E7%9A%84%E6%96%B9%E6%B3%95%E6%8A%BD%E6%88%90%E5%B7%A5%E5%85%B7%E7%B1%BB%0A2.%20%E7%BC%96%E5%86%99%E4%B8%80%E4%B8%AA%E8%BF%87%E6%BB%A4%E5%99%A8%EF%BC%8C%E6%8A%8A%E7%94%A8%E6%88%B7%E8%AF%AD%E8%A8%80%E4%B8%8E%20async_hooks%20%E7%9A%84%20Async%20ID%20%E7%BB%91%E5%AE%9A%0A3.%20%E5%9C%A8%20service%20%E5%B1%82%E4%BB%A3%E7%A0%81%E4%B8%AD%E8%B0%83%E7%94%A8%E5%B7%A5%E5%85%B7%E7%B1%BB%EF%BC%8C%E5%B7%A5%E5%85%B7%E7%B1%BB%E9%80%9A%E8%BF%87%20Async%20ID%20%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E7%94%A8%E6%88%B7%E7%9A%84%E8%AF%AD%E8%A8%80%EF%BC%8C%E8%BF%9B%E8%A1%8C%E6%96%87%E6%9C%AC%E7%BF%BB%E8%AF%91%E3%80%82%0A%0Aapp.ts%20%E6%B3%A8%E5%86%8C%0A%60%60%60ts%0Aconst%20koa%20%3D%20new%20Koa()%0A%2F%2F%20%E5%9B%BD%E9%99%85%E5%8C%96%0AinitI18n(koa%2C%20%7B%0A%20%20%2F%2F%20dirs%3A%20%5B'%24PWD%2Flocales'%5D%2C%0A%20%20functionName%3A%20'i18n'%2C%0A%20%20defaultLocale%3A%20'zh-CN'%0A%7D)%0A%60%60%60%0A%0AI18nUtil.ts%20%E5%B7%A5%E5%85%B7%E7%B1%BB%0A%60%60%60ts%0Aimport%20*%20as%20locales%20from%20'koa-locales'%0Aimport%20%7Blogger%7D%20from%20'%40akajs%2Futils'%0Aimport%20%7BcreateNamespace%7D%20from%20'cls-hooked'%0A%0Aconst%20session%20%3D%20createNamespace('i18n%20locale')%0A%0Alet%20defaultLocale%20%3D%20'zh-CN'%0A%0A%2F%2F%20%E6%8A%8A%20koa-locales%20%E7%9A%84%E6%96%87%E6%9C%AC%E7%BF%BB%E8%AF%91%E6%96%B9%E6%B3%95%E6%8A%BD%E5%87%BA%E6%9D%A5%0Alet%20gettext%20%3D%20function%20(locale%3A%20string%2C%20key%3A%20string%2C%20...values)%20%7B%0A%20%20%2F%2F%20%E7%AD%89%E5%BE%85%E8%A2%AB%E8%A6%86%E7%9B%96%0A%20%20return%20key%0A%7D%0A%0A%2F%2F%20%E6%96%B0%E7%9A%84%E6%96%87%E6%9C%AC%E7%BF%BB%E8%AF%91%E6%96%B9%E6%B3%95%EF%BC%8C%E7%BB%99%20Service%20%E5%B1%82%E8%B0%83%E7%94%A8%0Aexport%20function%20i18n%20(key%3F%3A%20string%2C%20...values%3A%20Array%3Cany%3E)%20%7B%0A%20%20%2F%2F%20get%20locale%0A%20%20logger.debug('locale%20form%20namespace%20'%2C%20session.get('locale'))%0A%20%20let%20locale%20%3D%20session.get('locale')%20%7C%7C%20defaultLocale%0A%20%20return%20gettext(locale%2C%20key%2C%20...values)%0A%7D%0A%0Aexport%20function%20initI18n%20(app%2C%20options)%20%7B%0A%20%20locales(app%2C%20options)%0A%20%20app.use(async%20(ctx%2C%20next)%20%3D%3E%20new%20Promise(%0A%20%20%20%20session.bind(async%20(resolve%2C%20reject)%20%3D%3E%20%7B%0A%20%20%20%20%20%20try%20%7B%0A%20%20%20%20%20%20%20%20let%20locale%20%3D%20ctx.__getLocale()%0A%20%20%20%20%20%20%20%20logger.debug('locale%20'%2C%20locale)%0A%20%20%20%20%20%20%20%20session.set('locale'%2C%20locale)%0A%20%20%20%20%20%20%20%20await%20next()%0A%20%20%20%20%20%20%20%20resolve()%0A%20%20%20%20%20%20%7D%20catch%20(err)%20%7B%0A%20%20%20%20%20%20%20%20reject(err)%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D)%0A%20%20))%0A%20%20gettext%20%3D%20app%5Boptions.functionName%20%7C%7C%20'__'%5D%0A%20%20defaultLocale%20%3D%20options.defaultLocale%0A%7D%0A%0A%60%60%60%0A%0AUserService.ts%20%E5%9C%A8%20Service%20%E4%B8%AD%E4%BD%BF%E7%94%A8%20i18n%0A%60%60%60ts%0Aasync%20register%20(value%3A%20RegisterDto)%20%7B%0A%20%20%20%20throw%20new%20BizError(i18n('Phone%20%25s%20Used'%2C%20phone))%0A%7D%0A%60%60%60%0A%0A%E6%9C%80%E7%BB%88%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9C%A8%E4%BB%BB%E6%84%8F%E4%BB%A3%E7%A0%81%E4%B8%AD%E5%BC%95%E5%85%A5%20I18nUtil.ts%20%E5%B7%A5%E5%85%B7%E7%B1%BB%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E5%87%86%E7%A1%AE%E8%8E%B7%E5%8F%96%E7%94%A8%E6%88%B7%E5%BD%93%E5%89%8D%E8%AF%AD%E8%A8%80%E4%BA%86%2C%20%E5%AE%9E%E9%99%85%E4%B8%8A%E6%98%AF%E4%B8%BA%E6%AF%8F%E4%B8%AA%E7%94%A8%E6%88%B7%E8%AF%B7%E6%B1%82%E5%BB%BA%E7%AB%8B%E4%B8%80%E4%B8%AA%20Session%EF%BC%9A%0A%3E%E7%94%A8%E6%88%B7%E5%8F%91%E8%B5%B7%E8%AF%B7%E6%B1%82%20--%3E%20%E4%B8%AD%E9%97%B4%E4%BB%B6%E4%BF%9D%E5%AD%98%E7%94%A8%E6%88%B7%E8%AF%AD%E8%A8%80%E5%88%B0%20session%20--%3E%20Service%20--%3E%20I18nUtil%20get%20%E7%94%A8%E6%88%B7%E8%AF%AD%E8%A8%80%20from%20session%E3%80%82%0A%0A%0A%0A%E8%A7%A3%E6%9E%90%EF%BC%9A%E6%9C%80%E7%BB%88%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88%E4%B8%AD%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B9%B6%E6%B2%A1%E6%9C%89%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%20async_hooks%20%E7%89%B9%E6%80%A7%EF%BC%8C%E8%80%8C%E6%98%AF%E7%94%A8%E4%BA%86%20%5Bcls-hooked%5D(https%3A%2F%2Fgithub.com%2FJeff-Lewis%2Fcls-hooked)%20%E8%BF%99%E4%B8%AA%E5%8C%85%E6%8F%90%E5%8D%87%E4%BA%86%E6%98%93%E7%94%A8%E6%80%A7%E5%92%8C%E5%85%BC%E5%AE%B9%E6%80%A7%EF%BC%8C%5BPandora.js%5D(https%3A%2F%2Fgithub.com%2Fmidwayjs%2Fpandora)%20%E8%BF%98%E4%BD%BF%E7%94%A8%E8%BF%99%E4%B8%AA%E5%8C%85%E6%9D%A5%E5%81%9A%20Node%20%E5%BA%94%E7%94%A8%E7%9A%84%E8%B0%83%E7%94%A8%E9%93%BE%E8%AE%B0%E5%BD%95%EF%BC%8C%E6%9C%89%E5%85%B4%E8%B6%A3%E7%9A%84%E5%8F%AF%E4%BB%A5%E4%BA%86%E8%A7%A3%E4%B8%8B%E3%80%82%0A%0A%0A%0A%0A%0A</center>"
  },
  {
    "title": "未来已来：云原生 Cloud Native",
    "created": "2019-08-27T18:18:02.000Z",
    "updated": "2019-11-20T20:23:06.000Z",
    "tags": [
      "Kubernetes",
      "posts",
      "架构"
    ],
    "content": "*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">前言</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">后端架构演化史</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">集中式架构</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">分布式系统架构</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">容器技术新纪元 Docker</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">微服务架构</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Kubernetes</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Service Mesh</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">总结</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">云原生 Cloud Native</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">什么是云 Cloud</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">什么是原生 Native</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Cloud Native 是道，Service Mesh 是术</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Service Mesh</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">纷争 2017</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">百家争鸣 2018</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">持续发展 2019</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Istio</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">连接</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">保护</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">控制</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">观测</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">总结</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">学习资料/指引</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">参考资料</a>\n\n## 前言\n\n自 2013 年容器（虚拟）技术（Docker）成熟后，后端的架构方式进入快速迭代的阶段，出现了很多新兴概念：\n\n*   微服务\n*   k8s\n*   Serverless\n*   IaaS：基础设施服务，Infrastructure-as-a-service\n*   PaaS：平台服务，Platform-as-a-service\n*   SaaS：软件服务，Software-as-a-service\n*   Cloud Native： 云原生\n*   Service Mesh\n\n后端架构的变迁和云计算的发展密切相关，架构其实在不断地适应云计算，特别是云原生，被誉为未来架构，在 2019 年，云原生落地方案 Service Mesh 在国内外全面开花，我认为，未来已来。\n\n接下来，我们将：\n\n*   梳理后端架构演化史，回顾后端架构发展历程；\n*   回顾云服务发展历程，探讨云原生概念；\n*   梳理云原生实现方案 Service Mesh 的发展历程；\n*   介绍 Service Mesh 的代表 Istio 的亮眼功能；\n\n## 后端架构演化史\n\n### 集中式架构\n\n集中式架构又叫单体式架构，在Web2.0模式并未大规模兴起时十分流行。后来，基于Web应用的B/S（Browser/Server）架构逐渐取代了基于桌面应用的C/S（Client/Server）架构。B/S架构的后端系统大都采用集中式架构，它当时以优雅的分层设计，统一了服务器后端的开发领域。\n\n集中式应用分为标准的3层架构模型：**数据访问层M、服务层V和逻辑控制层C**。每个层之间既可以共享领域模型对象，也可以进行更加细致的拆分。\n\n其缺点是\n\n*   编译时间过长;\n*   回归测试周期过长;\n*   开发效率降低等；\n*   不利于更新技术框架\n\n### 分布式系统架构\n\n对于互联网应用规模的迅速增长，集中式架构并无法做到无限制的提升系统的吞吐量，而分布式系统架构在理论上为吞吐量的上升提供了无限扩展的可能。因此，用于搭建互联网应用的服务器也渐渐地放弃了昂贵的小型机，转而采用大量的廉价PC服务器。\n\n### 容器技术新纪元 Docker\n\n分布式架构的概念很早就出现，阻碍其落地的最大问题是容器技术不成熟，应用程序在云平台运行，仍然需要为不同的开发语言安装相应的运行时环境。虽然自动化运维工具可以降低环境搭建的复杂度，但仍然不能从根本上解决环境的问题。\n\nDocker的出现成为了软件开发行业新的分水岭；容器技术的成熟，也标志技术新纪元的开启。Docker让开发工程师可以将他们的应用和依赖封装到一个可移植的容器中。就像当年智能手机的出现改变了整个手机行业的游戏规则一样，Docker也大有席卷整个软件行业，并且进而改变行业游戏规则的趋势。通过集装箱式的封装，开发和运维都以标准化的方式发布的应用，异构语言不再是桎梏团队的枷锁。\n\n在 Docker 之后，微服务得以流行开来\n\n### 微服务架构\n\n微服务架构风格是一种将一个单一应用程序开发为一组小型服务的方法，每个服务运行在自己的进程中，服务间通信采用轻量级通信机制(通常用HTTP资源API)。这些服务围绕业务能力构建并且可通过全自动部署机制独立部署。这些服务共用一个最小型的集中式的管理，服务可用不同的语言开发，使用不同的数据存储技术。\n\n**微服务优势**\n\n*   可扩展\n*   可升级\n*   易维护\n*   故障和资源的隔离\n\n**微服务的问题**\n\n但是，世界上没有完美无缺的事物，微服务也是一样。著名软件大师，被认为是十大软件架构师之一的 Chris Richardson 曾一针见血地指出：“微服务应用是分布式系统，由此会带来固有的复杂性。开发者需要在 RPC 或者消息传递之间选择并完成进程间通讯机制。此外，他们必须写代码来处理消息传递中速度过慢或者不可用等局部失效问题。”\n\n在微服务架构中，一般要处理以下几类问题：\n\n*   服务治理：弹性伸缩，故障隔离\n*   流量控制：路由，熔断，限速\n*   应用观测：指标度量、链式追踪\n\n**解决方案 Spring Cloud（Netflix OSS）**\n\n这是一个典型的微服务架构图  \n<en-media hash=\"904a5ec4b27483aee51c03c8557bd4d5\" type=\"image/png\"></en-media>\n\nSpring Cloud 体系提供了服务发现、负载均衡、失效转移、动态扩容、数据分片、调用链路监控等分布式系统的核心功能，一度成为微服务的最佳实践。\n\n**Spring Cloud 的问题**\n\n> 如果开始构建微服务的方法，肯定容易被 Netflix OSS/Java/Spring/SpringCloud 所吸引。但是要知道你不是Netflix，也不需要直接使用 AWS EC2，使得应用程序变得很复杂。如今使用 docker 和采用 memos/kubernetes 是明智之举，它们已经具备大量的分布式系统特性。在应用层进行分层，是因为 netflix 5年前面临的问题，而不得不这样做（可以说如果那时有了kubernetes，netflix OSS栈会大不相同）。\n> \n> 因此，建议谨慎选择，按需选择，避免给应用程序带来不必要的复杂度。\n\n的确 SpringCloud 方案看起来很美好，但是它具有非常强的侵入性，应用代码中会包含大量的 SpringCloud 模块，而且对其他编程语言也不友好。\n\n### Kubernetes\n\nKubernetes 出现就是为了解决 SpringCloud 的问题，不侵入应用层，在容器层解决问题。\n\n**Kubernetes 起源**\n\nKubernetes最初源于谷歌内部的Borg，提供了面向应用的容器集群部署和管理系统。\n\nKubernetes的目标旨在消除编排物理/虚拟计算，网络和存储基础设施的负担，并使应用程序运营商和开发人员完全将重点放在以容器为中心的原语上进行自助运营。\n\nKubernetes 也提供稳定、兼容的基础（平台），用于构建定制化的 workflows 和更高级的自动化任务。 Kubernetes 具备完善的集群管理能力，包括多层次的安全防护和准入机制、多租户应用支撑能力、**透明的服务注册和服务发现机制、内建负载均衡器、故障发现和自我修复能力、服务滚动升级和在线扩容、可扩展的资源自动调度机制、多粒度的资源配额管理能力**。\n\nKubernetes 还提供完善的管理工具，涵盖开发、部署测试、运维监控等各个环节。\n\n### Service Mesh\n\nService Mesh 是对 Kubernetes 的增强，提供了更多的能力。\n\n2018年9月1日，Bilgin Ibryam 在 InfoQ 发表了一篇文章 [Microservices in a Post-Kubernetes Era](https://www.infoq.com/articles/microservices-post-kubernetes/)，中文版见后 [Kubernetes 时代的微服务](https://www.infoq.cn/article/microservices-post-kubernetes)（译文有些错误，仅供参考）。\n\n文中作者的观点是：在后 Kubernetes 时代，服务网格（Service Mesh）技术已**完全取代了使用软件库实现**网络运维（例如 Hystrix 断路器）的方式。\n\n如果说 Kubernetes 对 Spring Cloud 开了第一枪，那么 Service Mesh 就是 Spring Cloud 的终结者。\n\n### 总结\n\n最后我们用一个流程图来描述后端架构的发展历程  \n<en-media hash=\"0ec340f33fb2b4dbdf558449107cca8e\" type=\"image/png\"></en-media>\n\n**每个关键节点的大概时间表**\n\n<table style=\"margin: 2px 0 14px; color: #333; width: auto; border-collapse: collapse; box-sizing: border-box;\">\n\n<thead style=\"line-height: 160%; box-sizing: content-box;\">\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<th style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #72777b; border-top: 0; background-color: #7b8184; font-weight: 300; color: #fff; padding-top: 6px;\">架构/技术</th>\n\n<th style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #72777b; border-top: 0; background-color: #7b8184; font-weight: 300; color: #fff; padding-top: 6px;\">时间/年份</th>\n\n</tr>\n\n</thead>\n\n<tbody style=\"line-height: 160%; box-sizing: content-box;\">\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">集中式架构</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">~</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">分布式架构</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">~</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">Docker</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">2013</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">微服务</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">2014</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">Spring Cloud</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">2014</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">Kubernetes 成熟</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">2017</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">Service Mesh</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">2017</td>\n\n</tr>\n\n</tbody>\n\n</table>\n\n可以看出，微服务生态这里，Spring Cloud 为代表的这条路已经后继无人了，未来属于 Service Mesh 。  \nService Mesh 经过2年的发展，目前 Service Mesh 已经足够成熟，已经有生产落地的案例，我们接下来就看看 Service Mesh，在此之前，我们要先理解一个概念，云原生。\n\n## 云原生 Cloud Native\n\n如何理解“云原生”？之所以将这个话题放在前面，是因为，这是对云原生概念的最基本的理解，而这会直接影响到后续的所有认知。\n\n**注意**：以下云原生的内容将全部引用敖小剑的 [畅谈云原生（上）：云原生应用应该是什么样子？](https://www.infoq.cn/article/fA42rfjV*dYGAvRANFqE) 这篇文章，图画得太好了。\n\n云原生的定义一直在发展，每个人对云原生的理解都可能不同，就如莎士比亚所说：一千个人眼中有一千个哈姆雷特。\n\n2018 年 CNCF ([Cloud Native Computing Foundation](https://www.cncf.io/))更新了云原生的定义。  \n <en-media hash=\"0e7bf2db484f18f3ca373bd0773ffab8\" type=\"image/png\">这是新定义中描述的代表技术，其中容器和微服务两项在不同时期的不同定义中都有出现，而服务网格这个在 2017 年才开始被社区接纳的新热点技术被非常醒目的列出来，和微服务并列，而不是我们通常认为的服务网格只是微服务在实施时的一种新的方式。</en-media>\n\n那我们该如何理解云原生呢？我们尝试一下，将 Cloud Native 这个词汇拆开来理解，先看看什么是 Cloud。\n\n### 什么是云 Cloud\n\n快速回顾一下云计算的历史，来帮助我们对云有个更感性的认识。\n\n<en-media hash=\"84e47db0ce05a2ca9a3ecb06317b5adb\" type=\"image/png\"></en-media>\n\n云计算的出现和虚拟化技术的发展和成熟密切相关，2000 年前后 x86 的虚拟机技术成熟后，云计算逐渐发展起来。\n\n<en-media hash=\"372d7d3fb6da14098b5b63245401c814\" type=\"image/png\"></en-media>\n\n基于虚拟机技术，陆续出现了 IaaS/PaaS/FaaS 等形态，以及他们的开源版本。\n\n<en-media hash=\"cb84372097b3e35cb9a1d48c24d56fcf\" type=\"image/png\"></en-media>\n\n2013 年 docker 出现，容器技术成熟，然后围绕容器编排一场大战，最后在 2017 年底，kubernetes 胜出。2015 年 CNCF 成立，并在近年形成了 cloud native 生态。\n\n在这个过程中，云的形态一直变化，可以看到：供应商提供的功能越来越多，而客户或者说应用需要自己管理的功能越来越少。  \n<en-media hash=\"03bdb5f6de728bdb76dbb9a003b62263\" type=\"image/png\"></en-media>\n\n <en-media hash=\"0185a2a404942f2aec01b6933a87f909\" type=\"image/png\">**架构也在一直适应云计算的变化**</en-media>\n\n### 什么是原生 Native\n\n在回顾完云计算的历史之后，我们对 Cloud 有更深的认识，接着继续看一下：什么是 Native？  \n字典的解释是：与生俱来的。  \n那 Cloud 和 native 和在一起，又该如何理解？  \n<en-media hash=\"bd47c8d112f60f5e91e3aab6bd7679dc\" type=\"image/png\"></en-media>\n\n这里我们抛出一个我们自己的理解：云原生代表着原生为云设计。详细的解释是：应用原生被设计为在云上以最佳方式运行，充分发挥云的优势。\n\n这个理解有点空泛，但是考虑到云原生的定义和特征在这些年间不停的变化，以及完全可以预料到的在未来的必然变化，我觉得，对云原生的理解似乎也只能回到云原生的出发点，而不是如何具体实现。\n\n### Cloud Native 是道，Service Mesh 是术\n\n那在这么一个云原生理解的背景下，我再来介绍一下我对云原生应用的设想，也就是我觉得云原生应用应该是什么样子。\n\n<en-media hash=\"8f712541c80eb2f3d13b408e62031575\" type=\"image/png\"></en-media>\n\n在云原生之前，底层平台负责向上提供基本运行资源。而应用需要满足业务需求和非业务需求，为了更好的代码复用，通用型好的非业务需求的实现往往会以类库和开发框架的方式提供，另外在 SOA/ 微服务时代部分功能会以后端服务的方式存在，这样在应用中就被简化为对其客户端的调用代码。\n\n然后应用将这些功能，连同自身的业务实现代码，一起打包。\n\n<en-media hash=\"5d3cf3ad2988beee45dc45f82427fd6e\" type=\"image/png\"></en-media>\n\n而云的出现，可以在提供各种资源之外，还提供各种能力，从而帮助应用，使得应用可以专注于业务需求的实现。  \n非业务需求相关的功能都被移到云，或者说基础设施中去了，以及下沉到基础设施的中间件。\n\n<en-media hash=\"fe0338fc565e48553b3c8622a369bd36\" type=\"image/png\"></en-media>\n\n以服务间通讯为例：需要实现上面列举的各种功能。\n\n<en-media hash=\"c75c392145f3f39bd9042edce786e256\" type=\"image/png\"></en-media>\n\nSDK 的思路：在应用层添加一个胖客户端，在这个客户端中实现各种功能。\n\n<en-media hash=\"1572f7e930ce0fc442ae21ac5e2de455\" type=\"image/png\"></en-media>\n\nService Mesh 的思路，体现在将 SDK 客户端的功能剥离出来，放到 Sidecar 中。就是把更多的事情下沉，下沉到基础设施中。\n\n<en-media hash=\"5176d2f8527054aac3e7106487090d80\" type=\"image/png\"></en-media>\n\n在用户看来，应用长这样：\n\n<en-media hash=\"be9bfa387db52c4eaeb235c7a7a01945\" type=\"image/png\"></en-media>\n\n云原生是我们的目标，Service Mesh 交出了自己的答卷，接下来我们可以回到 Service Mesh 这里了。\n\n## Service Mesh\n\n其中文译名是**服务网格**，这个词最早使用由开发Linkerd的Buoyant公司提出，并在内部使用。\n\n定义  \n<en-media hash=\"4123d50c20385fa9300b32e039a6894a\" type=\"image/png\"></en-media>\n\n服务网格的基本构成\n\n<en-media hash=\"8b69728340e60bc09d05422a21a85977\" type=\"image/png\"></en-media>\n\n### 纷争 2017\n\n2017 年年底，当非侵入式的 Service Mesh 技术终于从萌芽到走向了成熟，当 Istio/Conduit 横空出世，人们才惊觉：微服务并非只有侵入式一种玩法，更不是 Spring Cloud 的独角戏！\n\n[解读 2017 之 Service Mesh：群雄逐鹿烽烟起](https://www.infoq.cn/article/2017-service-mesh)\n\n文章总结一下：  \n创业公司 Buoyant 的产品 Linkerd 开局拿下一血；  \nEnvoy 默默耕耘；  \n从 Google 和 IBM 联手推出 Istio，Linkerd 急转直下；  \n2017 年底 Buoyant 推出 Conduit 背水一战；  \nNginmesh 与 Kong 低调参与；\n\n### 百家争鸣 2018\n\n2018 年，Service Mesh 又多了哪些内容呢？在 2018 年，Service Mesh 在国内大热，有多家公司推出自己的 Service Mesh 产品和方案，Service Mesh 更加热闹了。  \n详细见这篇文章 [下一代微服务！Service Mesh 2018 年度总结](https://www.infoq.cn/article/DtxylyFwlyl7K5Jte*WI)\n\n文章总结一下：  \nService Mesh 在国内大热，有多家公司加入战场；  \nIstio 发布1.0，成为最受欢迎的 Service Mesh 项目，获得多方支持；  \nEnvoy 继续稳扎稳打，Envoy 被 Istio 直接采用为数据平面，有望成为数据平面标准；  \nLinkerd1.x 陷入困境，Conduit 小步快跑，但响应平平，Buoyant 公司决定合并产品线，Linkerd1.x + Conduit = Linkerd2.0；  \n更多的公司参与 Service Mesh，国外有 Nginx、Consul、Kong、AWS等，国内有蚂蚁金服、新浪微博、华为，阿里 Dubbo，腾讯等；\n\n### 持续发展 2019\n\n2019 将会听到更多 Service Mesh 的声音，请关注[Service Mesh 中文社区](https://www.servicemesher.com)\n\n## Istio\n\n前文讲到 Istio 是当前最受欢迎的 Service Mesh 框架，一句话定义 Istio：一个用来连接、管理和保护微服务的开放平台。  \n它能给我们的微服务提供哪些功能呢？\n\n### 连接\n\n*   动态路由\n*   超时重试\n*   熔断\n*   故障注入\n\n[详细见官网介绍](https://istio.io/zh/docs/tasks/traffic-management/)\n\n### 保护\n\n安全问题一开始就要做好，在 Istio 实现安全通讯是非常方便的。\n\nIstio 支持双向 TLS 加密\n\n[见官方文档](https://istio.io/zh/docs/tasks/security/)\n\n### 控制\n\n速率限制  \n黑白名单\n\n[见官方文档](https://istio.io/zh/docs/tasks/policy-enforcement/)\n\n### 观测\n\n*   指标度量：每秒请求数，Prometheus 与 Grafana  \n    使用 Grafana 观测流量情况  \n    <en-media hash=\"e0d7a41c3390fbaf08c9520c5a6be80b\" type=\"image/png\"></en-media>\n\n*   分布式追踪：Jaeger 或 Zipkin  \n    快速观测调用链路  \n    <en-media hash=\"1b1793a797651edd432a7d15b9af2b46\" type=\"image/png\"></en-media>\n\n*   日志：非应用日志\n\n*   网格可视化  \n    快速理清服务的关系  \n    <en-media hash=\"0212a2ab8c82fe4469ccf48f761d4752\" type=\"image/png\"></en-media>\n\n## 总结\n\n虚拟化技术推动这云计算技术的变革，顺带也影响了后端架构的演进，目前我们身处云时代，将会有更多的元原生应用出现，Istio 作为其中的佼佼者，值得你投入一份精力了解一下。\n\n## 学习资料/指引\n\n[Service Mesh 中文社区](https://www.servicemesher.com) 上面提供了丰富的学习资料。\n\n搭建 Kubernetes 集群会比较麻烦，推荐几种方式。主要原因是很多镜像需要翻墙才能下载。\n\n1.  Docker Desktop 自带的 Kubernetes 集群\n2.  [使用 Rancher2.0 搭建 Kubernetes 集群](https://blog.csdn.net/aixiaoyang168/article/details/88600530)\n3.  在 Google Cloud 上直接开集群，可以领 300 美金的体验金，需要翻墙\n\n不推荐 MiniKube,翻墙和代理问题非常难搞。  \n再附上 Docker [设置代理的方式](https://zhuanlan.zhihu.com/p/26033249)\n\n[在线体验 Istio](https://katacoda.com/courses/istio/deploy-istio-on-kubernetes)\n\n## 参考资料\n\n[kubernetes-handbook](https://jimmysong.io/kubernetes-handbook/)\n\n[istio-handbook](https://www.servicemesher.com/istio-handbook/)\n\n[微服务学习笔记](https://skyao.gitbooks.io/learning-microservice/content/definition/Martin-Fowler/microservices.html)\n\n[畅谈云原生（上）：云原生应用应该是什么样子？](https://www.infoq.cn/article/fA42rfjV*dYGAvRANFqE)\n\n[Service Mesh：下一代微服务？](https://juejin.im/entry/59fbab2151882576ea350afb)\n\n[从架构到组件，深挖istio如何连接、管理和保护微服务2.0？](https://www.jianshu.com/p/8104194ff6fd)\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%20%20%5BTOC%5D%0A%20%20%0A%23%23%20%E5%89%8D%E8%A8%80%0A%0A%E8%87%AA%202013%20%E5%B9%B4%E5%AE%B9%E5%99%A8%EF%BC%88%E8%99%9A%E6%8B%9F%EF%BC%89%E6%8A%80%E6%9C%AF%EF%BC%88Docker%EF%BC%89%E6%88%90%E7%86%9F%E5%90%8E%EF%BC%8C%E5%90%8E%E7%AB%AF%E7%9A%84%E6%9E%B6%E6%9E%84%E6%96%B9%E5%BC%8F%E8%BF%9B%E5%85%A5%E5%BF%AB%E9%80%9F%E8%BF%AD%E4%BB%A3%E7%9A%84%E9%98%B6%E6%AE%B5%EF%BC%8C%E5%87%BA%E7%8E%B0%E4%BA%86%E5%BE%88%E5%A4%9A%E6%96%B0%E5%85%B4%E6%A6%82%E5%BF%B5%EF%BC%9A%0A-%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%0A-%20k8s%0A-%20Serverless%0A-%20IaaS%EF%BC%9A%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E6%9C%8D%E5%8A%A1%EF%BC%8CInfrastructure-as-a-service%0A-%20PaaS%EF%BC%9A%E5%B9%B3%E5%8F%B0%E6%9C%8D%E5%8A%A1%EF%BC%8CPlatform-as-a-service%0A-%20SaaS%EF%BC%9A%E8%BD%AF%E4%BB%B6%E6%9C%8D%E5%8A%A1%EF%BC%8CSoftware-as-a-service%0A-%20Cloud%20Native%EF%BC%9A%20%E4%BA%91%E5%8E%9F%E7%94%9F%0A-%20Service%20Mesh%0A%0A%0A%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84%E7%9A%84%E5%8F%98%E8%BF%81%E5%92%8C%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9A%84%E5%8F%91%E5%B1%95%E5%AF%86%E5%88%87%E7%9B%B8%E5%85%B3%EF%BC%8C%E6%9E%B6%E6%9E%84%E5%85%B6%E5%AE%9E%E5%9C%A8%E4%B8%8D%E6%96%AD%E5%9C%B0%E9%80%82%E5%BA%94%E4%BA%91%E8%AE%A1%E7%AE%97%EF%BC%8C%E7%89%B9%E5%88%AB%E6%98%AF%E4%BA%91%E5%8E%9F%E7%94%9F%EF%BC%8C%E8%A2%AB%E8%AA%89%E4%B8%BA%E6%9C%AA%E6%9D%A5%E6%9E%B6%E6%9E%84%EF%BC%8C%E5%9C%A8%202019%20%E5%B9%B4%EF%BC%8C%E4%BA%91%E5%8E%9F%E7%94%9F%E8%90%BD%E5%9C%B0%E6%96%B9%E6%A1%88%20Service%20Mesh%20%E5%9C%A8%E5%9B%BD%E5%86%85%E5%A4%96%E5%85%A8%E9%9D%A2%E5%BC%80%E8%8A%B1%EF%BC%8C%E6%88%91%E8%AE%A4%E4%B8%BA%EF%BC%8C%E6%9C%AA%E6%9D%A5%E5%B7%B2%E6%9D%A5%E3%80%82%0A%0A%E6%8E%A5%E4%B8%8B%E6%9D%A5%EF%BC%8C%E6%88%91%E4%BB%AC%E5%B0%86%EF%BC%9A%0A-%20%E6%A2%B3%E7%90%86%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84%E6%BC%94%E5%8C%96%E5%8F%B2%EF%BC%8C%E5%9B%9E%E9%A1%BE%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B%EF%BC%9B%0A-%20%E5%9B%9E%E9%A1%BE%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B%EF%BC%8C%E6%8E%A2%E8%AE%A8%E4%BA%91%E5%8E%9F%E7%94%9F%E6%A6%82%E5%BF%B5%EF%BC%9B%0A-%20%E6%A2%B3%E7%90%86%E4%BA%91%E5%8E%9F%E7%94%9F%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88%20Service%20Mesh%20%E7%9A%84%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B%EF%BC%9B%0A-%20%E4%BB%8B%E7%BB%8D%20Service%20Mesh%20%E7%9A%84%E4%BB%A3%E8%A1%A8%20Istio%20%E7%9A%84%E4%BA%AE%E7%9C%BC%E5%8A%9F%E8%83%BD%EF%BC%9B%0A%0A%23%23%20%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84%E6%BC%94%E5%8C%96%E5%8F%B2%0A%0A%23%23%23%20%E9%9B%86%E4%B8%AD%E5%BC%8F%E6%9E%B6%E6%9E%84%20%0A%E9%9B%86%E4%B8%AD%E5%BC%8F%E6%9E%B6%E6%9E%84%E5%8F%88%E5%8F%AB%E5%8D%95%E4%BD%93%E5%BC%8F%E6%9E%B6%E6%9E%84%EF%BC%8C%E5%9C%A8Web2.0%E6%A8%A1%E5%BC%8F%E5%B9%B6%E6%9C%AA%E5%A4%A7%E8%A7%84%E6%A8%A1%E5%85%B4%E8%B5%B7%E6%97%B6%E5%8D%81%E5%88%86%E6%B5%81%E8%A1%8C%E3%80%82%E5%90%8E%E6%9D%A5%EF%BC%8C%E5%9F%BA%E4%BA%8EWeb%E5%BA%94%E7%94%A8%E7%9A%84B%2FS%EF%BC%88Browser%2FServer%EF%BC%89%E6%9E%B6%E6%9E%84%E9%80%90%E6%B8%90%E5%8F%96%E4%BB%A3%E4%BA%86%E5%9F%BA%E4%BA%8E%E6%A1%8C%E9%9D%A2%E5%BA%94%E7%94%A8%E7%9A%84C%2FS%EF%BC%88Client%2FServer%EF%BC%89%E6%9E%B6%E6%9E%84%E3%80%82B%2FS%E6%9E%B6%E6%9E%84%E7%9A%84%E5%90%8E%E7%AB%AF%E7%B3%BB%E7%BB%9F%E5%A4%A7%E9%83%BD%E9%87%87%E7%94%A8%E9%9B%86%E4%B8%AD%E5%BC%8F%E6%9E%B6%E6%9E%84%EF%BC%8C%E5%AE%83%E5%BD%93%E6%97%B6%E4%BB%A5%E4%BC%98%E9%9B%85%E7%9A%84%E5%88%86%E5%B1%82%E8%AE%BE%E8%AE%A1%EF%BC%8C%E7%BB%9F%E4%B8%80%E4%BA%86%E6%9C%8D%E5%8A%A1%E5%99%A8%E5%90%8E%E7%AB%AF%E7%9A%84%E5%BC%80%E5%8F%91%E9%A2%86%E5%9F%9F%E3%80%82%0A%0A%0A%E9%9B%86%E4%B8%AD%E5%BC%8F%E5%BA%94%E7%94%A8%E5%88%86%E4%B8%BA%E6%A0%87%E5%87%86%E7%9A%843%E5%B1%82%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%9E%8B%EF%BC%9A**%E6%95%B0%E6%8D%AE%E8%AE%BF%E9%97%AE%E5%B1%82M%E3%80%81%E6%9C%8D%E5%8A%A1%E5%B1%82V%E5%92%8C%E9%80%BB%E8%BE%91%E6%8E%A7%E5%88%B6%E5%B1%82C**%E3%80%82%E6%AF%8F%E4%B8%AA%E5%B1%82%E4%B9%8B%E9%97%B4%E6%97%A2%E5%8F%AF%E4%BB%A5%E5%85%B1%E4%BA%AB%E9%A2%86%E5%9F%9F%E6%A8%A1%E5%9E%8B%E5%AF%B9%E8%B1%A1%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%BF%9B%E8%A1%8C%E6%9B%B4%E5%8A%A0%E7%BB%86%E8%87%B4%E7%9A%84%E6%8B%86%E5%88%86%E3%80%82%0A%0A%E5%85%B6%E7%BC%BA%E7%82%B9%E6%98%AF%0A-%20%E7%BC%96%E8%AF%91%E6%97%B6%E9%97%B4%E8%BF%87%E9%95%BF%3B%0A-%20%E5%9B%9E%E5%BD%92%E6%B5%8B%E8%AF%95%E5%91%A8%E6%9C%9F%E8%BF%87%E9%95%BF%3B%0A-%20%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E9%99%8D%E4%BD%8E%E7%AD%89%EF%BC%9B%0A-%20%E4%B8%8D%E5%88%A9%E4%BA%8E%E6%9B%B4%E6%96%B0%E6%8A%80%E6%9C%AF%E6%A1%86%E6%9E%B6%0A%0A%23%23%23%20%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%0A%0A%E5%AF%B9%E4%BA%8E%E4%BA%92%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E8%A7%84%E6%A8%A1%E7%9A%84%E8%BF%85%E9%80%9F%E5%A2%9E%E9%95%BF%EF%BC%8C%E9%9B%86%E4%B8%AD%E5%BC%8F%E6%9E%B6%E6%9E%84%E5%B9%B6%E6%97%A0%E6%B3%95%E5%81%9A%E5%88%B0%E6%97%A0%E9%99%90%E5%88%B6%E7%9A%84%E6%8F%90%E5%8D%87%E7%B3%BB%E7%BB%9F%E7%9A%84%E5%90%9E%E5%90%90%E9%87%8F%EF%BC%8C%E8%80%8C%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E6%9E%B6%E6%9E%84%E5%9C%A8%E7%90%86%E8%AE%BA%E4%B8%8A%E4%B8%BA%E5%90%9E%E5%90%90%E9%87%8F%E7%9A%84%E4%B8%8A%E5%8D%87%E6%8F%90%E4%BE%9B%E4%BA%86%E6%97%A0%E9%99%90%E6%89%A9%E5%B1%95%E7%9A%84%E5%8F%AF%E8%83%BD%E3%80%82%E5%9B%A0%E6%AD%A4%EF%BC%8C%E7%94%A8%E4%BA%8E%E6%90%AD%E5%BB%BA%E4%BA%92%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E7%9A%84%E6%9C%8D%E5%8A%A1%E5%99%A8%E4%B9%9F%E6%B8%90%E6%B8%90%E5%9C%B0%E6%94%BE%E5%BC%83%E4%BA%86%E6%98%82%E8%B4%B5%E7%9A%84%E5%B0%8F%E5%9E%8B%E6%9C%BA%EF%BC%8C%E8%BD%AC%E8%80%8C%E9%87%87%E7%94%A8%E5%A4%A7%E9%87%8F%E7%9A%84%E5%BB%89%E4%BB%B7PC%E6%9C%8D%E5%8A%A1%E5%99%A8%E3%80%82%0A%0A%23%23%23%20%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E6%96%B0%E7%BA%AA%E5%85%83%20Dockerocker%E7%9A%84%E5%87%BA%E7%8E%B0%E6%88%90%E4%B8%BA%E4%BA%86%E8%BD%AF%E4%BB%B6%E5%BC%80%E5%8F%91%E8%A1%8C%E4%B8%9A%E6%96%B0%E7%9A%84%E5%88%86%E6%B0%B4%E5%B2%AD%EF%BC%9B%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E7%9A%84%E6%88%90%E7%86%9F%EF%BC%8C%E4%B9%9F%E6%A0%87%E5%BF%97%E6%8A%80%E6%9C%AF%E6%96%B0%E7%BA%AA%E5%85%83%E7%9A%84%E5%BC%80%E5%90%AF%E3%80%82Docker%E8%AE%A9%E5%BC%80%E5%8F%91%E5%B7%A5%E7%A8%8B%E5%B8%88%E5%8F%AF%E4%BB%A5%E5%B0%86%E4%BB%96%E4%BB%AC%E7%9A%84%E5%BA%94%E7%94%A8%E5%92%8C%E4%BE%9D%E8%B5%96%E5%B0%81%E8%A3%85%E5%88%B0%E4%B8%80%E4%B8%AA%E5%8F%AF%E7%A7%BB%E6%A4%8D%E7%9A%84%E5%AE%B9%E5%99%A8%E4%B8%AD%E3%80%82%E5%B0%B1%E5%83%8F%E5%BD%93%E5%B9%B4%E6%99%BA%E8%83%BD%E6%89%8B%E6%9C%BA%E7%9A%84%E5%87%BA%E7%8E%B0%E6%94%B9%E5%8F%98%E4%BA%86%E6%95%B4%E4%B8%AA%E6%89%8B%E6%9C%BA%E8%A1%8C%E4%B8%9A%E7%9A%84%E6%B8%B8%E6%88%8F%E8%A7%84%E5%88%99%E4%B8%80%E6%A0%B7%EF%BC%8CDocker%E4%B9%9F%E5%A4%A7%E6%9C%89%E5%B8%AD%E5%8D%B7%E6%95%B4%E4%B8%AA%E8%BD%AF%E4%BB%B6%E8%A1%8C%E4%B8%9A%EF%BC%8C%E5%B9%B6%E4%B8%94%E8%BF%9B%E8%80%8C%E6%94%B9%E5%8F%98%E8%A1%8C%E4%B8%9A%E6%B8%B8%E6%88%8F%E8%A7%84%E5%88%99%E7%9A%84%E8%B6%8B%E5%8A%BF%E3%80%82%E9%80%9A%E8%BF%87%E9%9B%86%E8%A3%85%E7%AE%B1%E5%BC%8F%E7%9A%84%E5%B0%81%E8%A3%85%EF%BC%8C%E5%BC%80%E5%8F%91%E5%92%8C%E8%BF%90%E7%BB%B4%E9%83%BD%E4%BB%A5%E6%A0%87%E5%87%86%E5%8C%96%E7%9A%84%E6%96%B9%E5%BC%8F%E5%8F%91%E5%B8%83%E7%9A%84%E5%BA%94%E7%94%A8%EF%BC%8C%E5%BC%82%E6%9E%84%E8%AF%AD%E8%A8%80%E4%B8%8D%E5%86%8D%E6%98%AF%E6%A1%8E%E6%A2%8F%E5%9B%A2%E9%98%9F%E7%9A%84%E6%9E%B7%E9%94%81%E3%80%82%0A%0A%E5%9C%A8%20Docker%20%E4%B9%8B%E5%90%8E%EF%BC%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BE%97%E4%BB%A5%E6%B5%81%E8%A1%8C%E5%BC%80%E6%9D%A5%0A%0A%23%23%23%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%0A%0A%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E9%A3%8E%E6%A0%BC%E6%98%AF%E4%B8%80%E7%A7%8D%E5%B0%86%E4%B8%80%E4%B8%AA%E5%8D%95%E4%B8%80%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%8F%91%E4%B8%BA%E4%B8%80%E7%BB%84%E5%B0%8F%E5%9E%8B%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E6%AF%8F%E4%B8%AA%E6%9C%8D%E5%8A%A1%E8%BF%90%E8%A1%8C%E5%9C%A8%E8%87%AA%E5%B7%B1%E7%9A%84%E8%BF%9B%E7%A8%8B%E4%B8%AD%EF%BC%8C%E6%9C%8D%E5%8A%A1%E9%97%B4%E9%80%9A%E4%BF%A1%E9%87%87%E7%94%A8%E8%BD%BB%E9%87%8F%E7%BA%A7%E9%80%9A%E4%BF%A1%E6%9C%BA%E5%88%B6(%E9%80%9A%E5%B8%B8%E7%94%A8HTTP%E8%B5%84%E6%BA%90API)%E3%80%82%E8%BF%99%E4%BA%9B%E6%9C%8D%E5%8A%A1%E5%9B%B4%E7%BB%95%E4%B8%9A%E5%8A%A1%E8%83%BD%E5%8A%9B%E6%9E%84%E5%BB%BA%E5%B9%B6%E4%B8%94%E5%8F%AF%E9%80%9A%E8%BF%87%E5%85%A8%E8%87%AA%E5%8A%A8%E9%83%A8%E7%BD%B2%E6%9C%BA%E5%88%B6%E7%8B%AC%E7%AB%8B%E9%83%A8%E7%BD%B2%E3%80%82%E8%BF%99%E4%BA%9B%E6%9C%8D%E5%8A%A1%E5%85%B1%E7%94%A8%E4%B8%80%E4%B8%AA%E6%9C%80%E5%B0%8F%E5%9E%8B%E7%9A%84%E9%9B%86%E4%B8%AD%E5%BC%8F%E7%9A%84%E7%AE%A1%E7%90%86%EF%BC%8C%E6%9C%8D%E5%8A%A1%E5%8F%AF%E7%94%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E8%AF%AD%E8%A8%80%E5%BC%80%E5%8F%91%EF%BC%8C%E4%BD%BF%E7%94%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%E6%8A%80%E6%9C%AF%E3%80%82%0A%0A**%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BC%98%E5%8A%BF**%0A-%20%E5%8F%AF%E6%89%A9%E5%B1%95%0A-%20%E5%8F%AF%E5%8D%87%E7%BA%A7%0A-%20%E6%98%93%E7%BB%B4%E6%8A%A4%0A-%20%E6%95%85%E9%9A%9C%E5%92%8C%E8%B5%84%E6%BA%90%E7%9A%84%E9%9A%94%E7%A6%BB%0A%0A**%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E9%97%AE%E9%A2%98**%0A%0A%E4%BD%86%E6%98%AF%EF%BC%8C%E4%B8%96%E7%95%8C%E4%B8%8A%E6%B2%A1%E6%9C%89%E5%AE%8C%E7%BE%8E%E6%97%A0%E7%BC%BA%E7%9A%84%E4%BA%8B%E7%89%A9%EF%BC%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B9%9F%E6%98%AF%E4%B8%80%E6%A0%B7%E3%80%82%E8%91%97%E5%90%8D%E8%BD%AF%E4%BB%B6%E5%A4%A7%E5%B8%88%EF%BC%8C%E8%A2%AB%E8%AE%A4%E4%B8%BA%E6%98%AF%E5%8D%81%E5%A4%A7%E8%BD%AF%E4%BB%B6%E6%9E%B6%E6%9E%84%E5%B8%88%E4%B9%8B%E4%B8%80%E7%9A%84%20Chris%20Richardson%20%E6%9B%BE%E4%B8%80%E9%92%88%E8%A7%81%E8%A1%80%E5%9C%B0%E6%8C%87%E5%87%BA%EF%BC%9A%E2%80%9C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BA%94%E7%94%A8%E6%98%AF%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%EF%BC%8C%E7%94%B1%E6%AD%A4%E4%BC%9A%E5%B8%A6%E6%9D%A5%E5%9B%BA%E6%9C%89%E7%9A%84%E5%A4%8D%E6%9D%82%E6%80%A7%E3%80%82%E5%BC%80%E5%8F%91%E8%80%85%E9%9C%80%E8%A6%81%E5%9C%A8%20RPC%20%E6%88%96%E8%80%85%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92%E4%B9%8B%E9%97%B4%E9%80%89%E6%8B%A9%E5%B9%B6%E5%AE%8C%E6%88%90%E8%BF%9B%E7%A8%8B%E9%97%B4%E9%80%9A%E8%AE%AF%E6%9C%BA%E5%88%B6%E3%80%82%E6%AD%A4%E5%A4%96%EF%BC%8C%E4%BB%96%E4%BB%AC%E5%BF%85%E9%A1%BB%E5%86%99%E4%BB%A3%E7%A0%81%E6%9D%A5%E5%A4%84%E7%90%86%E6%B6%88%E6%81%AF%E4%BC%A0%E9%80%92%E4%B8%AD%E9%80%9F%E5%BA%A6%E8%BF%87%E6%85%A2%E6%88%96%E8%80%85%E4%B8%8D%E5%8F%AF%E7%94%A8%E7%AD%89%E5%B1%80%E9%83%A8%E5%A4%B1%E6%95%88%E9%97%AE%E9%A2%98%E3%80%82%E2%80%9D%0A%0A%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%EF%BC%8C%E4%B8%80%E8%88%AC%E8%A6%81%E5%A4%84%E7%90%86%E4%BB%A5%E4%B8%8B%E5%87%A0%E7%B1%BB%E9%97%AE%E9%A2%98%EF%BC%9A%0A-%20%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%EF%BC%9A%E5%BC%B9%E6%80%A7%E4%BC%B8%E7%BC%A9%EF%BC%8C%E6%95%85%E9%9A%9C%E9%9A%94%E7%A6%BB%0A-%20%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%EF%BC%9A%E8%B7%AF%E7%94%B1%EF%BC%8C%E7%86%94%E6%96%AD%EF%BC%8C%E9%99%90%E9%80%9F%0A-%20%E5%BA%94%E7%94%A8%E8%A7%82%E6%B5%8B%EF%BC%9A%E6%8C%87%E6%A0%87%E5%BA%A6%E9%87%8F%E3%80%81%E9%93%BE%E5%BC%8F%E8%BF%BD%E8%B8%AA%0A%0A**%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%20Spring%20Cloud%EF%BC%88Netflix%20OSS%EF%BC%89**%0A%0A%E8%BF%99%E6%98%AF%E4%B8%80%E4%B8%AA%E5%85%B8%E5%9E%8B%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E5%9B%BE%0A!%5B904a5ec4b27483aee51c03c8557bd4d5.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1991)%0A%0A%0ASpring%20Cloud%20%E4%BD%93%E7%B3%BB%E6%8F%90%E4%BE%9B%E4%BA%86%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E3%80%81%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E3%80%81%E5%A4%B1%E6%95%88%E8%BD%AC%E7%A7%BB%E3%80%81%E5%8A%A8%E6%80%81%E6%89%A9%E5%AE%B9%E3%80%81%E6%95%B0%E6%8D%AE%E5%88%86%E7%89%87%E3%80%81%E8%B0%83%E7%94%A8%E9%93%BE%E8%B7%AF%E7%9B%91%E6%8E%A7%E7%AD%89%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%9A%84%E6%A0%B8%E5%BF%83%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%B8%80%E5%BA%A6%E6%88%90%E4%B8%BA%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%E3%80%82%0A%0A%0A**Spring%20Cloud%20%E7%9A%84%E9%97%AE%E9%A2%98**%0A%3E%E5%A6%82%E6%9E%9C%E5%BC%80%E5%A7%8B%E6%9E%84%E5%BB%BA%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%96%B9%E6%B3%95%EF%BC%8C%E8%82%AF%E5%AE%9A%E5%AE%B9%E6%98%93%E8%A2%AB%20Netflix%20OSS%2FJava%2FSpring%2FSpringCloud%20%E6%89%80%E5%90%B8%E5%BC%95%E3%80%82%E4%BD%86%E6%98%AF%E8%A6%81%E7%9F%A5%E9%81%93%E4%BD%A0%E4%B8%8D%E6%98%AFNetflix%EF%BC%8C%E4%B9%9F%E4%B8%8D%E9%9C%80%E8%A6%81%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%20AWS%20EC2%EF%BC%8C%E4%BD%BF%E5%BE%97%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%8F%98%E5%BE%97%E5%BE%88%E5%A4%8D%E6%9D%82%E3%80%82%E5%A6%82%E4%BB%8A%E4%BD%BF%E7%94%A8%20docker%20%E5%92%8C%E9%87%87%E7%94%A8%20memos%2Fkubernetes%20%E6%98%AF%E6%98%8E%E6%99%BA%E4%B9%8B%E4%B8%BE%EF%BC%8C%E5%AE%83%E4%BB%AC%E5%B7%B2%E7%BB%8F%E5%85%B7%E5%A4%87%E5%A4%A7%E9%87%8F%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E7%89%B9%E6%80%A7%E3%80%82%E5%9C%A8%E5%BA%94%E7%94%A8%E5%B1%82%E8%BF%9B%E8%A1%8C%E5%88%86%E5%B1%82%EF%BC%8C%E6%98%AF%E5%9B%A0%E4%B8%BA%20netflix%205%E5%B9%B4%E5%89%8D%E9%9D%A2%E4%B8%B4%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%8C%E8%80%8C%E4%B8%8D%E5%BE%97%E4%B8%8D%E8%BF%99%E6%A0%B7%E5%81%9A%EF%BC%88%E5%8F%AF%E4%BB%A5%E8%AF%B4%E5%A6%82%E6%9E%9C%E9%82%A3%E6%97%B6%E6%9C%89%E4%BA%86kubernetes%EF%BC%8Cnetflix%20OSS%E6%A0%88%E4%BC%9A%E5%A4%A7%E4%B8%8D%E7%9B%B8%E5%90%8C%EF%BC%89%E3%80%82%0A%3E%0A%3E%E5%9B%A0%E6%AD%A4%EF%BC%8C%E5%BB%BA%E8%AE%AE%E8%B0%A8%E6%85%8E%E9%80%89%E6%8B%A9%EF%BC%8C%E6%8C%89%E9%9C%80%E9%80%89%E6%8B%A9%EF%BC%8C%E9%81%BF%E5%85%8D%E7%BB%99%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%B8%A6%E6%9D%A5%E4%B8%8D%E5%BF%85%E8%A6%81%E7%9A%84%E5%A4%8D%E6%9D%82%E5%BA%A6%E3%80%82%0A%0A%E7%9A%84%E7%A1%AE%20SpringCloud%20%E6%96%B9%E6%A1%88%E7%9C%8B%E8%B5%B7%E6%9D%A5%E5%BE%88%E7%BE%8E%E5%A5%BD%EF%BC%8C%E4%BD%86%E6%98%AF%E5%AE%83%E5%85%B7%E6%9C%89%E9%9D%9E%E5%B8%B8%E5%BC%BA%E7%9A%84%E4%BE%B5%E5%85%A5%E6%80%A7%EF%BC%8C%E5%BA%94%E7%94%A8%E4%BB%A3%E7%A0%81%E4%B8%AD%E4%BC%9A%E5%8C%85%E5%90%AB%E5%A4%A7%E9%87%8F%E7%9A%84%20SpringCloud%20%E6%A8%A1%E5%9D%97%EF%BC%8C%E8%80%8C%E4%B8%94%E5%AF%B9%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E4%B9%9F%E4%B8%8D%E5%8F%8B%E5%A5%BD%E3%80%82%0A%0A%23%23%23%20Kubernetes%0A%0AKubernetes%20%E5%87%BA%E7%8E%B0%E5%B0%B1%E6%98%AF%E4%B8%BA%E4%BA%86%E8%A7%A3%E5%86%B3%20SpringCloud%20%E7%9A%84%E9%97%AE%E9%A2%98%EF%BC%8C%E4%B8%8D%E4%BE%B5%E5%85%A5%E5%BA%94%E7%94%A8%E5%B1%82%EF%BC%8C%E5%9C%A8%E5%AE%B9%E5%99%A8%E5%B1%82%E8%A7%A3%E5%86%B3%E9%97%AE%E9%A2%98%E3%80%82%0A%0A**Kubernetes%20%E8%B5%B7%E6%BA%90**%0A%0AKubernetes%E6%9C%80%E5%88%9D%E6%BA%90%E4%BA%8E%E8%B0%B7%E6%AD%8C%E5%86%85%E9%83%A8%E7%9A%84Borg%EF%BC%8C%E6%8F%90%E4%BE%9B%E4%BA%86%E9%9D%A2%E5%90%91%E5%BA%94%E7%94%A8%E7%9A%84%E5%AE%B9%E5%99%A8%E9%9B%86%E7%BE%A4%E9%83%A8%E7%BD%B2%E5%92%8C%E7%AE%A1%E7%90%86%E7%B3%BB%E7%BB%9F%E3%80%82%0A%0AKubernetes%E7%9A%84%E7%9B%AE%E6%A0%87%E6%97%A8%E5%9C%A8%E6%B6%88%E9%99%A4%E7%BC%96%E6%8E%92%E7%89%A9%E7%90%86%2F%E8%99%9A%E6%8B%9F%E8%AE%A1%E7%AE%97%EF%BC%8C%E7%BD%91%E7%BB%9C%E5%92%8C%E5%AD%98%E5%82%A8%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E7%9A%84%E8%B4%9F%E6%8B%85%EF%BC%8C%E5%B9%B6%E4%BD%BF%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E8%BF%90%E8%90%A5%E5%95%86%E5%92%8C%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E5%AE%8C%E5%85%A8%E5%B0%86%E9%87%8D%E7%82%B9%E6%94%BE%E5%9C%A8%E4%BB%A5%E5%AE%B9%E5%99%A8%E4%B8%BA%E4%B8%AD%E5%BF%83%E7%9A%84%E5%8E%9F%E8%AF%AD%E4%B8%8A%E8%BF%9B%E8%A1%8C%E8%87%AA%E5%8A%A9%E8%BF%90%E8%90%A5%E3%80%82%0A%0AKubernetes%20%E4%B9%9F%E6%8F%90%E4%BE%9B%E7%A8%B3%E5%AE%9A%E3%80%81%E5%85%BC%E5%AE%B9%E7%9A%84%E5%9F%BA%E7%A1%80%EF%BC%88%E5%B9%B3%E5%8F%B0%EF%BC%89%EF%BC%8C%E7%94%A8%E4%BA%8E%E6%9E%84%E5%BB%BA%E5%AE%9A%E5%88%B6%E5%8C%96%E7%9A%84%20workflows%20%E5%92%8C%E6%9B%B4%E9%AB%98%E7%BA%A7%E7%9A%84%E8%87%AA%E5%8A%A8%E5%8C%96%E4%BB%BB%E5%8A%A1%E3%80%82%20Kubernetes%20%E5%85%B7%E5%A4%87%E5%AE%8C%E5%96%84%E7%9A%84%E9%9B%86%E7%BE%A4%E7%AE%A1%E7%90%86%E8%83%BD%E5%8A%9B%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%A4%9A%E5%B1%82%E6%AC%A1%E7%9A%84%E5%AE%89%E5%85%A8%E9%98%B2%E6%8A%A4%E5%92%8C%E5%87%86%E5%85%A5%E6%9C%BA%E5%88%B6%E3%80%81%E5%A4%9A%E7%A7%9F%E6%88%B7%E5%BA%94%E7%94%A8%E6%94%AF%E6%92%91%E8%83%BD%E5%8A%9B%E3%80%81**%E9%80%8F%E6%98%8E%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%92%8C%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E6%9C%BA%E5%88%B6%E3%80%81%E5%86%85%E5%BB%BA%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E5%99%A8%E3%80%81%E6%95%85%E9%9A%9C%E5%8F%91%E7%8E%B0%E5%92%8C%E8%87%AA%E6%88%91%E4%BF%AE%E5%A4%8D%E8%83%BD%E5%8A%9B%E3%80%81%E6%9C%8D%E5%8A%A1%E6%BB%9A%E5%8A%A8%E5%8D%87%E7%BA%A7%E5%92%8C%E5%9C%A8%E7%BA%BF%E6%89%A9%E5%AE%B9%E3%80%81%E5%8F%AF%E6%89%A9%E5%B1%95%E7%9A%84%E8%B5%84%E6%BA%90%E8%87%AA%E5%8A%A8%E8%B0%83%E5%BA%A6%E6%9C%BA%E5%88%B6%E3%80%81%E5%A4%9A%E7%B2%92%E5%BA%A6%E7%9A%84%E8%B5%84%E6%BA%90%E9%85%8D%E9%A2%9D%E7%AE%A1%E7%90%86%E8%83%BD%E5%8A%9B**%E3%80%82%0A%0AKubernetes%20%E8%BF%98%E6%8F%90%E4%BE%9B%E5%AE%8C%E5%96%84%E7%9A%84%E7%AE%A1%E7%90%86%E5%B7%A5%E5%85%B7%EF%BC%8C%E6%B6%B5%E7%9B%96%E5%BC%80%E5%8F%91%E3%80%81%E9%83%A8%E7%BD%B2%E6%B5%8B%E8%AF%95%E3%80%81%E8%BF%90%E7%BB%B4%E7%9B%91%E6%8E%A7%E7%AD%89%E5%90%84%E4%B8%AA%E7%8E%AF%E8%8A%82%E3%80%82%0A%0A%23%23%23%20Service%20Mesh%0A%0AService%20Mesh%20%E6%98%AF%E5%AF%B9%20Kubernetes%20%E7%9A%84%E5%A2%9E%E5%BC%BA%EF%BC%8C%E6%8F%90%E4%BE%9B%E4%BA%86%E6%9B%B4%E5%A4%9A%E7%9A%84%E8%83%BD%E5%8A%9B%E3%80%82%0A%0A2018%E5%B9%B49%E6%9C%881%E6%97%A5%EF%BC%8CBilgin%20Ibryam%20%E5%9C%A8%20InfoQ%20%E5%8F%91%E8%A1%A8%E4%BA%86%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0%20%5BMicroservices%20in%20a%20Post-Kubernetes%20Era%5D(https%3A%2F%2Fwww.infoq.com%2Farticles%2Fmicroservices-post-kubernetes%2F)%EF%BC%8C%E4%B8%AD%E6%96%87%E7%89%88%E8%A7%81%E5%90%8E%20%5BKubernetes%20%E6%97%B6%E4%BB%A3%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%5D(https%3A%2F%2Fwww.infoq.cn%2Farticle%2Fmicroservices-post-kubernetes)%EF%BC%88%E8%AF%91%E6%96%87%E6%9C%89%E4%BA%9B%E9%94%99%E8%AF%AF%EF%BC%8C%E4%BB%85%E4%BE%9B%E5%8F%82%E8%80%83%EF%BC%89%E3%80%82%0A%0A%E6%96%87%E4%B8%AD%E4%BD%9C%E8%80%85%E7%9A%84%E8%A7%82%E7%82%B9%E6%98%AF%EF%BC%9A%E5%9C%A8%E5%90%8E%20Kubernetes%20%E6%97%B6%E4%BB%A3%EF%BC%8C%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%EF%BC%88Service%20Mesh%EF%BC%89%E6%8A%80%E6%9C%AF%E5%B7%B2**%E5%AE%8C%E5%85%A8%E5%8F%96%E4%BB%A3%E4%BA%86%E4%BD%BF%E7%94%A8%E8%BD%AF%E4%BB%B6%E5%BA%93%E5%AE%9E%E7%8E%B0**%E7%BD%91%E7%BB%9C%E8%BF%90%E7%BB%B4%EF%BC%88%E4%BE%8B%E5%A6%82%20Hystrix%20%E6%96%AD%E8%B7%AF%E5%99%A8%EF%BC%89%E7%9A%84%E6%96%B9%E5%BC%8F%E3%80%82%0A%0A%E5%A6%82%E6%9E%9C%E8%AF%B4%20Kubernetes%20%E5%AF%B9%20Spring%20Cloud%20%E5%BC%80%E4%BA%86%E7%AC%AC%E4%B8%80%E6%9E%AA%EF%BC%8C%E9%82%A3%E4%B9%88%20Service%20Mesh%20%E5%B0%B1%E6%98%AF%20Spring%20Cloud%20%E7%9A%84%E7%BB%88%E7%BB%93%E8%80%85%E3%80%82%20%0A%0A%23%23%23%20%E6%80%BB%E7%BB%93%0A%0A%E6%9C%80%E5%90%8E%E6%88%91%E4%BB%AC%E7%94%A8%E4%B8%80%E4%B8%AA%E6%B5%81%E7%A8%8B%E5%9B%BE%E6%9D%A5%E6%8F%8F%E8%BF%B0%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84%E7%9A%84%E5%8F%91%E5%B1%95%E5%8E%86%E7%A8%8B%0A!%5B0ec340f33fb2b4dbdf558449107cca8e.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2015)%0A%0A**%E6%AF%8F%E4%B8%AA%E5%85%B3%E9%94%AE%E8%8A%82%E7%82%B9%E7%9A%84%E5%A4%A7%E6%A6%82%E6%97%B6%E9%97%B4%E8%A1%A8**%0A%7C%20%E6%9E%B6%E6%9E%84%2F%E6%8A%80%E6%9C%AF%20%7C%20%E6%97%B6%E9%97%B4%2F%E5%B9%B4%E4%BB%BD%20%7C%20%0A%7C%20---%20%7C%20---%20%7C%20%0A%7C%20%E9%9B%86%E4%B8%AD%E5%BC%8F%E6%9E%B6%E6%9E%84%20%7C%20~%20%7C%0A%7C%20%E5%88%86%E5%B8%83%E5%BC%8F%E6%9E%B6%E6%9E%84%20%7C%20~%20%7C%0A%7C%20Docker%20%7C%202013%20%7C%0A%7C%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%20%7C%202014%20%7C%0A%7C%20Spring%20Cloud%20%7C%202014%20%7C%0A%7C%20Kubernetes%20%E6%88%90%E7%86%9F%20%7C%202017%20%7C%0A%7C%20Service%20Mesh%20%7C%202017%20%7C%0A%0A%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%87%BA%EF%BC%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%94%9F%E6%80%81%E8%BF%99%E9%87%8C%EF%BC%8CSpring%20Cloud%20%E4%B8%BA%E4%BB%A3%E8%A1%A8%E7%9A%84%E8%BF%99%E6%9D%A1%E8%B7%AF%E5%B7%B2%E7%BB%8F%E5%90%8E%E7%BB%A7%E6%97%A0%E4%BA%BA%E4%BA%86%EF%BC%8C%E6%9C%AA%E6%9D%A5%E5%B1%9E%E4%BA%8E%20Service%20Mesh%20%E3%80%82%0AService%20Mesh%20%E7%BB%8F%E8%BF%872%E5%B9%B4%E7%9A%84%E5%8F%91%E5%B1%95%EF%BC%8C%E7%9B%AE%E5%89%8D%20Service%20Mesh%20%E5%B7%B2%E7%BB%8F%E8%B6%B3%E5%A4%9F%E6%88%90%E7%86%9F%EF%BC%8C%E5%B7%B2%E7%BB%8F%E6%9C%89%E7%94%9F%E4%BA%A7%E8%90%BD%E5%9C%B0%E7%9A%84%E6%A1%88%E4%BE%8B%EF%BC%8C%E6%88%91%E4%BB%AC%E6%8E%A5%E4%B8%8B%E6%9D%A5%E5%B0%B1%E7%9C%8B%E7%9C%8B%20Service%20Mesh%EF%BC%8C%E5%9C%A8%E6%AD%A4%E4%B9%8B%E5%89%8D%EF%BC%8C%E6%88%91%E4%BB%AC%E8%A6%81%E5%85%88%E7%90%86%E8%A7%A3%E4%B8%80%E4%B8%AA%E6%A6%82%E5%BF%B5%EF%BC%8C%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%82%0A%0A%23%23%20%E4%BA%91%E5%8E%9F%E7%94%9F%20Cloud%20Native%0A%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E2%80%9C%E4%BA%91%E5%8E%9F%E7%94%9F%E2%80%9D%EF%BC%9F%E4%B9%8B%E6%89%80%E4%BB%A5%E5%B0%86%E8%BF%99%E4%B8%AA%E8%AF%9D%E9%A2%98%E6%94%BE%E5%9C%A8%E5%89%8D%E9%9D%A2%EF%BC%8C%E6%98%AF%E5%9B%A0%E4%B8%BA%EF%BC%8C%E8%BF%99%E6%98%AF%E5%AF%B9%E4%BA%91%E5%8E%9F%E7%94%9F%E6%A6%82%E5%BF%B5%E7%9A%84%E6%9C%80%E5%9F%BA%E6%9C%AC%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%8C%E8%80%8C%E8%BF%99%E4%BC%9A%E7%9B%B4%E6%8E%A5%E5%BD%B1%E5%93%8D%E5%88%B0%E5%90%8E%E7%BB%AD%E7%9A%84%E6%89%80%E6%9C%89%E8%AE%A4%E7%9F%A5%E3%80%82%0A%0A%0A**%E6%B3%A8%E6%84%8F**%EF%BC%9A%E4%BB%A5%E4%B8%8B%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%84%E5%86%85%E5%AE%B9%E5%B0%86%E5%85%A8%E9%83%A8%E5%BC%95%E7%94%A8%E6%95%96%E5%B0%8F%E5%89%91%E7%9A%84%20%5B%E7%95%85%E8%B0%88%E4%BA%91%E5%8E%9F%E7%94%9F%EF%BC%88%E4%B8%8A%EF%BC%89%EF%BC%9A%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E5%BA%94%E8%AF%A5%E6%98%AF%E4%BB%80%E4%B9%88%E6%A0%B7%E5%AD%90%EF%BC%9F%5D(https%3A%2F%2Fwww.infoq.cn%2Farticle%2FfA42rfjV*dYGAvRANFqE)%20%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%EF%BC%8C%E5%9B%BE%E7%94%BB%E5%BE%97%E5%A4%AA%E5%A5%BD%E4%BA%86%E3%80%82%0A%0A%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%84%E5%AE%9A%E4%B9%89%E4%B8%80%E7%9B%B4%E5%9C%A8%E5%8F%91%E5%B1%95%EF%BC%8C%E6%AF%8F%E4%B8%AA%E4%BA%BA%E5%AF%B9%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%84%E7%90%86%E8%A7%A3%E9%83%BD%E5%8F%AF%E8%83%BD%E4%B8%8D%E5%90%8C%EF%BC%8C%E5%B0%B1%E5%A6%82%E8%8E%8E%E5%A3%AB%E6%AF%94%E4%BA%9A%E6%89%80%E8%AF%B4%EF%BC%9A%E4%B8%80%E5%8D%83%E4%B8%AA%E4%BA%BA%E7%9C%BC%E4%B8%AD%E6%9C%89%E4%B8%80%E5%8D%83%E4%B8%AA%E5%93%88%E5%A7%86%E9%9B%B7%E7%89%B9%E3%80%82%0A%0A2018%20%E5%B9%B4%20CNCF%20(%5BCloud%20Native%20Computing%20Foundation%5D(https%3A%2F%2Fwww.cncf.io%2F))%E6%9B%B4%E6%96%B0%E4%BA%86%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%84%E5%AE%9A%E4%B9%89%E3%80%82%0A!%5B0e7bf2db484f18f3ca373bd0773ffab8.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1993)%0A%E8%BF%99%E6%98%AF%E6%96%B0%E5%AE%9A%E4%B9%89%E4%B8%AD%E6%8F%8F%E8%BF%B0%E7%9A%84%E4%BB%A3%E8%A1%A8%E6%8A%80%E6%9C%AF%EF%BC%8C%E5%85%B6%E4%B8%AD%E5%AE%B9%E5%99%A8%E5%92%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%B8%A4%E9%A1%B9%E5%9C%A8%E4%B8%8D%E5%90%8C%E6%97%B6%E6%9C%9F%E7%9A%84%E4%B8%8D%E5%90%8C%E5%AE%9A%E4%B9%89%E4%B8%AD%E9%83%BD%E6%9C%89%E5%87%BA%E7%8E%B0%EF%BC%8C%E8%80%8C%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E8%BF%99%E4%B8%AA%E5%9C%A8%202017%20%E5%B9%B4%E6%89%8D%E5%BC%80%E5%A7%8B%E8%A2%AB%E7%A4%BE%E5%8C%BA%E6%8E%A5%E7%BA%B3%E7%9A%84%E6%96%B0%E7%83%AD%E7%82%B9%E6%8A%80%E6%9C%AF%E8%A2%AB%E9%9D%9E%E5%B8%B8%E9%86%92%E7%9B%AE%E7%9A%84%E5%88%97%E5%87%BA%E6%9D%A5%EF%BC%8C%E5%92%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%B9%B6%E5%88%97%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E6%88%91%E4%BB%AC%E9%80%9A%E5%B8%B8%E8%AE%A4%E4%B8%BA%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E5%8F%AA%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%9C%A8%E5%AE%9E%E6%96%BD%E6%97%B6%E7%9A%84%E4%B8%80%E7%A7%8D%E6%96%B0%E7%9A%84%E6%96%B9%E5%BC%8F%E3%80%82%0A%0A%E9%82%A3%E6%88%91%E4%BB%AC%E8%AF%A5%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%E4%BA%91%E5%8E%9F%E7%94%9F%E5%91%A2%EF%BC%9F%E6%88%91%E4%BB%AC%E5%B0%9D%E8%AF%95%E4%B8%80%E4%B8%8B%EF%BC%8C%E5%B0%86%20Cloud%20Native%20%E8%BF%99%E4%B8%AA%E8%AF%8D%E6%B1%87%E6%8B%86%E5%BC%80%E6%9D%A5%E7%90%86%E8%A7%A3%EF%BC%8C%E5%85%88%E7%9C%8B%E7%9C%8B%E4%BB%80%E4%B9%88%E6%98%AF%20Cloud%E3%80%82%0A%0A%23%23%23%20%E4%BB%80%E4%B9%88%E6%98%AF%E4%BA%91%20Cloud%0A%E5%BF%AB%E9%80%9F%E5%9B%9E%E9%A1%BE%E4%B8%80%E4%B8%8B%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9A%84%E5%8E%86%E5%8F%B2%EF%BC%8C%E6%9D%A5%E5%B8%AE%E5%8A%A9%E6%88%91%E4%BB%AC%E5%AF%B9%E4%BA%91%E6%9C%89%E4%B8%AA%E6%9B%B4%E6%84%9F%E6%80%A7%E7%9A%84%E8%AE%A4%E8%AF%86%E3%80%82%0A%0A!%5B84e47db0ce05a2ca9a3ecb06317b5adb.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1997)%0A%0A%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9A%84%E5%87%BA%E7%8E%B0%E5%92%8C%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF%E7%9A%84%E5%8F%91%E5%B1%95%E5%92%8C%E6%88%90%E7%86%9F%E5%AF%86%E5%88%87%E7%9B%B8%E5%85%B3%EF%BC%8C2000%20%E5%B9%B4%E5%89%8D%E5%90%8E%20x86%20%E7%9A%84%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%8A%80%E6%9C%AF%E6%88%90%E7%86%9F%E5%90%8E%EF%BC%8C%E4%BA%91%E8%AE%A1%E7%AE%97%E9%80%90%E6%B8%90%E5%8F%91%E5%B1%95%E8%B5%B7%E6%9D%A5%E3%80%82%0A%0A!%5B372d7d3fb6da14098b5b63245401c814.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1995)%0A%0A%E5%9F%BA%E4%BA%8E%E8%99%9A%E6%8B%9F%E6%9C%BA%E6%8A%80%E6%9C%AF%EF%BC%8C%E9%99%86%E7%BB%AD%E5%87%BA%E7%8E%B0%E4%BA%86%20IaaS%2FPaaS%2FFaaS%20%E7%AD%89%E5%BD%A2%E6%80%81%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%BB%96%E4%BB%AC%E7%9A%84%E5%BC%80%E6%BA%90%E7%89%88%E6%9C%AC%E3%80%82%0A%0A!%5Bcb84372097b3e35cb9a1d48c24d56fcf.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1996)%0A%0A2013%20%E5%B9%B4%20docker%20%E5%87%BA%E7%8E%B0%EF%BC%8C%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF%E6%88%90%E7%86%9F%EF%BC%8C%E7%84%B6%E5%90%8E%E5%9B%B4%E7%BB%95%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%E4%B8%80%E5%9C%BA%E5%A4%A7%E6%88%98%EF%BC%8C%E6%9C%80%E5%90%8E%E5%9C%A8%202017%20%E5%B9%B4%E5%BA%95%EF%BC%8Ckubernetes%20%E8%83%9C%E5%87%BA%E3%80%822015%20%E5%B9%B4%20CNCF%20%E6%88%90%E7%AB%8B%EF%BC%8C%E5%B9%B6%E5%9C%A8%E8%BF%91%E5%B9%B4%E5%BD%A2%E6%88%90%E4%BA%86%20cloud%20native%20%E7%94%9F%E6%80%81%E3%80%82%0A%0A%E5%9C%A8%E8%BF%99%E4%B8%AA%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E4%BA%91%E7%9A%84%E5%BD%A2%E6%80%81%E4%B8%80%E7%9B%B4%E5%8F%98%E5%8C%96%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%EF%BC%9A%E4%BE%9B%E5%BA%94%E5%95%86%E6%8F%90%E4%BE%9B%E7%9A%84%E5%8A%9F%E8%83%BD%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%9A%EF%BC%8C%E8%80%8C%E5%AE%A2%E6%88%B7%E6%88%96%E8%80%85%E8%AF%B4%E5%BA%94%E7%94%A8%E9%9C%80%E8%A6%81%E8%87%AA%E5%B7%B1%E7%AE%A1%E7%90%86%E7%9A%84%E5%8A%9F%E8%83%BD%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%B0%91%E3%80%82%0A!%5B03bdb5f6de728bdb76dbb9a003b62263.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1998)%0A%0A%0A!%5B0185a2a404942f2aec01b6933a87f909.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1999)%0A**%E6%9E%B6%E6%9E%84%E4%B9%9F%E5%9C%A8%E4%B8%80%E7%9B%B4%E9%80%82%E5%BA%94%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9A%84%E5%8F%98%E5%8C%96**%0A%0A%23%23%23%20%E4%BB%80%E4%B9%88%E6%98%AF%E5%8E%9F%E7%94%9F%20Native%0A%E5%9C%A8%E5%9B%9E%E9%A1%BE%E5%AE%8C%E4%BA%91%E8%AE%A1%E7%AE%97%E7%9A%84%E5%8E%86%E5%8F%B2%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%88%91%E4%BB%AC%E5%AF%B9%20Cloud%20%E6%9C%89%E6%9B%B4%E6%B7%B1%E7%9A%84%E8%AE%A4%E8%AF%86%EF%BC%8C%E6%8E%A5%E7%9D%80%E7%BB%A7%E7%BB%AD%E7%9C%8B%E4%B8%80%E4%B8%8B%EF%BC%9A%E4%BB%80%E4%B9%88%E6%98%AF%20Native%EF%BC%9F%0A%E5%AD%97%E5%85%B8%E7%9A%84%E8%A7%A3%E9%87%8A%E6%98%AF%EF%BC%9A%E4%B8%8E%E7%94%9F%E4%BF%B1%E6%9D%A5%E7%9A%84%E3%80%82%0A%E9%82%A3%20Cloud%20%E5%92%8C%20native%20%E5%92%8C%E5%9C%A8%E4%B8%80%E8%B5%B7%EF%BC%8C%E5%8F%88%E8%AF%A5%E5%A6%82%E4%BD%95%E7%90%86%E8%A7%A3%EF%BC%9F%0A!%5Bbd47c8d112f60f5e91e3aab6bd7679dc.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2000)%0A%0A%0A%E8%BF%99%E9%87%8C%E6%88%91%E4%BB%AC%E6%8A%9B%E5%87%BA%E4%B8%80%E4%B8%AA%E6%88%91%E4%BB%AC%E8%87%AA%E5%B7%B1%E7%9A%84%E7%90%86%E8%A7%A3%EF%BC%9A%E4%BA%91%E5%8E%9F%E7%94%9F%E4%BB%A3%E8%A1%A8%E7%9D%80%E5%8E%9F%E7%94%9F%E4%B8%BA%E4%BA%91%E8%AE%BE%E8%AE%A1%E3%80%82%E8%AF%A6%E7%BB%86%E7%9A%84%E8%A7%A3%E9%87%8A%E6%98%AF%EF%BC%9A%E5%BA%94%E7%94%A8%E5%8E%9F%E7%94%9F%E8%A2%AB%E8%AE%BE%E8%AE%A1%E4%B8%BA%E5%9C%A8%E4%BA%91%E4%B8%8A%E4%BB%A5%E6%9C%80%E4%BD%B3%E6%96%B9%E5%BC%8F%E8%BF%90%E8%A1%8C%EF%BC%8C%E5%85%85%E5%88%86%E5%8F%91%E6%8C%A5%E4%BA%91%E7%9A%84%E4%BC%98%E5%8A%BF%E3%80%82%0A%0A%0A%E8%BF%99%E4%B8%AA%E7%90%86%E8%A7%A3%E6%9C%89%E7%82%B9%E7%A9%BA%E6%B3%9B%EF%BC%8C%E4%BD%86%E6%98%AF%E8%80%83%E8%99%91%E5%88%B0%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%84%E5%AE%9A%E4%B9%89%E5%92%8C%E7%89%B9%E5%BE%81%E5%9C%A8%E8%BF%99%E4%BA%9B%E5%B9%B4%E9%97%B4%E4%B8%8D%E5%81%9C%E7%9A%84%E5%8F%98%E5%8C%96%EF%BC%8C%E4%BB%A5%E5%8F%8A%E5%AE%8C%E5%85%A8%E5%8F%AF%E4%BB%A5%E9%A2%84%E6%96%99%E5%88%B0%E7%9A%84%E5%9C%A8%E6%9C%AA%E6%9D%A5%E7%9A%84%E5%BF%85%E7%84%B6%E5%8F%98%E5%8C%96%EF%BC%8C%E6%88%91%E8%A7%89%E5%BE%97%EF%BC%8C%E5%AF%B9%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%84%E7%90%86%E8%A7%A3%E4%BC%BC%E4%B9%8E%E4%B9%9F%E5%8F%AA%E8%83%BD%E5%9B%9E%E5%88%B0%E4%BA%91%E5%8E%9F%E7%94%9F%E7%9A%84%E5%87%BA%E5%8F%91%E7%82%B9%EF%BC%8C%E8%80%8C%E4%B8%8D%E6%98%AF%E5%A6%82%E4%BD%95%E5%85%B7%E4%BD%93%E5%AE%9E%E7%8E%B0%E3%80%82%0A%0A%23%23%23%20Cloud%20Native%20%E6%98%AF%E9%81%93%EF%BC%8CService%20Mesh%20%E6%98%AF%E6%9C%AF%0A%E9%82%A3%E5%9C%A8%E8%BF%99%E4%B9%88%E4%B8%80%E4%B8%AA%E4%BA%91%E5%8E%9F%E7%94%9F%E7%90%86%E8%A7%A3%E7%9A%84%E8%83%8C%E6%99%AF%E4%B8%8B%EF%BC%8C%E6%88%91%E5%86%8D%E6%9D%A5%E4%BB%8B%E7%BB%8D%E4%B8%80%E4%B8%8B%E6%88%91%E5%AF%B9%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E7%9A%84%E8%AE%BE%E6%83%B3%EF%BC%8C%E4%B9%9F%E5%B0%B1%E6%98%AF%E6%88%91%E8%A7%89%E5%BE%97%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E5%BA%94%E8%AF%A5%E6%98%AF%E4%BB%80%E4%B9%88%E6%A0%B7%E5%AD%90%E3%80%82%0A%0A!%5B8f712541c80eb2f3d13b408e62031575.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2001)%0A%0A%E5%9C%A8%E4%BA%91%E5%8E%9F%E7%94%9F%E4%B9%8B%E5%89%8D%EF%BC%8C%E5%BA%95%E5%B1%82%E5%B9%B3%E5%8F%B0%E8%B4%9F%E8%B4%A3%E5%90%91%E4%B8%8A%E6%8F%90%E4%BE%9B%E5%9F%BA%E6%9C%AC%E8%BF%90%E8%A1%8C%E8%B5%84%E6%BA%90%E3%80%82%E8%80%8C%E5%BA%94%E7%94%A8%E9%9C%80%E8%A6%81%E6%BB%A1%E8%B6%B3%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82%E5%92%8C%E9%9D%9E%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82%EF%BC%8C%E4%B8%BA%E4%BA%86%E6%9B%B4%E5%A5%BD%E7%9A%84%E4%BB%A3%E7%A0%81%E5%A4%8D%E7%94%A8%EF%BC%8C%E9%80%9A%E7%94%A8%E5%9E%8B%E5%A5%BD%E7%9A%84%E9%9D%9E%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82%E7%9A%84%E5%AE%9E%E7%8E%B0%E5%BE%80%E5%BE%80%E4%BC%9A%E4%BB%A5%E7%B1%BB%E5%BA%93%E5%92%8C%E5%BC%80%E5%8F%91%E6%A1%86%E6%9E%B6%E7%9A%84%E6%96%B9%E5%BC%8F%E6%8F%90%E4%BE%9B%EF%BC%8C%E5%8F%A6%E5%A4%96%E5%9C%A8%20SOA%2F%20%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%97%B6%E4%BB%A3%E9%83%A8%E5%88%86%E5%8A%9F%E8%83%BD%E4%BC%9A%E4%BB%A5%E5%90%8E%E7%AB%AF%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%96%B9%E5%BC%8F%E5%AD%98%E5%9C%A8%EF%BC%8C%E8%BF%99%E6%A0%B7%E5%9C%A8%E5%BA%94%E7%94%A8%E4%B8%AD%E5%B0%B1%E8%A2%AB%E7%AE%80%E5%8C%96%E4%B8%BA%E5%AF%B9%E5%85%B6%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E8%B0%83%E7%94%A8%E4%BB%A3%E7%A0%81%E3%80%82%0A%0A%E7%84%B6%E5%90%8E%E5%BA%94%E7%94%A8%E5%B0%86%E8%BF%99%E4%BA%9B%E5%8A%9F%E8%83%BD%EF%BC%8C%E8%BF%9E%E5%90%8C%E8%87%AA%E8%BA%AB%E7%9A%84%E4%B8%9A%E5%8A%A1%E5%AE%9E%E7%8E%B0%E4%BB%A3%E7%A0%81%EF%BC%8C%E4%B8%80%E8%B5%B7%E6%89%93%E5%8C%85%E3%80%82%0A%0A!%5B5d3cf3ad2988beee45dc45f82427fd6e.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2002)%0A%0A%E8%80%8C%E4%BA%91%E7%9A%84%E5%87%BA%E7%8E%B0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%9C%A8%E6%8F%90%E4%BE%9B%E5%90%84%E7%A7%8D%E8%B5%84%E6%BA%90%E4%B9%8B%E5%A4%96%EF%BC%8C%E8%BF%98%E6%8F%90%E4%BE%9B%E5%90%84%E7%A7%8D%E8%83%BD%E5%8A%9B%EF%BC%8C%E4%BB%8E%E8%80%8C%E5%B8%AE%E5%8A%A9%E5%BA%94%E7%94%A8%EF%BC%8C%E4%BD%BF%E5%BE%97%E5%BA%94%E7%94%A8%E5%8F%AF%E4%BB%A5%E4%B8%93%E6%B3%A8%E4%BA%8E%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82%E7%9A%84%E5%AE%9E%E7%8E%B0%E3%80%82%0A%E9%9D%9E%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82%E7%9B%B8%E5%85%B3%E7%9A%84%E5%8A%9F%E8%83%BD%E9%83%BD%E8%A2%AB%E7%A7%BB%E5%88%B0%E4%BA%91%EF%BC%8C%E6%88%96%E8%80%85%E8%AF%B4%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E4%B8%AD%E5%8E%BB%E4%BA%86%EF%BC%8C%E4%BB%A5%E5%8F%8A%E4%B8%8B%E6%B2%89%E5%88%B0%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E7%9A%84%E4%B8%AD%E9%97%B4%E4%BB%B6%E3%80%82%0A%0A!%5Bfe0338fc565e48553b3c8622a369bd36.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2003)%0A%0A%E4%BB%A5%E6%9C%8D%E5%8A%A1%E9%97%B4%E9%80%9A%E8%AE%AF%E4%B8%BA%E4%BE%8B%EF%BC%9A%E9%9C%80%E8%A6%81%E5%AE%9E%E7%8E%B0%E4%B8%8A%E9%9D%A2%E5%88%97%E4%B8%BE%E7%9A%84%E5%90%84%E7%A7%8D%E5%8A%9F%E8%83%BD%E3%80%82%0A%0A!%5Bc75c392145f3f39bd9042edce786e256.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2004)%0A%0ASDK%20%E7%9A%84%E6%80%9D%E8%B7%AF%EF%BC%9A%E5%9C%A8%E5%BA%94%E7%94%A8%E5%B1%82%E6%B7%BB%E5%8A%A0%E4%B8%80%E4%B8%AA%E8%83%96%E5%AE%A2%E6%88%B7%E7%AB%AF%EF%BC%8C%E5%9C%A8%E8%BF%99%E4%B8%AA%E5%AE%A2%E6%88%B7%E7%AB%AF%E4%B8%AD%E5%AE%9E%E7%8E%B0%E5%90%84%E7%A7%8D%E5%8A%9F%E8%83%BD%E3%80%82%0A%0A!%5B1572f7e930ce0fc442ae21ac5e2de455.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2005)%0A%0AService%20Mesh%20%E7%9A%84%E6%80%9D%E8%B7%AF%EF%BC%8C%E4%BD%93%E7%8E%B0%E5%9C%A8%E5%B0%86%20SDK%20%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E5%8A%9F%E8%83%BD%E5%89%A5%E7%A6%BB%E5%87%BA%E6%9D%A5%EF%BC%8C%E6%94%BE%E5%88%B0%20Sidecar%20%E4%B8%AD%E3%80%82%E5%B0%B1%E6%98%AF%E6%8A%8A%E6%9B%B4%E5%A4%9A%E7%9A%84%E4%BA%8B%E6%83%85%E4%B8%8B%E6%B2%89%EF%BC%8C%E4%B8%8B%E6%B2%89%E5%88%B0%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E4%B8%AD%E3%80%82%0A%0A!%5B5176d2f8527054aac3e7106487090d80.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2006)%0A%0A%E5%9C%A8%E7%94%A8%E6%88%B7%E7%9C%8B%E6%9D%A5%EF%BC%8C%E5%BA%94%E7%94%A8%E9%95%BF%E8%BF%99%E6%A0%B7%EF%BC%9A%0A%0A!%5Bbe9bfa387db52c4eaeb235c7a7a01945.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2007)%0A%0A%E4%BA%91%E5%8E%9F%E7%94%9F%E6%98%AF%E6%88%91%E4%BB%AC%E7%9A%84%E7%9B%AE%E6%A0%87%EF%BC%8CService%20Mesh%20%E4%BA%A4%E5%87%BA%E4%BA%86%E8%87%AA%E5%B7%B1%E7%9A%84%E7%AD%94%E5%8D%B7%EF%BC%8C%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E5%9B%9E%E5%88%B0%20Service%20Mesh%20%E8%BF%99%E9%87%8C%E4%BA%86%E3%80%82%0A%0A%23%23%20Service%20Mesh%0A%0A%E5%85%B6%E4%B8%AD%E6%96%87%E8%AF%91%E5%90%8D%E6%98%AF**%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC**%EF%BC%8C%E8%BF%99%E4%B8%AA%E8%AF%8D%E6%9C%80%E6%97%A9%E4%BD%BF%E7%94%A8%E7%94%B1%E5%BC%80%E5%8F%91Linkerd%E7%9A%84Buoyant%E5%85%AC%E5%8F%B8%E6%8F%90%E5%87%BA%EF%BC%8C%E5%B9%B6%E5%9C%A8%E5%86%85%E9%83%A8%E4%BD%BF%E7%94%A8%E3%80%82%0A%0A%E5%AE%9A%E4%B9%89%0A!%5B4123d50c20385fa9300b32e039a6894a.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2009)%0A%0A%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%9E%84%E6%88%90%0A%0A!%5B8b69728340e60bc09d05422a21a85977.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2010)%0A%0A%0A%23%23%23%20%E7%BA%B7%E4%BA%89%202017%0A2017%20%E5%B9%B4%E5%B9%B4%E5%BA%95%EF%BC%8C%E5%BD%93%E9%9D%9E%E4%BE%B5%E5%85%A5%E5%BC%8F%E7%9A%84%20Service%20Mesh%20%E6%8A%80%E6%9C%AF%E7%BB%88%E4%BA%8E%E4%BB%8E%E8%90%8C%E8%8A%BD%E5%88%B0%E8%B5%B0%E5%90%91%E4%BA%86%E6%88%90%E7%86%9F%EF%BC%8C%E5%BD%93%20Istio%2FConduit%20%E6%A8%AA%E7%A9%BA%E5%87%BA%E4%B8%96%EF%BC%8C%E4%BA%BA%E4%BB%AC%E6%89%8D%E6%83%8A%E8%A7%89%EF%BC%9A%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%B9%B6%E9%9D%9E%E5%8F%AA%E6%9C%89%E4%BE%B5%E5%85%A5%E5%BC%8F%E4%B8%80%E7%A7%8D%E7%8E%A9%E6%B3%95%EF%BC%8C%E6%9B%B4%E4%B8%8D%E6%98%AF%20Spring%20Cloud%20%E7%9A%84%E7%8B%AC%E8%A7%92%E6%88%8F%EF%BC%81%0A%0A%5B%E8%A7%A3%E8%AF%BB%202017%20%E4%B9%8B%20Service%20Mesh%EF%BC%9A%E7%BE%A4%E9%9B%84%E9%80%90%E9%B9%BF%E7%83%BD%E7%83%9F%E8%B5%B7%5D(https%3A%2F%2Fwww.infoq.cn%2Farticle%2F2017-service-mesh)%0A%0A%E6%96%87%E7%AB%A0%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8B%EF%BC%9A%0A%E5%88%9B%E4%B8%9A%E5%85%AC%E5%8F%B8%20Buoyant%20%E7%9A%84%E4%BA%A7%E5%93%81%20Linkerd%20%E5%BC%80%E5%B1%80%E6%8B%BF%E4%B8%8B%E4%B8%80%E8%A1%80%EF%BC%9B%0AEnvoy%20%E9%BB%98%E9%BB%98%E8%80%95%E8%80%98%EF%BC%9B%0A%E4%BB%8E%20Google%20%E5%92%8C%20IBM%20%E8%81%94%E6%89%8B%E6%8E%A8%E5%87%BA%20Istio%EF%BC%8CLinkerd%20%E6%80%A5%E8%BD%AC%E7%9B%B4%E4%B8%8B%EF%BC%9B%0A2017%20%E5%B9%B4%E5%BA%95%20Buoyant%20%E6%8E%A8%E5%87%BA%20Conduit%20%E8%83%8C%E6%B0%B4%E4%B8%80%E6%88%98%EF%BC%9B%0ANginmesh%20%E4%B8%8E%20Kong%20%E4%BD%8E%E8%B0%83%E5%8F%82%E4%B8%8E%EF%BC%9B%0A%0A%23%23%23%20%E7%99%BE%E5%AE%B6%E4%BA%89%E9%B8%A3%202018%0A%202018%20%E5%B9%B4%EF%BC%8CService%20Mesh%20%E5%8F%88%E5%A4%9A%E4%BA%86%E5%93%AA%E4%BA%9B%E5%86%85%E5%AE%B9%E5%91%A2%EF%BC%9F%E5%9C%A8%202018%20%E5%B9%B4%EF%BC%8CService%20Mesh%20%E5%9C%A8%E5%9B%BD%E5%86%85%E5%A4%A7%E7%83%AD%EF%BC%8C%E6%9C%89%E5%A4%9A%E5%AE%B6%E5%85%AC%E5%8F%B8%E6%8E%A8%E5%87%BA%E8%87%AA%E5%B7%B1%E7%9A%84%20Service%20Mesh%20%E4%BA%A7%E5%93%81%E5%92%8C%E6%96%B9%E6%A1%88%EF%BC%8CService%20Mesh%20%E6%9B%B4%E5%8A%A0%E7%83%AD%E9%97%B9%E4%BA%86%E3%80%82%0A%E8%AF%A6%E7%BB%86%E8%A7%81%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%20%5B%E4%B8%8B%E4%B8%80%E4%BB%A3%E5%BE%AE%E6%9C%8D%E5%8A%A1%EF%BC%81Service%20Mesh%202018%20%E5%B9%B4%E5%BA%A6%E6%80%BB%E7%BB%93%5D(https%3A%2F%2Fwww.infoq.cn%2Farticle%2FDtxylyFwlyl7K5Jte*WI)%0A%20%0A%E6%96%87%E7%AB%A0%E6%80%BB%E7%BB%93%E4%B8%80%E4%B8%8B%EF%BC%9A%0AService%20Mesh%20%E5%9C%A8%E5%9B%BD%E5%86%85%E5%A4%A7%E7%83%AD%EF%BC%8C%E6%9C%89%E5%A4%9A%E5%AE%B6%E5%85%AC%E5%8F%B8%E5%8A%A0%E5%85%A5%E6%88%98%E5%9C%BA%EF%BC%9B%0AIstio%20%E5%8F%91%E5%B8%831.0%EF%BC%8C%E6%88%90%E4%B8%BA%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%20Service%20Mesh%20%E9%A1%B9%E7%9B%AE%EF%BC%8C%E8%8E%B7%E5%BE%97%E5%A4%9A%E6%96%B9%E6%94%AF%E6%8C%81%EF%BC%9B%0AEnvoy%20%E7%BB%A7%E7%BB%AD%E7%A8%B3%E6%89%8E%E7%A8%B3%E6%89%93%EF%BC%8CEnvoy%20%E8%A2%AB%20Istio%20%E7%9B%B4%E6%8E%A5%E9%87%87%E7%94%A8%E4%B8%BA%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2%EF%BC%8C%E6%9C%89%E6%9C%9B%E6%88%90%E4%B8%BA%E6%95%B0%E6%8D%AE%E5%B9%B3%E9%9D%A2%E6%A0%87%E5%87%86%EF%BC%9B%0ALinkerd1.x%20%E9%99%B7%E5%85%A5%E5%9B%B0%E5%A2%83%EF%BC%8CConduit%20%E5%B0%8F%E6%AD%A5%E5%BF%AB%E8%B7%91%EF%BC%8C%E4%BD%86%E5%93%8D%E5%BA%94%E5%B9%B3%E5%B9%B3%EF%BC%8CBuoyant%20%E5%85%AC%E5%8F%B8%E5%86%B3%E5%AE%9A%E5%90%88%E5%B9%B6%E4%BA%A7%E5%93%81%E7%BA%BF%EF%BC%8CLinkerd1.x%20%2B%20Conduit%20%3D%20Linkerd2.0%EF%BC%9B%0A%E6%9B%B4%E5%A4%9A%E7%9A%84%E5%85%AC%E5%8F%B8%E5%8F%82%E4%B8%8E%20Service%20Mesh%EF%BC%8C%E5%9B%BD%E5%A4%96%E6%9C%89%20Nginx%E3%80%81Consul%E3%80%81Kong%E3%80%81AWS%E7%AD%89%EF%BC%8C%E5%9B%BD%E5%86%85%E6%9C%89%E8%9A%82%E8%9A%81%E9%87%91%E6%9C%8D%E3%80%81%E6%96%B0%E6%B5%AA%E5%BE%AE%E5%8D%9A%E3%80%81%E5%8D%8E%E4%B8%BA%EF%BC%8C%E9%98%BF%E9%87%8C%20Dubbo%EF%BC%8C%E8%85%BE%E8%AE%AF%E7%AD%89%EF%BC%9B%0A%20%0A%23%23%23%20%E6%8C%81%E7%BB%AD%E5%8F%91%E5%B1%95%202019%0A2019%20%E5%B0%86%E4%BC%9A%E5%90%AC%E5%88%B0%E6%9B%B4%E5%A4%9A%20Service%20Mesh%20%E7%9A%84%E5%A3%B0%E9%9F%B3%EF%BC%8C%E8%AF%B7%E5%85%B3%E6%B3%A8%5BService%20Mesh%20%E4%B8%AD%E6%96%87%E7%A4%BE%E5%8C%BA%5D(https%3A%2F%2Fwww.servicemesher.com)%0A%0A%23%23%20Istio%0A%E5%89%8D%E6%96%87%E8%AE%B2%E5%88%B0%20Istio%20%E6%98%AF%E5%BD%93%E5%89%8D%E6%9C%80%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%20Service%20Mesh%20%E6%A1%86%E6%9E%B6%EF%BC%8C%E4%B8%80%E5%8F%A5%E8%AF%9D%E5%AE%9A%E4%B9%89%20Istio%EF%BC%9A%E4%B8%80%E4%B8%AA%E7%94%A8%E6%9D%A5%E8%BF%9E%E6%8E%A5%E3%80%81%E7%AE%A1%E7%90%86%E5%92%8C%E4%BF%9D%E6%8A%A4%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%BC%80%E6%94%BE%E5%B9%B3%E5%8F%B0%E3%80%82%0A%E5%AE%83%E8%83%BD%E7%BB%99%E6%88%91%E4%BB%AC%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%8F%90%E4%BE%9B%E5%93%AA%E4%BA%9B%E5%8A%9F%E8%83%BD%E5%91%A2%EF%BC%9F%0A%0A%23%23%23%20%E8%BF%9E%E6%8E%A5%0A-%20%E5%8A%A8%E6%80%81%E8%B7%AF%E7%94%B1%0A-%20%E8%B6%85%E6%97%B6%E9%87%8D%E8%AF%95%0A-%20%E7%86%94%E6%96%AD%0A-%20%E6%95%85%E9%9A%9C%E6%B3%A8%E5%85%A5%0A%0A%5B%E8%AF%A6%E7%BB%86%E8%A7%81%E5%AE%98%E7%BD%91%E4%BB%8B%E7%BB%8D%5D(https%3A%2F%2Fistio.io%2Fzh%2Fdocs%2Ftasks%2Ftraffic-management%2F)%20%0A%0A%23%23%23%20%E4%BF%9D%E6%8A%A4%0A%E5%AE%89%E5%85%A8%E9%97%AE%E9%A2%98%E4%B8%80%E5%BC%80%E5%A7%8B%E5%B0%B1%E8%A6%81%E5%81%9A%E5%A5%BD%EF%BC%8C%E5%9C%A8%20Istio%20%E5%AE%9E%E7%8E%B0%E5%AE%89%E5%85%A8%E9%80%9A%E8%AE%AF%E6%98%AF%E9%9D%9E%E5%B8%B8%E6%96%B9%E4%BE%BF%E7%9A%84%E3%80%82%0A%0AIstio%20%E6%94%AF%E6%8C%81%E5%8F%8C%E5%90%91%20TLS%20%E5%8A%A0%E5%AF%86%0A%0A%5B%E8%A7%81%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%5D(https%3A%2F%2Fistio.io%2Fzh%2Fdocs%2Ftasks%2Fsecurity%2F)%20%0A%0A%23%23%23%20%E6%8E%A7%E5%88%B6%0A%E9%80%9F%E7%8E%87%E9%99%90%E5%88%B6%0A%E9%BB%91%E7%99%BD%E5%90%8D%E5%8D%95%0A%5B%E8%A7%81%E5%AE%98%E6%96%B9%E6%96%87%E6%A1%A3%5D(https%3A%2F%2Fistio.io%2Fzh%2Fdocs%2Ftasks%2Fpolicy-enforcement%2F)%20%0A%0A%23%23%23%20%E8%A7%82%E6%B5%8B%0A%0A-%20%E6%8C%87%E6%A0%87%E5%BA%A6%E9%87%8F%EF%BC%9A%E6%AF%8F%E7%A7%92%E8%AF%B7%E6%B1%82%E6%95%B0%EF%BC%8CPrometheus%20%E4%B8%8E%20Grafana%0A%E4%BD%BF%E7%94%A8%20Grafana%20%E8%A7%82%E6%B5%8B%E6%B5%81%E9%87%8F%E6%83%85%E5%86%B5%0A!%5Be0d7a41c3390fbaf08c9520c5a6be80b.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2012)%0A%0A-%20%E5%88%86%E5%B8%83%E5%BC%8F%E8%BF%BD%E8%B8%AA%EF%BC%9AJaeger%20%E6%88%96%20Zipkin%0A%E5%BF%AB%E9%80%9F%E8%A7%82%E6%B5%8B%E8%B0%83%E7%94%A8%E9%93%BE%E8%B7%AF%0A!%5B1b1793a797651edd432a7d15b9af2b46.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2013)%0A%0A-%20%E6%97%A5%E5%BF%97%EF%BC%9A%E9%9D%9E%E5%BA%94%E7%94%A8%E6%97%A5%E5%BF%97%0A-%20%E7%BD%91%E6%A0%BC%E5%8F%AF%E8%A7%86%E5%8C%96%0A%E5%BF%AB%E9%80%9F%E7%90%86%E6%B8%85%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%85%B3%E7%B3%BB%0A!%5B0212a2ab8c82fe4469ccf48f761d4752.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2014)%0A%0A%23%23%20%E6%80%BB%E7%BB%93%0A%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF%E6%8E%A8%E5%8A%A8%E8%BF%99%E4%BA%91%E8%AE%A1%E7%AE%97%E6%8A%80%E6%9C%AF%E7%9A%84%E5%8F%98%E9%9D%A9%EF%BC%8C%E9%A1%BA%E5%B8%A6%E4%B9%9F%E5%BD%B1%E5%93%8D%E4%BA%86%E5%90%8E%E7%AB%AF%E6%9E%B6%E6%9E%84%E7%9A%84%E6%BC%94%E8%BF%9B%EF%BC%8C%E7%9B%AE%E5%89%8D%E6%88%91%E4%BB%AC%E8%BA%AB%E5%A4%84%E4%BA%91%E6%97%B6%E4%BB%A3%EF%BC%8C%E5%B0%86%E4%BC%9A%E6%9C%89%E6%9B%B4%E5%A4%9A%E7%9A%84%E5%85%83%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E5%87%BA%E7%8E%B0%EF%BC%8CIstio%20%E4%BD%9C%E4%B8%BA%E5%85%B6%E4%B8%AD%E7%9A%84%E4%BD%BC%E4%BD%BC%E8%80%85%EF%BC%8C%E5%80%BC%E5%BE%97%E4%BD%A0%E6%8A%95%E5%85%A5%E4%B8%80%E4%BB%BD%E7%B2%BE%E5%8A%9B%E4%BA%86%E8%A7%A3%E4%B8%80%E4%B8%8B%E3%80%82%0A%0A%23%23%20%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%2F%E6%8C%87%E5%BC%95%0A%5BService%20Mesh%20%E4%B8%AD%E6%96%87%E7%A4%BE%E5%8C%BA%5D(https%3A%2F%2Fwww.servicemesher.com)%20%E4%B8%8A%E9%9D%A2%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%B0%E5%AF%8C%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%B5%84%E6%96%99%E3%80%82%0A%0A%E6%90%AD%E5%BB%BA%20Kubernetes%20%E9%9B%86%E7%BE%A4%E4%BC%9A%E6%AF%94%E8%BE%83%E9%BA%BB%E7%83%A6%EF%BC%8C%E6%8E%A8%E8%8D%90%E5%87%A0%E7%A7%8D%E6%96%B9%E5%BC%8F%E3%80%82%E4%B8%BB%E8%A6%81%E5%8E%9F%E5%9B%A0%E6%98%AF%E5%BE%88%E5%A4%9A%E9%95%9C%E5%83%8F%E9%9C%80%E8%A6%81%E7%BF%BB%E5%A2%99%E6%89%8D%E8%83%BD%E4%B8%8B%E8%BD%BD%E3%80%82%0A1.%20Docker%20Desktop%20%E8%87%AA%E5%B8%A6%E7%9A%84%20Kubernetes%20%E9%9B%86%E7%BE%A4%0A2.%20%5B%E4%BD%BF%E7%94%A8%20Rancher2.0%20%E6%90%AD%E5%BB%BA%20Kubernetes%20%E9%9B%86%E7%BE%A4%5D(https%3A%2F%2Fblog.csdn.net%2Faixiaoyang168%2Farticle%2Fdetails%2F88600530)%0A3.%20%E5%9C%A8%20Google%20Cloud%20%E4%B8%8A%E7%9B%B4%E6%8E%A5%E5%BC%80%E9%9B%86%E7%BE%A4%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%A2%86%20300%20%E7%BE%8E%E9%87%91%E7%9A%84%E4%BD%93%E9%AA%8C%E9%87%91%EF%BC%8C%E9%9C%80%E8%A6%81%E7%BF%BB%E5%A2%99%0A%0A%E4%B8%8D%E6%8E%A8%E8%8D%90%20MiniKube%2C%E7%BF%BB%E5%A2%99%E5%92%8C%E4%BB%A3%E7%90%86%E9%97%AE%E9%A2%98%E9%9D%9E%E5%B8%B8%E9%9A%BE%E6%90%9E%E3%80%82%0A%E5%86%8D%E9%99%84%E4%B8%8A%20Docker%20%5B%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86%E7%9A%84%E6%96%B9%E5%BC%8F%5D(https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F26033249)%0A%0A%5B%E5%9C%A8%E7%BA%BF%E4%BD%93%E9%AA%8C%20Istio%5D(https%3A%2F%2Fkatacoda.com%2Fcourses%2Fistio%2Fdeploy-istio-on-kubernetes)%20%0A%0A%0A%23%23%20%E5%8F%82%E8%80%83%E8%B5%84%E6%96%99%0A%5Bkubernetes-handbook%5D(https%3A%2F%2Fjimmysong.io%2Fkubernetes-handbook%2F)%0A%5Bistio-handbook%5D(https%3A%2F%2Fwww.servicemesher.com%2Fistio-handbook%2F)%0A%5B%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%5D(https%3A%2F%2Fskyao.gitbooks.io%2Flearning-microservice%2Fcontent%2Fdefinition%2FMartin-Fowler%2Fmicroservices.html)%0A%5B%E7%95%85%E8%B0%88%E4%BA%91%E5%8E%9F%E7%94%9F%EF%BC%88%E4%B8%8A%EF%BC%89%EF%BC%9A%E4%BA%91%E5%8E%9F%E7%94%9F%E5%BA%94%E7%94%A8%E5%BA%94%E8%AF%A5%E6%98%AF%E4%BB%80%E4%B9%88%E6%A0%B7%E5%AD%90%EF%BC%9F%5D(https%3A%2F%2Fwww.infoq.cn%2Farticle%2FfA42rfjV*dYGAvRANFqE)%0A%5BService%20Mesh%EF%BC%9A%E4%B8%8B%E4%B8%80%E4%BB%A3%E5%BE%AE%E6%9C%8D%E5%8A%A1%EF%BC%9F%5D(https%3A%2F%2Fjuejin.im%2Fentry%2F59fbab2151882576ea350afb)%0A%5B%E4%BB%8E%E6%9E%B6%E6%9E%84%E5%88%B0%E7%BB%84%E4%BB%B6%EF%BC%8C%E6%B7%B1%E6%8C%96istio%E5%A6%82%E4%BD%95%E8%BF%9E%E6%8E%A5%E3%80%81%E7%AE%A1%E7%90%86%E5%92%8C%E4%BF%9D%E6%8A%A4%E5%BE%AE%E6%9C%8D%E5%8A%A12.0%EF%BC%9F%5D(https%3A%2F%2Fwww.jianshu.com%2Fp%2F8104194ff6fd)%0A</center>"
  },
  {
    "title": "轻量型互联网应用架构方式",
    "created": "2019-10-10T19:22:14.000Z",
    "updated": "2019-11-20T20:22:55.000Z",
    "tags": [
      "posts",
      "架构"
    ],
    "content": "# 轻量型 Web 架构模式\n\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">轻量型 Web 架构模式</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">前言</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Web 架构模式</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">基础架构实践</a>\n        *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">容器编排</a>\n        *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">日志收集</a>\n        *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">应用观测</a>\n        *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">流量控制</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Web 应用架构</a>\n        *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">语言的选择，为什么是 Node.js</a>\n        *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Web 框架如何选</a>\n            *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">社区优秀的框架们</a>\n            *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">自研的方向</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">总结</a>\n\n## 前言\n\n说到互联网应用架构，就绕不开微服务，当下（2019）最热门的微服务架构体系应该还是 Spring Cloud 和 Dubbo，阿里也推出了自己的 Spring Cloud 实现 Spring Cloud Alibaba。这类框架围绕微服务体系提供了大而全的功能，包括服务发现、治理、流量监控、配置管理等，让人向往。\n\n但是其缺点也是比较明显：\n\n*   限定于 Java 体系，其他编程语言无法享受这个体系\n*   侵入应用，几乎每个 Java 应用都挂载一堆 Spring 相关的 jar 包\n\n所以目前社区发展的新方向是：云原生。\n\n其中的翘楚便是 istio，基于 kubernetes 的 sidecar 模式，把 Sprint Cloud 做的大部分工作下沉到基础应用层面，让应用层无感。  \n有了 Istio 之后，微服务应用实现了大减负，所以我重新思考了**对于小型互联网公司来说，当下最适合的架构模式应该是什么**。\n\n## Web 架构模式\n\n适用场景：小型互联网公司，业务多而小，追求开发效率。  \n解决方案：把重复工作隐藏起来，让应用层轻量快跑\n\n具体有两个方向  \n**基础架构层面**：使用 Kubernetes 和 Istio，提供微服务所需要的功能支持  \n**应用层面**：针对 Nodejs 后端编程领域，提供一个最佳实额\n\n整体架构图：  \n<en-media hash=\"b07f8caa18aca530cd46f5d3f44f9493\" type=\"image/png\"></en-media>\n\n## 基础架构实践\n\n目前还没有足够的时间完成落地实践，只能说一下理论规划。  \n现在是云时代，所以直接用 Kubernetes 来做应用编排就可以了。  \n后期可以落地 Istio，就可以保证微服务们稳定运行。\n\n### 容器编排\n\nKubernetes\n\n### 日志收集\n\n*   在 k8s 集成 elk\n*   输入日志到阿里云 nas\n\n### 应用观测\n\nIstio 提供 Grafana 请求分析、 Jaeger链路追踪、告警等\n\n### 流量控制\n\n*   权限校验\n*   加密\n*   熔断限流\n\n## Web 应用架构\n\n在应用层，我最终选择是使用 Node.js 语言来做主要的业务开发。\n\n使用 Koa + 自研框架。\n\n### 语言的选择，为什么是 Node.js\n\n主要原因是我目前所在团队技术栈在 Node 积累比较多。\n\n其次原因是有了 typescript 之后，使用 node 编写后端应用变得更加可维护了，而且 node 小而快（开发效率快，当然IO密集型的应用运行效率也不差）非常适合微服务场景。\n\n最后，Node 的上手难度真的很低。\n\n**当然要使用其他语言也是可以的，如果有着复杂业务逻辑，可以使用 Kotlin + Spring Boot 这组套件，但不包括 Spring Cloud**。\n\nKotlin 能完美复用 JVM 生态，也可以避免 Java 语言的一些繁琐的写法，甚至后期还可以用上 Kotlin 的协程，来替代 Java 目前的多线程并发模型。\n\n当然，本文讨论的是 Web 应用架构，如果你的应用是数据处理方面，本文无法提供任何帮助。而在 Web 领域，Python 和 PHP 对比起 Node，其实并没有优势，所以就不考虑了。\n\n### Web 框架如何选\n\nNode 的 Web 框架还挺多的，我比较熟悉的有：\n\n*   Sails.js 大而全，甚至有自己的 orm, node 世界的 ruby on rails\n*   Express 基础 web 框架\n*   Koa 更基础的 web 框架，甚至两 body-parse 都不自带\n*   Thinkjs Thinkphp 吧\n*   Egg 阿里出品，挺受欢迎的\n*   NestJS node 世界的 Spring MVC\n\n我公司早期使用 sails，看中其集成的丰富功能，但是后期 sails 的成长速度跟不上社区，对一些新特性 Generator 等不能及时兼容，而且太笨重了。\n\n所以团队在 17 年左右转型选择了 Koa，然后自己组装实践各个基础功能，这个做法的好处是高度自定义，非常契合公司发展需要。\n\n#### 社区优秀的框架们\n\n在 17 年之后，相继涌现一些优秀框架，像 egg 和 nestjs，当时我们并没有采用他们。\n\nEgg 本身是优秀的框架，但是它是为中台打造的，但我公司需要用 Node 完成本来是 Java 做的事情，我们会用 Node 做比较重的业务，Egg 在这方便并不适合，例如没有模块划分的概念。\n\n比起 Egg ，NestJS 就更适合我们，当时看它的文档就能感受出来，NestJS 的作者们是真的拿这个框架来做后端业务的，文档里讲到了我们日常碰到的很多痛点：\n\n*   模块划分\n*   循环引用\n*   OpenAPI\n*   IOC 依赖注入\n*   CRUD\n\n当时感觉像是找到了真爱，但是实践过后，发现一些问题：\n\n*   编码规范：NestJS 有自己的一套规范，而且它封装得足够多，基本上无法修改这套规范，只能妥协。\n*   集成测试：我们在早期使用 Koa 的过程中，沉淀了一套集成测试方案，特别是对 mongodb，我们做了一些工具可以自动注入和清除测试数据，要在 NestJs 实现这个功能，需要有足够的时间对其改造\n\n基于上面两个原因，NestJS 并没有在团队推广开来。\n\n#### 自研的方向\n\n社区的框架既然不合适，那就博采众长，自己组装一套框架出来，所以我最近捣鼓出了 [@akajs](https://github.com/kaolalicai/akajs), 预期说这个东西是框架，更准确的说法是，Kalengo团队的Node后端开发最近实践集合。就是把后端常用的东西集合打包起来，包含：\n\n*   IOC 依赖注入\n*   注解式路由\n*   CRUD 我们很多项目非常简单，重复的 CRUD 工作必须简化\n*   Mongoose + Typescript 封装\n*   Redis + Redlock 封装\n*   集成测试支持\n*   常用 Util，如日期数字处理等\n*   请求参数校验和全局异常处理\n\n此外还有些最佳实践\n\n*   OpenAPI 文档自动生成\n*   Docker 支持\n*   UML 设计\n*   模块划分\n\n这些我们则通过项目模板来提供。\n\n有了这套工具，后端可以更加轻量和统一，开发可以短时间内搭建起一个完备的后端服务。\n\n## 总结\n\n这套架构方式，不论是基础架构层面，还是应用层面，都是通过抽离通用的功能，把服务治理的东西抽出下沉到 Istio，把后端通用的工具和实践抽出放在 [@akajs](https://github.com/kaolalicai/akajs) 和项目模板中，以此来简化上层应用。\n\n这样一线的后端开发，可以专注于业务逻辑的实现，不必在为基础设施烦恼。毕竟小公司要生存，“快”是很重要的。\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%23%20%E8%BD%BB%E9%87%8F%E5%9E%8B%20Web%20%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F%0A%0A%5BTOC%5D%0A%0A%23%23%20%E5%89%8D%E8%A8%80%0A%E8%AF%B4%E5%88%B0%E4%BA%92%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%EF%BC%8C%E5%B0%B1%E7%BB%95%E4%B8%8D%E5%BC%80%E5%BE%AE%E6%9C%8D%E5%8A%A1%EF%BC%8C%E5%BD%93%E4%B8%8B%EF%BC%882019%EF%BC%89%E6%9C%80%E7%83%AD%E9%97%A8%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%BD%93%E7%B3%BB%E5%BA%94%E8%AF%A5%E8%BF%98%E6%98%AF%20Spring%20Cloud%20%E5%92%8C%20Dubbo%EF%BC%8C%E9%98%BF%E9%87%8C%E4%B9%9F%E6%8E%A8%E5%87%BA%E4%BA%86%E8%87%AA%E5%B7%B1%E7%9A%84%20Spring%20Cloud%20%E5%AE%9E%E7%8E%B0%20Spring%20Cloud%20Alibaba%E3%80%82%E8%BF%99%E7%B1%BB%E6%A1%86%E6%9E%B6%E5%9B%B4%E7%BB%95%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BD%93%E7%B3%BB%E6%8F%90%E4%BE%9B%E4%BA%86%E5%A4%A7%E8%80%8C%E5%85%A8%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%8C%E5%8C%85%E6%8B%AC%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%E3%80%81%E6%B2%BB%E7%90%86%E3%80%81%E6%B5%81%E9%87%8F%E7%9B%91%E6%8E%A7%E3%80%81%E9%85%8D%E7%BD%AE%E7%AE%A1%E7%90%86%E7%AD%89%EF%BC%8C%E8%AE%A9%E4%BA%BA%E5%90%91%E5%BE%80%E3%80%82%0A%0A%0A%E4%BD%86%E6%98%AF%E5%85%B6%E7%BC%BA%E7%82%B9%E4%B9%9F%E6%98%AF%E6%AF%94%E8%BE%83%E6%98%8E%E6%98%BE%EF%BC%9A%0A-%20%E9%99%90%E5%AE%9A%E4%BA%8E%20Java%20%E4%BD%93%E7%B3%BB%EF%BC%8C%E5%85%B6%E4%BB%96%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E6%97%A0%E6%B3%95%E4%BA%AB%E5%8F%97%E8%BF%99%E4%B8%AA%E4%BD%93%E7%B3%BB%0A-%20%E4%BE%B5%E5%85%A5%E5%BA%94%E7%94%A8%EF%BC%8C%E5%87%A0%E4%B9%8E%E6%AF%8F%E4%B8%AA%20Java%20%E5%BA%94%E7%94%A8%E9%83%BD%E6%8C%82%E8%BD%BD%E4%B8%80%E5%A0%86%20Spring%20%E7%9B%B8%E5%85%B3%E7%9A%84%20jar%20%E5%8C%85%0A%0A%0A%E6%89%80%E4%BB%A5%E7%9B%AE%E5%89%8D%E7%A4%BE%E5%8C%BA%E5%8F%91%E5%B1%95%E7%9A%84%E6%96%B0%E6%96%B9%E5%90%91%E6%98%AF%EF%BC%9A%E4%BA%91%E5%8E%9F%E7%94%9F%E3%80%82%0A%0A%0A%E5%85%B6%E4%B8%AD%E7%9A%84%E7%BF%98%E6%A5%9A%E4%BE%BF%E6%98%AF%20istio%EF%BC%8C%E5%9F%BA%E4%BA%8E%20kubernetes%20%E7%9A%84%20sidecar%20%E6%A8%A1%E5%BC%8F%EF%BC%8C%E6%8A%8A%20Sprint%20Cloud%20%E5%81%9A%E7%9A%84%E5%A4%A7%E9%83%A8%E5%88%86%E5%B7%A5%E4%BD%9C%E4%B8%8B%E6%B2%89%E5%88%B0%E5%9F%BA%E7%A1%80%E5%BA%94%E7%94%A8%E5%B1%82%E9%9D%A2%EF%BC%8C%E8%AE%A9%E5%BA%94%E7%94%A8%E5%B1%82%E6%97%A0%E6%84%9F%E3%80%82%0A%E6%9C%89%E4%BA%86%20Istio%20%E4%B9%8B%E5%90%8E%EF%BC%8C%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%BA%94%E7%94%A8%E5%AE%9E%E7%8E%B0%E4%BA%86%E5%A4%A7%E5%87%8F%E8%B4%9F%EF%BC%8C%E6%89%80%E4%BB%A5%E6%88%91%E9%87%8D%E6%96%B0%E6%80%9D%E8%80%83%E4%BA%86**%E5%AF%B9%E4%BA%8E%E5%B0%8F%E5%9E%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%85%AC%E5%8F%B8%E6%9D%A5%E8%AF%B4%EF%BC%8C%E5%BD%93%E4%B8%8B%E6%9C%80%E9%80%82%E5%90%88%E7%9A%84%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F%E5%BA%94%E8%AF%A5%E6%98%AF%E4%BB%80%E4%B9%88**%E3%80%82%0A%0A%23%23%20Web%20%E6%9E%B6%E6%9E%84%E6%A8%A1%E5%BC%8F%0A%E9%80%82%E7%94%A8%E5%9C%BA%E6%99%AF%EF%BC%9A%E5%B0%8F%E5%9E%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%85%AC%E5%8F%B8%EF%BC%8C%E4%B8%9A%E5%8A%A1%E5%A4%9A%E8%80%8C%E5%B0%8F%EF%BC%8C%E8%BF%BD%E6%B1%82%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E3%80%82%0A%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%9A%E6%8A%8A%E9%87%8D%E5%A4%8D%E5%B7%A5%E4%BD%9C%E9%9A%90%E8%97%8F%E8%B5%B7%E6%9D%A5%EF%BC%8C%E8%AE%A9%E5%BA%94%E7%94%A8%E5%B1%82%E8%BD%BB%E9%87%8F%E5%BF%AB%E8%B7%91%0A%0A%E5%85%B7%E4%BD%93%E6%9C%89%E4%B8%A4%E4%B8%AA%E6%96%B9%E5%90%91%0A**%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84%E5%B1%82%E9%9D%A2**%EF%BC%9A%E4%BD%BF%E7%94%A8%20Kubernetes%20%E5%92%8C%20Istio%EF%BC%8C%E6%8F%90%E4%BE%9B%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%89%80%E9%9C%80%E8%A6%81%E7%9A%84%E5%8A%9F%E8%83%BD%E6%94%AF%E6%8C%81%0A**%E5%BA%94%E7%94%A8%E5%B1%82%E9%9D%A2**%EF%BC%9A%E9%92%88%E5%AF%B9%20Nodejs%20%E5%90%8E%E7%AB%AF%E7%BC%96%E7%A8%8B%E9%A2%86%E5%9F%9F%EF%BC%8C%E6%8F%90%E4%BE%9B%E4%B8%80%E4%B8%AA%E6%9C%80%E4%BD%B3%E5%AE%9E%E9%A2%9D%0A%0A%E6%95%B4%E4%BD%93%E6%9E%B6%E6%9E%84%E5%9B%BE%EF%BC%9A%0A!%5Bb07f8caa18aca530cd46f5d3f44f9493.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp2041)%0A%0A%0A%23%23%20%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84%E5%AE%9E%E8%B7%B5%0A%E7%9B%AE%E5%89%8D%E8%BF%98%E6%B2%A1%E6%9C%89%E8%B6%B3%E5%A4%9F%E7%9A%84%E6%97%B6%E9%97%B4%E5%AE%8C%E6%88%90%E8%90%BD%E5%9C%B0%E5%AE%9E%E8%B7%B5%EF%BC%8C%E5%8F%AA%E8%83%BD%E8%AF%B4%E4%B8%80%E4%B8%8B%E7%90%86%E8%AE%BA%E8%A7%84%E5%88%92%E3%80%82%0A%E7%8E%B0%E5%9C%A8%E6%98%AF%E4%BA%91%E6%97%B6%E4%BB%A3%EF%BC%8C%E6%89%80%E4%BB%A5%E7%9B%B4%E6%8E%A5%E7%94%A8%20Kubernetes%20%E6%9D%A5%E5%81%9A%E5%BA%94%E7%94%A8%E7%BC%96%E6%8E%92%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BA%86%E3%80%82%0A%E5%90%8E%E6%9C%9F%E5%8F%AF%E4%BB%A5%E8%90%BD%E5%9C%B0%20Istio%EF%BC%8C%E5%B0%B1%E5%8F%AF%E4%BB%A5%E4%BF%9D%E8%AF%81%E5%BE%AE%E6%9C%8D%E5%8A%A1%E4%BB%AC%E7%A8%B3%E5%AE%9A%E8%BF%90%E8%A1%8C%E3%80%82%0A%0A%23%23%23%20%E5%AE%B9%E5%99%A8%E7%BC%96%E6%8E%92%0AKubernetes%0A%0A%23%23%23%20%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%0A-%20%E5%9C%A8%20k8s%20%E9%9B%86%E6%88%90%20elk%20%0A-%20%E8%BE%93%E5%85%A5%E6%97%A5%E5%BF%97%E5%88%B0%E9%98%BF%E9%87%8C%E4%BA%91%20nas%0A%0A%23%23%23%20%E5%BA%94%E7%94%A8%E8%A7%82%E6%B5%8B%0AIstio%20%E6%8F%90%E4%BE%9B%20Grafana%20%E8%AF%B7%E6%B1%82%E5%88%86%E6%9E%90%E3%80%81%20Jaeger%E9%93%BE%E8%B7%AF%E8%BF%BD%E8%B8%AA%E3%80%81%E5%91%8A%E8%AD%A6%E7%AD%89%0A%0A%23%23%23%20%E6%B5%81%E9%87%8F%E6%8E%A7%E5%88%B6%0A-%20%E6%9D%83%E9%99%90%E6%A0%A1%E9%AA%8C%0A-%20%E5%8A%A0%E5%AF%86%0A-%20%E7%86%94%E6%96%AD%E9%99%90%E6%B5%81%0A%0A%23%23%20Web%20%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%0A%E5%9C%A8%E5%BA%94%E7%94%A8%E5%B1%82%EF%BC%8C%E6%88%91%E6%9C%80%E7%BB%88%E9%80%89%E6%8B%A9%E6%98%AF%E4%BD%BF%E7%94%A8%20Node.js%20%E8%AF%AD%E8%A8%80%E6%9D%A5%E5%81%9A%E4%B8%BB%E8%A6%81%E7%9A%84%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E3%80%82%0A%0A%E4%BD%BF%E7%94%A8%20Koa%20%2B%20%E8%87%AA%E7%A0%94%E6%A1%86%E6%9E%B6%E3%80%82%0A%0A%23%23%23%20%E8%AF%AD%E8%A8%80%E7%9A%84%E9%80%89%E6%8B%A9%EF%BC%8C%E4%B8%BA%E4%BB%80%E4%B9%88%E6%98%AF%20Node.js%0A%E4%B8%BB%E8%A6%81%E5%8E%9F%E5%9B%A0%E6%98%AF%E6%88%91%E7%9B%AE%E5%89%8D%E6%89%80%E5%9C%A8%E5%9B%A2%E9%98%9F%E6%8A%80%E6%9C%AF%E6%A0%88%E5%9C%A8%20Node%20%E7%A7%AF%E7%B4%AF%E6%AF%94%E8%BE%83%E5%A4%9A%E3%80%82%0A%0A%E5%85%B6%E6%AC%A1%E5%8E%9F%E5%9B%A0%E6%98%AF%E6%9C%89%E4%BA%86%20typescript%20%E4%B9%8B%E5%90%8E%EF%BC%8C%E4%BD%BF%E7%94%A8%20node%20%E7%BC%96%E5%86%99%E5%90%8E%E7%AB%AF%E5%BA%94%E7%94%A8%E5%8F%98%E5%BE%97%E6%9B%B4%E5%8A%A0%E5%8F%AF%E7%BB%B4%E6%8A%A4%E4%BA%86%EF%BC%8C%E8%80%8C%E4%B8%94%20node%20%E5%B0%8F%E8%80%8C%E5%BF%AB%EF%BC%88%E5%BC%80%E5%8F%91%E6%95%88%E7%8E%87%E5%BF%AB%EF%BC%8C%E5%BD%93%E7%84%B6IO%E5%AF%86%E9%9B%86%E5%9E%8B%E7%9A%84%E5%BA%94%E7%94%A8%E8%BF%90%E8%A1%8C%E6%95%88%E7%8E%87%E4%B9%9F%E4%B8%8D%E5%B7%AE%EF%BC%89%E9%9D%9E%E5%B8%B8%E9%80%82%E5%90%88%E5%BE%AE%E6%9C%8D%E5%8A%A1%E5%9C%BA%E6%99%AF%E3%80%82%0A%0A%E6%9C%80%E5%90%8E%EF%BC%8CNode%20%E7%9A%84%E4%B8%8A%E6%89%8B%E9%9A%BE%E5%BA%A6%E7%9C%9F%E7%9A%84%E5%BE%88%E4%BD%8E%E3%80%82%0A%0A**%E5%BD%93%E7%84%B6%E8%A6%81%E4%BD%BF%E7%94%A8%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E4%B9%9F%E6%98%AF%E5%8F%AF%E4%BB%A5%E7%9A%84%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%9C%89%E7%9D%80%E5%A4%8D%E6%9D%82%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%BD%BF%E7%94%A8%20Kotlin%20%2B%20Spring%20Boot%20%E8%BF%99%E7%BB%84%E5%A5%97%E4%BB%B6%EF%BC%8C%E4%BD%86%E4%B8%8D%E5%8C%85%E6%8B%AC%20Spring%20Cloud**%E3%80%82%0A%0AKotlin%20%E8%83%BD%E5%AE%8C%E7%BE%8E%E5%A4%8D%E7%94%A8%20JVM%20%E7%94%9F%E6%80%81%EF%BC%8C%E4%B9%9F%E5%8F%AF%E4%BB%A5%E9%81%BF%E5%85%8D%20Java%20%E8%AF%AD%E8%A8%80%E7%9A%84%E4%B8%80%E4%BA%9B%E7%B9%81%E7%90%90%E7%9A%84%E5%86%99%E6%B3%95%EF%BC%8C%E7%94%9A%E8%87%B3%E5%90%8E%E6%9C%9F%E8%BF%98%E5%8F%AF%E4%BB%A5%E7%94%A8%E4%B8%8A%20Kotlin%20%E7%9A%84%E5%8D%8F%E7%A8%8B%EF%BC%8C%E6%9D%A5%E6%9B%BF%E4%BB%A3%20Java%20%E7%9B%AE%E5%89%8D%E7%9A%84%E5%A4%9A%E7%BA%BF%E7%A8%8B%E5%B9%B6%E5%8F%91%E6%A8%A1%E5%9E%8B%E3%80%82%0A%0A%E5%BD%93%E7%84%B6%EF%BC%8C%E6%9C%AC%E6%96%87%E8%AE%A8%E8%AE%BA%E7%9A%84%E6%98%AF%20Web%20%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%BD%A0%E7%9A%84%E5%BA%94%E7%94%A8%E6%98%AF%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E6%96%B9%E9%9D%A2%EF%BC%8C%E6%9C%AC%E6%96%87%E6%97%A0%E6%B3%95%E6%8F%90%E4%BE%9B%E4%BB%BB%E4%BD%95%E5%B8%AE%E5%8A%A9%E3%80%82%E8%80%8C%E5%9C%A8%20Web%20%E9%A2%86%E5%9F%9F%EF%BC%8CPython%20%E5%92%8C%20PHP%20%E5%AF%B9%E6%AF%94%E8%B5%B7%20Node%EF%BC%8C%E5%85%B6%E5%AE%9E%E5%B9%B6%E6%B2%A1%E6%9C%89%E4%BC%98%E5%8A%BF%EF%BC%8C%E6%89%80%E4%BB%A5%E5%B0%B1%E4%B8%8D%E8%80%83%E8%99%91%E4%BA%86%E3%80%82%0A%0A%23%23%23%20Web%20%E6%A1%86%E6%9E%B6%E5%A6%82%E4%BD%95%E9%80%89%0ANode%20%E7%9A%84%20Web%20%E6%A1%86%E6%9E%B6%E8%BF%98%E6%8C%BA%E5%A4%9A%E7%9A%84%EF%BC%8C%E6%88%91%E6%AF%94%E8%BE%83%E7%86%9F%E6%82%89%E7%9A%84%E6%9C%89%EF%BC%9A%0A-%20Sails.js%20%E5%A4%A7%E8%80%8C%E5%85%A8%EF%BC%8C%E7%94%9A%E8%87%B3%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84%20orm%2C%20node%20%E4%B8%96%E7%95%8C%E7%9A%84%20ruby%20on%20rails%0A-%20Express%20%E5%9F%BA%E7%A1%80%20web%20%E6%A1%86%E6%9E%B6%0A-%20Koa%20%E6%9B%B4%E5%9F%BA%E7%A1%80%E7%9A%84%20web%20%E6%A1%86%E6%9E%B6%EF%BC%8C%E7%94%9A%E8%87%B3%E4%B8%A4%20body-parse%20%E9%83%BD%E4%B8%8D%E8%87%AA%E5%B8%A6%0A-%20Thinkjs%20Thinkphp%20%E5%90%A7%0A-%20Egg%20%E9%98%BF%E9%87%8C%E5%87%BA%E5%93%81%EF%BC%8C%E6%8C%BA%E5%8F%97%E6%AC%A2%E8%BF%8E%E7%9A%84%0A-%20NestJS%20node%20%E4%B8%96%E7%95%8C%E7%9A%84%20Spring%20MVC%0A%0A%E6%88%91%E5%85%AC%E5%8F%B8%E6%97%A9%E6%9C%9F%E4%BD%BF%E7%94%A8%20sails%EF%BC%8C%E7%9C%8B%E4%B8%AD%E5%85%B6%E9%9B%86%E6%88%90%E7%9A%84%E4%B8%B0%E5%AF%8C%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%BD%86%E6%98%AF%E5%90%8E%E6%9C%9F%20sails%20%E7%9A%84%E6%88%90%E9%95%BF%E9%80%9F%E5%BA%A6%E8%B7%9F%E4%B8%8D%E4%B8%8A%E7%A4%BE%E5%8C%BA%EF%BC%8C%E5%AF%B9%E4%B8%80%E4%BA%9B%E6%96%B0%E7%89%B9%E6%80%A7%20Generator%20%E7%AD%89%E4%B8%8D%E8%83%BD%E5%8F%8A%E6%97%B6%E5%85%BC%E5%AE%B9%EF%BC%8C%E8%80%8C%E4%B8%94%E5%A4%AA%E7%AC%A8%E9%87%8D%E4%BA%86%E3%80%82%0A%0A%E6%89%80%E4%BB%A5%E5%9B%A2%E9%98%9F%E5%9C%A8%2017%20%E5%B9%B4%E5%B7%A6%E5%8F%B3%E8%BD%AC%E5%9E%8B%E9%80%89%E6%8B%A9%E4%BA%86%20Koa%EF%BC%8C%E7%84%B6%E5%90%8E%E8%87%AA%E5%B7%B1%E7%BB%84%E8%A3%85%E5%AE%9E%E8%B7%B5%E5%90%84%E4%B8%AA%E5%9F%BA%E7%A1%80%E5%8A%9F%E8%83%BD%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%81%9A%E6%B3%95%E7%9A%84%E5%A5%BD%E5%A4%84%E6%98%AF%E9%AB%98%E5%BA%A6%E8%87%AA%E5%AE%9A%E4%B9%89%EF%BC%8C%E9%9D%9E%E5%B8%B8%E5%A5%91%E5%90%88%E5%85%AC%E5%8F%B8%E5%8F%91%E5%B1%95%E9%9C%80%E8%A6%81%E3%80%82%0A%0A%23%23%23%23%20%E7%A4%BE%E5%8C%BA%E4%BC%98%E7%A7%80%E7%9A%84%E6%A1%86%E6%9E%B6%E4%BB%AC%0A%E5%9C%A8%2017%20%E5%B9%B4%E4%B9%8B%E5%90%8E%EF%BC%8C%E7%9B%B8%E7%BB%A7%E6%B6%8C%E7%8E%B0%E4%B8%80%E4%BA%9B%E4%BC%98%E7%A7%80%E6%A1%86%E6%9E%B6%EF%BC%8C%E5%83%8F%20egg%20%E5%92%8C%20nestjs%EF%BC%8C%E5%BD%93%E6%97%B6%E6%88%91%E4%BB%AC%E5%B9%B6%E6%B2%A1%E6%9C%89%E9%87%87%E7%94%A8%E4%BB%96%E4%BB%AC%E3%80%82%0A%0AEgg%20%E6%9C%AC%E8%BA%AB%E6%98%AF%E4%BC%98%E7%A7%80%E7%9A%84%E6%A1%86%E6%9E%B6%EF%BC%8C%E4%BD%86%E6%98%AF%E5%AE%83%E6%98%AF%E4%B8%BA%E4%B8%AD%E5%8F%B0%E6%89%93%E9%80%A0%E7%9A%84%EF%BC%8C%E4%BD%86%E6%88%91%E5%85%AC%E5%8F%B8%E9%9C%80%E8%A6%81%E7%94%A8%20Node%20%E5%AE%8C%E6%88%90%E6%9C%AC%E6%9D%A5%E6%98%AF%20Java%20%E5%81%9A%E7%9A%84%E4%BA%8B%E6%83%85%EF%BC%8C%E6%88%91%E4%BB%AC%E4%BC%9A%E7%94%A8%20Node%20%E5%81%9A%E6%AF%94%E8%BE%83%E9%87%8D%E7%9A%84%E4%B8%9A%E5%8A%A1%EF%BC%8CEgg%20%E5%9C%A8%E8%BF%99%E6%96%B9%E4%BE%BF%E5%B9%B6%E4%B8%8D%E9%80%82%E5%90%88%EF%BC%8C%E4%BE%8B%E5%A6%82%E6%B2%A1%E6%9C%89%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%E7%9A%84%E6%A6%82%E5%BF%B5%E3%80%82%0A%0A%E6%AF%94%E8%B5%B7%20Egg%20%EF%BC%8CNestJS%20%E5%B0%B1%E6%9B%B4%E9%80%82%E5%90%88%E6%88%91%E4%BB%AC%EF%BC%8C%E5%BD%93%E6%97%B6%E7%9C%8B%E5%AE%83%E7%9A%84%E6%96%87%E6%A1%A3%E5%B0%B1%E8%83%BD%E6%84%9F%E5%8F%97%E5%87%BA%E6%9D%A5%EF%BC%8CNestJS%20%E7%9A%84%E4%BD%9C%E8%80%85%E4%BB%AC%E6%98%AF%E7%9C%9F%E7%9A%84%E6%8B%BF%E8%BF%99%E4%B8%AA%E6%A1%86%E6%9E%B6%E6%9D%A5%E5%81%9A%E5%90%8E%E7%AB%AF%E4%B8%9A%E5%8A%A1%E7%9A%84%EF%BC%8C%E6%96%87%E6%A1%A3%E9%87%8C%E8%AE%B2%E5%88%B0%E4%BA%86%E6%88%91%E4%BB%AC%E6%97%A5%E5%B8%B8%E7%A2%B0%E5%88%B0%E7%9A%84%E5%BE%88%E5%A4%9A%E7%97%9B%E7%82%B9%EF%BC%9A%0A-%20%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%0A-%20%E5%BE%AA%E7%8E%AF%E5%BC%95%E7%94%A8%0A-%20OpenAPI%0A-%20IOC%20%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%0A-%20CRUD%0A%0A%E5%BD%93%E6%97%B6%E6%84%9F%E8%A7%89%E5%83%8F%E6%98%AF%E6%89%BE%E5%88%B0%E4%BA%86%E7%9C%9F%E7%88%B1%EF%BC%8C%E4%BD%86%E6%98%AF%E5%AE%9E%E8%B7%B5%E8%BF%87%E5%90%8E%EF%BC%8C%E5%8F%91%E7%8E%B0%E4%B8%80%E4%BA%9B%E9%97%AE%E9%A2%98%EF%BC%9A%0A%0A-%20%E7%BC%96%E7%A0%81%E8%A7%84%E8%8C%83%EF%BC%9ANestJS%20%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84%E4%B8%80%E5%A5%97%E8%A7%84%E8%8C%83%EF%BC%8C%E8%80%8C%E4%B8%94%E5%AE%83%E5%B0%81%E8%A3%85%E5%BE%97%E8%B6%B3%E5%A4%9F%E5%A4%9A%EF%BC%8C%E5%9F%BA%E6%9C%AC%E4%B8%8A%E6%97%A0%E6%B3%95%E4%BF%AE%E6%94%B9%E8%BF%99%E5%A5%97%E8%A7%84%E8%8C%83%EF%BC%8C%E5%8F%AA%E8%83%BD%E5%A6%A5%E5%8D%8F%E3%80%82%0A-%20%E9%9B%86%E6%88%90%E6%B5%8B%E8%AF%95%EF%BC%9A%E6%88%91%E4%BB%AC%E5%9C%A8%E6%97%A9%E6%9C%9F%E4%BD%BF%E7%94%A8%20Koa%20%E7%9A%84%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E6%B2%89%E6%B7%80%E4%BA%86%E4%B8%80%E5%A5%97%E9%9B%86%E6%88%90%E6%B5%8B%E8%AF%95%E6%96%B9%E6%A1%88%EF%BC%8C%E7%89%B9%E5%88%AB%E6%98%AF%E5%AF%B9%20mongodb%EF%BC%8C%E6%88%91%E4%BB%AC%E5%81%9A%E4%BA%86%E4%B8%80%E4%BA%9B%E5%B7%A5%E5%85%B7%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%8A%A8%E6%B3%A8%E5%85%A5%E5%92%8C%E6%B8%85%E9%99%A4%E6%B5%8B%E8%AF%95%E6%95%B0%E6%8D%AE%EF%BC%8C%E8%A6%81%E5%9C%A8%20NestJs%20%E5%AE%9E%E7%8E%B0%E8%BF%99%E4%B8%AA%E5%8A%9F%E8%83%BD%EF%BC%8C%E9%9C%80%E8%A6%81%E6%9C%89%E8%B6%B3%E5%A4%9F%E7%9A%84%E6%97%B6%E9%97%B4%E5%AF%B9%E5%85%B6%E6%94%B9%E9%80%A0%0A%0A%E5%9F%BA%E4%BA%8E%E4%B8%8A%E9%9D%A2%E4%B8%A4%E4%B8%AA%E5%8E%9F%E5%9B%A0%EF%BC%8CNestJS%20%E5%B9%B6%E6%B2%A1%E6%9C%89%E5%9C%A8%E5%9B%A2%E9%98%9F%E6%8E%A8%E5%B9%BF%E5%BC%80%E6%9D%A5%E3%80%82%0A%0A%23%23%23%23%20%E8%87%AA%E7%A0%94%E7%9A%84%E6%96%B9%E5%90%91%0A%E7%A4%BE%E5%8C%BA%E7%9A%84%E6%A1%86%E6%9E%B6%E6%97%A2%E7%84%B6%E4%B8%8D%E5%90%88%E9%80%82%EF%BC%8C%E9%82%A3%E5%B0%B1%E5%8D%9A%E9%87%87%E4%BC%97%E9%95%BF%EF%BC%8C%E8%87%AA%E5%B7%B1%E7%BB%84%E8%A3%85%E4%B8%80%E5%A5%97%E6%A1%86%E6%9E%B6%E5%87%BA%E6%9D%A5%EF%BC%8C%E6%89%80%E4%BB%A5%E6%88%91%E6%9C%80%E8%BF%91%E6%8D%A3%E9%BC%93%E5%87%BA%E4%BA%86%20%5B%40akajs%5D(https%3A%2F%2Fgithub.com%2Fkaolalicai%2Fakajs)%2C%20%E9%A2%84%E6%9C%9F%E8%AF%B4%E8%BF%99%E4%B8%AA%E4%B8%9C%E8%A5%BF%E6%98%AF%E6%A1%86%E6%9E%B6%EF%BC%8C%E6%9B%B4%E5%87%86%E7%A1%AE%E7%9A%84%E8%AF%B4%E6%B3%95%E6%98%AF%EF%BC%8CKalengo%E5%9B%A2%E9%98%9F%E7%9A%84Node%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%E6%9C%80%E8%BF%91%E5%AE%9E%E8%B7%B5%E9%9B%86%E5%90%88%E3%80%82%E5%B0%B1%E6%98%AF%E6%8A%8A%E5%90%8E%E7%AB%AF%E5%B8%B8%E7%94%A8%E7%9A%84%E4%B8%9C%E8%A5%BF%E9%9B%86%E5%90%88%E6%89%93%E5%8C%85%E8%B5%B7%E6%9D%A5%EF%BC%8C%E5%8C%85%E5%90%AB%EF%BC%9A%0A-%20IOC%20%E4%BE%9D%E8%B5%96%E6%B3%A8%E5%85%A5%0A-%20%E6%B3%A8%E8%A7%A3%E5%BC%8F%E8%B7%AF%E7%94%B1%0A-%20CRUD%20%E6%88%91%E4%BB%AC%E5%BE%88%E5%A4%9A%E9%A1%B9%E7%9B%AE%E9%9D%9E%E5%B8%B8%E7%AE%80%E5%8D%95%EF%BC%8C%E9%87%8D%E5%A4%8D%E7%9A%84%20CRUD%20%E5%B7%A5%E4%BD%9C%E5%BF%85%E9%A1%BB%E7%AE%80%E5%8C%96%0A-%20Mongoose%20%2B%20Typescript%20%E5%B0%81%E8%A3%85%0A-%20Redis%20%2B%20Redlock%20%E5%B0%81%E8%A3%85%0A-%20%E9%9B%86%E6%88%90%E6%B5%8B%E8%AF%95%E6%94%AF%E6%8C%81%0A-%20%E5%B8%B8%E7%94%A8%20Util%EF%BC%8C%E5%A6%82%E6%97%A5%E6%9C%9F%E6%95%B0%E5%AD%97%E5%A4%84%E7%90%86%E7%AD%89%0A-%20%E8%AF%B7%E6%B1%82%E5%8F%82%E6%95%B0%E6%A0%A1%E9%AA%8C%E5%92%8C%E5%85%A8%E5%B1%80%E5%BC%82%E5%B8%B8%E5%A4%84%E7%90%86%0A%0A%E6%AD%A4%E5%A4%96%E8%BF%98%E6%9C%89%E4%BA%9B%E6%9C%80%E4%BD%B3%E5%AE%9E%E8%B7%B5%0A-%20OpenAPI%20%E6%96%87%E6%A1%A3%E8%87%AA%E5%8A%A8%E7%94%9F%E6%88%90%0A-%20Docker%20%E6%94%AF%E6%8C%81%0A-%20UML%20%E8%AE%BE%E8%AE%A1%0A-%20%E6%A8%A1%E5%9D%97%E5%88%92%E5%88%86%0A%0A%E8%BF%99%E4%BA%9B%E6%88%91%E4%BB%AC%E5%88%99%E9%80%9A%E8%BF%87%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF%E6%9D%A5%E6%8F%90%E4%BE%9B%E3%80%82%0A%0A%E6%9C%89%E4%BA%86%E8%BF%99%E5%A5%97%E5%B7%A5%E5%85%B7%EF%BC%8C%E5%90%8E%E7%AB%AF%E5%8F%AF%E4%BB%A5%E6%9B%B4%E5%8A%A0%E8%BD%BB%E9%87%8F%E5%92%8C%E7%BB%9F%E4%B8%80%EF%BC%8C%E5%BC%80%E5%8F%91%E5%8F%AF%E4%BB%A5%E7%9F%AD%E6%97%B6%E9%97%B4%E5%86%85%E6%90%AD%E5%BB%BA%E8%B5%B7%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%A4%87%E7%9A%84%E5%90%8E%E7%AB%AF%E6%9C%8D%E5%8A%A1%E3%80%82%0A%0A%23%23%20%E6%80%BB%E7%BB%93%0A%E8%BF%99%E5%A5%97%E6%9E%B6%E6%9E%84%E6%96%B9%E5%BC%8F%EF%BC%8C%E4%B8%8D%E8%AE%BA%E6%98%AF%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84%E5%B1%82%E9%9D%A2%EF%BC%8C%E8%BF%98%E6%98%AF%E5%BA%94%E7%94%A8%E5%B1%82%E9%9D%A2%EF%BC%8C%E9%83%BD%E6%98%AF%E9%80%9A%E8%BF%87%E6%8A%BD%E7%A6%BB%E9%80%9A%E7%94%A8%E7%9A%84%E5%8A%9F%E8%83%BD%EF%BC%8C%E6%8A%8A%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E7%9A%84%E4%B8%9C%E8%A5%BF%E6%8A%BD%E5%87%BA%E4%B8%8B%E6%B2%89%E5%88%B0%20Istio%EF%BC%8C%E6%8A%8A%E5%90%8E%E7%AB%AF%E9%80%9A%E7%94%A8%E7%9A%84%E5%B7%A5%E5%85%B7%E5%92%8C%E5%AE%9E%E8%B7%B5%E6%8A%BD%E5%87%BA%E6%94%BE%E5%9C%A8%20%5B%40akajs%5D(https%3A%2F%2Fgithub.com%2Fkaolalicai%2Fakajs)%20%E5%92%8C%E9%A1%B9%E7%9B%AE%E6%A8%A1%E6%9D%BF%E4%B8%AD%EF%BC%8C%E4%BB%A5%E6%AD%A4%E6%9D%A5%E7%AE%80%E5%8C%96%E4%B8%8A%E5%B1%82%E5%BA%94%E7%94%A8%E3%80%82%0A%0A%E8%BF%99%E6%A0%B7%E4%B8%80%E7%BA%BF%E7%9A%84%E5%90%8E%E7%AB%AF%E5%BC%80%E5%8F%91%EF%BC%8C%E5%8F%AF%E4%BB%A5%E4%B8%93%E6%B3%A8%E4%BA%8E%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E7%9A%84%E5%AE%9E%E7%8E%B0%EF%BC%8C%E4%B8%8D%E5%BF%85%E5%9C%A8%E4%B8%BA%E5%9F%BA%E7%A1%80%E8%AE%BE%E6%96%BD%E7%83%A6%E6%81%BC%E3%80%82%E6%AF%95%E7%AB%9F%E5%B0%8F%E5%85%AC%E5%8F%B8%E8%A6%81%E7%94%9F%E5%AD%98%EF%BC%8C%E2%80%9C%E5%BF%AB%E2%80%9D%E6%98%AF%E5%BE%88%E9%87%8D%E8%A6%81%E7%9A%84%E3%80%82%0A%0A%0A%0A</center>"
  },
  {
    "title": "使用 Helm + Kubernetes 部署微服务",
    "created": "2019-10-31T19:53:46.000Z",
    "updated": "2019-11-20T20:22:47.000Z",
    "tags": [
      "posts",
      "Kubernetes"
    ],
    "content": "## 前言\n\n在之前的文章中，我提出了[轻量型互联网应用架构方式](http://myfjdthink.com/2019/10/11/%e8%bd%bb%e9%87%8f%e5%9e%8b%e4%ba%92%e8%81%94%e7%bd%91%e5%ba%94%e7%94%a8%e6%9e%b6%e6%9e%84%e6%96%b9%e5%bc%8f/)，其中核心思想就是依赖 Kubernetes 实现服务治理。\n\n之后，我尝试在团队中进行落地改造，第一步，就是把目前的服务搬上 Kubernetes。\n\n在这个实践过程中，有些经验可以分享一下。\n\n## 落地经验\n\n在 Kalengo ，开发隐约（并没有 title 上的区别，但实际工作内容有区分）可以分为两类，一类主要处理业务需求，另一类做基础架构。\n\n考虑到 Kubernetes 的复杂性，如果要做到开发不清楚 Kubernetes 原理和部署流程的情况下也能使用这一套工具，要做到以下这些点：\n\n1.  测试环境使用 Rancher管理 k8s 集群。  \n    Rancher 提供了 web 页面，方便开发直接做环境变量修改，镜像变更和部署等操作。\n\n2.  在 Rancher 中启用 Helm 模板  \n    把做好的目标发布到内部的 Helm 仓库，然后在配置到 Rancher 商店中，开发如果要新开一套测试环境，直接在 Rancher 商店里点击操作即可。只有模板制作者或运维才需要在本地安装 kubectl 和 helm 等工具\n\n3.  测试环境使用命名空间实现多租户  \n    不同开发的测试环境使用命名空间隔离，避免冲突\n\n4.  内部服务的 service name 要固定  \n    服务 A 访问服务 B，在没有 k8s 之前，我们是这样做的：  \n    给服务 B 挂在到负载均衡上：http://b.env.kalengo.cn, 然后在服务 A 通过这个地址访问，不同环境，这个地址不一样，所以就要把地址配置到环境变量中。\n\n但是在 k8s 里，我们可以给服务 B 固定一个 service name：http://b-svc, 服务 A 通过这个地址访问，在任何环境都是这个地址。\n\n## 总结\n\n做好了 helm 模板之后，可以做到一键部署完整的服务集合。\n\n无论是开发本地集群，测试环境还是阿里云，只需要修改对应环境参数即可。\n\n同时借助于 Rancher 提供的优秀的 Web 管理能力，极大简化了微服务部署和管理难度。\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%23%23%20%E5%89%8D%E8%A8%80%0A%E5%9C%A8%E4%B9%8B%E5%89%8D%E7%9A%84%E6%96%87%E7%AB%A0%E4%B8%AD%EF%BC%8C%E6%88%91%E6%8F%90%E5%87%BA%E4%BA%86%5B%E8%BD%BB%E9%87%8F%E5%9E%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E6%96%B9%E5%BC%8F%5D(http%3A%2F%2Fmyfjdthink.com%2F2019%2F10%2F11%2F%25e8%25bd%25bb%25e9%2587%258f%25e5%259e%258b%25e4%25ba%2592%25e8%2581%2594%25e7%25bd%2591%25e5%25ba%2594%25e7%2594%25a8%25e6%259e%25b6%25e6%259e%2584%25e6%2596%25b9%25e5%25bc%258f%2F)%EF%BC%8C%E5%85%B6%E4%B8%AD%E6%A0%B8%E5%BF%83%E6%80%9D%E6%83%B3%E5%B0%B1%E6%98%AF%E4%BE%9D%E8%B5%96%20Kubernetes%20%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E3%80%82%0A%0A%E4%B9%8B%E5%90%8E%EF%BC%8C%E6%88%91%E5%B0%9D%E8%AF%95%E5%9C%A8%E5%9B%A2%E9%98%9F%E4%B8%AD%E8%BF%9B%E8%A1%8C%E8%90%BD%E5%9C%B0%E6%94%B9%E9%80%A0%EF%BC%8C%E7%AC%AC%E4%B8%80%E6%AD%A5%EF%BC%8C%E5%B0%B1%E6%98%AF%E6%8A%8A%E7%9B%AE%E5%89%8D%E7%9A%84%E6%9C%8D%E5%8A%A1%E6%90%AC%E4%B8%8A%20Kubernetes%E3%80%82%0A%0A%E5%9C%A8%E8%BF%99%E4%B8%AA%E5%AE%9E%E8%B7%B5%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E6%9C%89%E4%BA%9B%E7%BB%8F%E9%AA%8C%E5%8F%AF%E4%BB%A5%E5%88%86%E4%BA%AB%E4%B8%80%E4%B8%8B%E3%80%82%0A%0A%0A%23%23%20%E8%90%BD%E5%9C%B0%E7%BB%8F%E9%AA%8C%0A%E5%9C%A8%20Kalengo%20%EF%BC%8C%E5%BC%80%E5%8F%91%E9%9A%90%E7%BA%A6%EF%BC%88%E5%B9%B6%E6%B2%A1%E6%9C%89%20title%20%E4%B8%8A%E7%9A%84%E5%8C%BA%E5%88%AB%EF%BC%8C%E4%BD%86%E5%AE%9E%E9%99%85%E5%B7%A5%E4%BD%9C%E5%86%85%E5%AE%B9%E6%9C%89%E5%8C%BA%E5%88%86%EF%BC%89%E5%8F%AF%E4%BB%A5%E5%88%86%E4%B8%BA%E4%B8%A4%E7%B1%BB%EF%BC%8C%E4%B8%80%E7%B1%BB%E4%B8%BB%E8%A6%81%E5%A4%84%E7%90%86%E4%B8%9A%E5%8A%A1%E9%9C%80%E6%B1%82%EF%BC%8C%E5%8F%A6%E4%B8%80%E7%B1%BB%E5%81%9A%E5%9F%BA%E7%A1%80%E6%9E%B6%E6%9E%84%E3%80%82%0A%0A%E8%80%83%E8%99%91%E5%88%B0%20Kubernetes%20%E7%9A%84%E5%A4%8D%E6%9D%82%E6%80%A7%EF%BC%8C%E5%A6%82%E6%9E%9C%E8%A6%81%E5%81%9A%E5%88%B0%E5%BC%80%E5%8F%91%E4%B8%8D%E6%B8%85%E6%A5%9A%20Kubernetes%20%E5%8E%9F%E7%90%86%E5%92%8C%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B%E7%9A%84%E6%83%85%E5%86%B5%E4%B8%8B%E4%B9%9F%E8%83%BD%E4%BD%BF%E7%94%A8%E8%BF%99%E4%B8%80%E5%A5%97%E5%B7%A5%E5%85%B7%EF%BC%8C%E8%A6%81%E5%81%9A%E5%88%B0%E4%BB%A5%E4%B8%8B%E8%BF%99%E4%BA%9B%E7%82%B9%EF%BC%9A%0A%0A1.%20%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%20Rancher%E7%AE%A1%E7%90%86%20k8s%20%E9%9B%86%E7%BE%A4%E3%80%82%0ARancher%20%E6%8F%90%E4%BE%9B%E4%BA%86%20web%20%E9%A1%B5%E9%9D%A2%EF%BC%8C%E6%96%B9%E4%BE%BF%E5%BC%80%E5%8F%91%E7%9B%B4%E6%8E%A5%E5%81%9A%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%BF%AE%E6%94%B9%EF%BC%8C%E9%95%9C%E5%83%8F%E5%8F%98%E6%9B%B4%E5%92%8C%E9%83%A8%E7%BD%B2%E7%AD%89%E6%93%8D%E4%BD%9C%E3%80%82%0A%0A2.%20%E5%9C%A8%20Rancher%20%E4%B8%AD%E5%90%AF%E7%94%A8%20Helm%20%E6%A8%A1%E6%9D%BF%0A%E6%8A%8A%E5%81%9A%E5%A5%BD%E7%9A%84%E7%9B%AE%E6%A0%87%E5%8F%91%E5%B8%83%E5%88%B0%E5%86%85%E9%83%A8%E7%9A%84%20Helm%20%E4%BB%93%E5%BA%93%EF%BC%8C%E7%84%B6%E5%90%8E%E5%9C%A8%E9%85%8D%E7%BD%AE%E5%88%B0%20Rancher%20%E5%95%86%E5%BA%97%E4%B8%AD%EF%BC%8C%E5%BC%80%E5%8F%91%E5%A6%82%E6%9E%9C%E8%A6%81%E6%96%B0%E5%BC%80%E4%B8%80%E5%A5%97%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%EF%BC%8C%E7%9B%B4%E6%8E%A5%E5%9C%A8%20Rancher%20%E5%95%86%E5%BA%97%E9%87%8C%E7%82%B9%E5%87%BB%E6%93%8D%E4%BD%9C%E5%8D%B3%E5%8F%AF%E3%80%82%E5%8F%AA%E6%9C%89%E6%A8%A1%E6%9D%BF%E5%88%B6%E4%BD%9C%E8%80%85%E6%88%96%E8%BF%90%E7%BB%B4%E6%89%8D%E9%9C%80%E8%A6%81%E5%9C%A8%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%20kubectl%20%E5%92%8C%20helm%20%E7%AD%89%E5%B7%A5%E5%85%B7%0A%0A3.%20%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E5%AE%9E%E7%8E%B0%E5%A4%9A%E7%A7%9F%E6%88%B7%0A%E4%B8%8D%E5%90%8C%E5%BC%80%E5%8F%91%E7%9A%84%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E4%BD%BF%E7%94%A8%E5%91%BD%E5%90%8D%E7%A9%BA%E9%97%B4%E9%9A%94%E7%A6%BB%EF%BC%8C%E9%81%BF%E5%85%8D%E5%86%B2%E7%AA%81%0A%0A4.%20%E5%86%85%E9%83%A8%E6%9C%8D%E5%8A%A1%E7%9A%84%20service%20name%20%E8%A6%81%E5%9B%BA%E5%AE%9A%0A%E6%9C%8D%E5%8A%A1%20A%20%E8%AE%BF%E9%97%AE%E6%9C%8D%E5%8A%A1%20B%EF%BC%8C%E5%9C%A8%E6%B2%A1%E6%9C%89%20k8s%20%E4%B9%8B%E5%89%8D%EF%BC%8C%E6%88%91%E4%BB%AC%E6%98%AF%E8%BF%99%E6%A0%B7%E5%81%9A%E7%9A%84%EF%BC%9A%0A%E7%BB%99%E6%9C%8D%E5%8A%A1%20B%20%E6%8C%82%E5%9C%A8%E5%88%B0%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%E4%B8%8A%EF%BC%9Ahttp%3A%2F%2Fb.env.kalengo.cn%2C%20%E7%84%B6%E5%90%8E%E5%9C%A8%E6%9C%8D%E5%8A%A1%20A%20%E9%80%9A%E8%BF%87%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%E8%AE%BF%E9%97%AE%EF%BC%8C%E4%B8%8D%E5%90%8C%E7%8E%AF%E5%A2%83%EF%BC%8C%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%E4%B8%8D%E4%B8%80%E6%A0%B7%EF%BC%8C%E6%89%80%E4%BB%A5%E5%B0%B1%E8%A6%81%E6%8A%8A%E5%9C%B0%E5%9D%80%E9%85%8D%E7%BD%AE%E5%88%B0%E7%8E%AF%E5%A2%83%E5%8F%98%E9%87%8F%E4%B8%AD%E3%80%82%0A%0A%E4%BD%86%E6%98%AF%E5%9C%A8%20k8s%20%E9%87%8C%EF%BC%8C%E6%88%91%E4%BB%AC%E5%8F%AF%E4%BB%A5%E7%BB%99%E6%9C%8D%E5%8A%A1%20B%20%E5%9B%BA%E5%AE%9A%E4%B8%80%E4%B8%AA%20service%20name%EF%BC%9Ahttp%3A%2F%2Fb-svc%2C%20%E6%9C%8D%E5%8A%A1%20A%20%E9%80%9A%E8%BF%87%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%E8%AE%BF%E9%97%AE%EF%BC%8C%E5%9C%A8%E4%BB%BB%E4%BD%95%E7%8E%AF%E5%A2%83%E9%83%BD%E6%98%AF%E8%BF%99%E4%B8%AA%E5%9C%B0%E5%9D%80%E3%80%82%0A%0A%23%23%20%E6%80%BB%E7%BB%93%0A%E5%81%9A%E5%A5%BD%E4%BA%86%20helm%20%E6%A8%A1%E6%9D%BF%E4%B9%8B%E5%90%8E%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%81%9A%E5%88%B0%E4%B8%80%E9%94%AE%E9%83%A8%E7%BD%B2%E5%AE%8C%E6%95%B4%E7%9A%84%E6%9C%8D%E5%8A%A1%E9%9B%86%E5%90%88%E3%80%82%0A%0A%E6%97%A0%E8%AE%BA%E6%98%AF%E5%BC%80%E5%8F%91%E6%9C%AC%E5%9C%B0%E9%9B%86%E7%BE%A4%EF%BC%8C%E6%B5%8B%E8%AF%95%E7%8E%AF%E5%A2%83%E8%BF%98%E6%98%AF%E9%98%BF%E9%87%8C%E4%BA%91%EF%BC%8C%E5%8F%AA%E9%9C%80%E8%A6%81%E4%BF%AE%E6%94%B9%E5%AF%B9%E5%BA%94%E7%8E%AF%E5%A2%83%E5%8F%82%E6%95%B0%E5%8D%B3%E5%8F%AF%E3%80%82%0A%0A%E5%90%8C%E6%97%B6%E5%80%9F%E5%8A%A9%E4%BA%8E%20Rancher%20%E6%8F%90%E4%BE%9B%E7%9A%84%E4%BC%98%E7%A7%80%E7%9A%84%20Web%20%E7%AE%A1%E7%90%86%E8%83%BD%E5%8A%9B%EF%BC%8C%E6%9E%81%E5%A4%A7%E7%AE%80%E5%8C%96%E4%BA%86%E5%BE%AE%E6%9C%8D%E5%8A%A1%E9%83%A8%E7%BD%B2%E5%92%8C%E7%AE%A1%E7%90%86%E9%9A%BE%E5%BA%A6%E3%80%82</center>"
  },
  {
    "title": "Spring Cloud 与 Service Mesh，如何选择？",
    "created": "2019-11-14T18:16:20.000Z",
    "updated": "2019-11-20T20:22:41.000Z",
    "tags": [
      "架构",
      "posts",
      "java"
    ],
    "content": "*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">导读</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Service Mesh 的优势</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">与 Spring Cloud 功能重叠</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">服务容器化</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">术业有专攻</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">语言壁垒</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">选择和迁移</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">全新的项目</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">Spring Cloud 项目的迁移</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">其他语言项目的迁移</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">参考文章</a>\n\n## 导读\n\n**Spring Cloud** 基于Spring Boot开发，提供一套完整的微服务解决方案，具体包括服务注册与发现，配置中心，全链路监控，API网关，熔断器，远程调用框架，工具客户端等选项中立的开源组件，并且可以根据需求对部分组件进行扩展和替换。\n\n**Service Mesh**，这里以Istio（目前Service Mesh具体落地实现的一种，且呼声最高）为例简要说明其功能。 Istio 有助于降低这些部署的复杂性，并减轻开发团队的压力。它是一个完全开源的服务网格，可以透明地分层到现有的分布式应用程序上。它也是一个平台，包括允许它集成到任何日志记录平台、遥测或策略系统的 API。Istio的多样化功能集使你能够成功高效地运行分布式微服务架构，并提供保护、连接和监控微服务的统一方法。\n\n从上面的简单介绍中，Service Mesh 和 Spring Cloud 实现的功能差不多，那这两种架构应该如何选择呢？\n\n## Service Mesh 的优势\n\n2019 年，经过前几年的发展，Service Mesh 在国内开始大面积开花结果，互联网大厂纷纷开始走上实践道路（例如蚂蚁金服的SOFASTACK），也有大部分企业已经开始接触Service Mesh。\n\n可以认为 Service Mesh 将是微服务的未来，是可以替换目前的事实标准 Spring Cloud 的存在，其原因，总结下来，有四个方面：\n\n### 与 Spring Cloud 功能重叠\n\n来简单看一下他们的功能对比：\n\n<table style=\"margin: 2px 0 14px; color: #333; width: auto; border-collapse: collapse; box-sizing: border-box;\">\n\n<thead style=\"line-height: 160%; box-sizing: content-box;\">\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<th style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #72777b; border-top: 0; background-color: #7b8184; font-weight: 300; color: #fff; padding-top: 6px;\">功能列表</th>\n\n<th style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #72777b; border-top: 0; background-color: #7b8184; font-weight: 300; color: #fff; padding-top: 6px;\">Spring Cloud</th>\n\n<th style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #72777b; border-top: 0; background-color: #7b8184; font-weight: 300; color: #fff; padding-top: 6px;\">Isito</th>\n\n</tr>\n\n</thead>\n\n<tbody style=\"line-height: 160%; box-sizing: content-box;\">\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">服务注册与发现</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于Eureka，consul等组件，提供server，和Client管理</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于XDS接口获取服务信息，并依赖“虚拟服务路由表”实现服务发现</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">链路监控</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于Zikpin或者Pinpoint或者Skywalking实现</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于sideCar代理模型，记录网络请求信息实现</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">API网关</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于zuul或者spring-cloud-gateway实现</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于Ingress gateway以及egress实现</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">熔断器</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于Hystrix实现</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于声明配置文件，最终转化成路由规则实现</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">服务路由</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于网关层实现路由转发</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于iptables规则实现</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">安全策略</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于spring-security组件实现，包括认证，鉴权等，支持通信加密</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于RBAC的权限模型，依赖Kubernetes实现，同时支持通信加密</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">配置中心</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，springcloud-config组件实现</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">不支持</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">性能监控</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于Spring cloud提供的监控组件收集数据，对接第三方的监控数据存储</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于SideCar代理，记录服务调用性能数据，并通过metrics adapter，导入第三方数据监控工具</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">日志收集</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，提供client，对接第三方日志系统，例如ELK</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，基于SideCar代理，记录日志信息，并通过log adapter，导入第三方日志系统</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">工具客户端集成</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，提供消息，总线，部署管道，数据处理等多种工具客户端SDK</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">不支持</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">分布式事务</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">支持，支持不同的分布式事务模式：JTA，TCC，SAGA等，并且提供实现的SDK框架</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">不支持</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">其他</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">……</td>\n\n<td style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">……</td>\n\n</tr>\n\n</tbody>\n\n</table>\n\n从上面表格中可以看到，如果从功能层面考虑，Spring Cloud与Service Mesh在服务治理场景下，有相当大量的重叠功能，从这个层面而言，为Spring Cloud向Service Mesh迁移提供了一种潜在的可能性。\n\n### 服务容器化\n\n在行业当前环境下，还有一个趋势，或者说是现状。越来越多的应用走在了通往应用容器化的道路上，或者在未来，容器化会成为应用部署的标准形态。而且无论哪种容器化运行环境，都天然支撑服务注册发现这一基本要求，这就导致Spring Cloud体系应用上容器的过程中，存在一定的功能重叠，有可能为后期的应用运维带来一定的影响，而Service Mesh恰恰需要依赖容器运行环境，同时弥补了容器环境所欠缺的内容（后续会具体分析）。\n\n### 术业有专攻\n\n从软件设计角度出发，我们一直在追求松耦合的架构，也希望做到领域专攻。例如业务开发人员希望我只要关心业务逻辑即可，不需要关心链路跟踪，熔断，服务注册发现等支撑工具的服务；而平台支撑开发人员，则希望我的代码中不要包含任何业务相关的内容。而Service Mesh的出现，让这种情况成为可能。\n\n### 语言壁垒\n\n目前而言Spring Cloud虽然提供了对众多协议的支持，但是受限于Java技术体系。这就要求应用需要在同一种语言下进行开发（这不一定是坏事儿），在某种情况下，不一定适用于一些工作场景。而从微服务设计考虑，不应该受限于某种语言，各个服务应该能够相互独立，大家需要的是遵循通信规范即可。而Service Mesh恰好可以消除服务间的语言壁垒，同时实现服务治理的能力。\n\n## 选择和迁移\n\n从上文中我们得知 Service Mesh 的各种优势，那么，如何让 Service Mesh 在我们的项目中落地呢？接下来我们分几种情况讨论下\n\n### 全新的项目\n\n如果是小型项目，轻业务、重流量、需求快速变化，可以参考我之前写的文章[轻量型互联网应用架构方式](http://myfjdthink.com/2019/10/11/%e8%bd%bb%e9%87%8f%e5%9e%8b%e4%ba%92%e8%81%94%e7%bd%91%e5%ba%94%e7%94%a8%e6%9e%b6%e6%9e%84%e6%96%b9%e5%bc%8f/)，语言层面选择 Node.js + Mongodb/Mysql.\n\n如果项目属于业务复杂类型，语言层面可以选择 Java with Kotlin。\n\n当然，全新项目，容器化是必须的。\n\n而且如果你的工期紧张，可以考虑渐进式地推进, 先 k8s 后 Service Mesh。\n\n先把项目服务容器话，在 k8s 上部署起来，此时已经能够享受 k8s 带来的一部分服务治理能力了。例如：\n\n*   服务发现\n*   负载均衡\n*   API 网关\n*   服务路由\n\nIstio 基于 k8s，项目有了 k8s 的基础，落地 Istio 也可以顺水渠成。\n\n### Spring Cloud 项目的迁移\n\n现存的 Spring Cloud 项目的迁移方案，可以参考这篇文章 [服务迁移之路 | Spring Cloud向Service Mesh转变](https://juejin.im/post/5ce26e266fb9a07eb67d619f)\n\n简单来说就是先把服务容器化，然后逐步用 Service Mesh 替换 Spring Cloud 的功能。\n\n### 其他语言项目的迁移\n\n和上面的方案大同小异，前提条件都是先把服务容器话。\n\n## 参考文章\n\n[服务迁移之路 | Spring Cloud向Service Mesh转变](https://juejin.im/post/5ce26e266fb9a07eb67d619f)\n\n[轻量型互联网应用架构方式](http://myfjdthink.com/2019/10/11/%e8%bd%bb%e9%87%8f%e5%9e%8b%e4%ba%92%e8%81%94%e7%bd%91%e5%ba%94%e7%94%a8%e6%9e%b6%e6%9e%84%e6%96%b9%e5%bc%8f/)\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%5BTOC%5D%0A%0A%23%23%20%E5%AF%BC%E8%AF%BB%0A**Spring%20Cloud**%20%E5%9F%BA%E4%BA%8ESpring%20Boot%E5%BC%80%E5%8F%91%EF%BC%8C%E6%8F%90%E4%BE%9B%E4%B8%80%E5%A5%97%E5%AE%8C%E6%95%B4%E7%9A%84%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%8C%E5%85%B7%E4%BD%93%E5%8C%85%E6%8B%AC%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0%EF%BC%8C%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%EF%BC%8C%E5%85%A8%E9%93%BE%E8%B7%AF%E7%9B%91%E6%8E%A7%EF%BC%8CAPI%E7%BD%91%E5%85%B3%EF%BC%8C%E7%86%94%E6%96%AD%E5%99%A8%EF%BC%8C%E8%BF%9C%E7%A8%8B%E8%B0%83%E7%94%A8%E6%A1%86%E6%9E%B6%EF%BC%8C%E5%B7%A5%E5%85%B7%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%AD%89%E9%80%89%E9%A1%B9%E4%B8%AD%E7%AB%8B%E7%9A%84%E5%BC%80%E6%BA%90%E7%BB%84%E4%BB%B6%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%8F%AF%E4%BB%A5%E6%A0%B9%E6%8D%AE%E9%9C%80%E6%B1%82%E5%AF%B9%E9%83%A8%E5%88%86%E7%BB%84%E4%BB%B6%E8%BF%9B%E8%A1%8C%E6%89%A9%E5%B1%95%E5%92%8C%E6%9B%BF%E6%8D%A2%E3%80%82%0A%0A%0A**Service%20Mesh**%EF%BC%8C%E8%BF%99%E9%87%8C%E4%BB%A5Istio%EF%BC%88%E7%9B%AE%E5%89%8DService%20Mesh%E5%85%B7%E4%BD%93%E8%90%BD%E5%9C%B0%E5%AE%9E%E7%8E%B0%E7%9A%84%E4%B8%80%E7%A7%8D%EF%BC%8C%E4%B8%94%E5%91%BC%E5%A3%B0%E6%9C%80%E9%AB%98%EF%BC%89%E4%B8%BA%E4%BE%8B%E7%AE%80%E8%A6%81%E8%AF%B4%E6%98%8E%E5%85%B6%E5%8A%9F%E8%83%BD%E3%80%82%20Istio%20%E6%9C%89%E5%8A%A9%E4%BA%8E%E9%99%8D%E4%BD%8E%E8%BF%99%E4%BA%9B%E9%83%A8%E7%BD%B2%E7%9A%84%E5%A4%8D%E6%9D%82%E6%80%A7%EF%BC%8C%E5%B9%B6%E5%87%8F%E8%BD%BB%E5%BC%80%E5%8F%91%E5%9B%A2%E9%98%9F%E7%9A%84%E5%8E%8B%E5%8A%9B%E3%80%82%E5%AE%83%E6%98%AF%E4%B8%80%E4%B8%AA%E5%AE%8C%E5%85%A8%E5%BC%80%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E7%BD%91%E6%A0%BC%EF%BC%8C%E5%8F%AF%E4%BB%A5%E9%80%8F%E6%98%8E%E5%9C%B0%E5%88%86%E5%B1%82%E5%88%B0%E7%8E%B0%E6%9C%89%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E5%BA%94%E7%94%A8%E7%A8%8B%E5%BA%8F%E4%B8%8A%E3%80%82%E5%AE%83%E4%B9%9F%E6%98%AF%E4%B8%80%E4%B8%AA%E5%B9%B3%E5%8F%B0%EF%BC%8C%E5%8C%85%E6%8B%AC%E5%85%81%E8%AE%B8%E5%AE%83%E9%9B%86%E6%88%90%E5%88%B0%E4%BB%BB%E4%BD%95%E6%97%A5%E5%BF%97%E8%AE%B0%E5%BD%95%E5%B9%B3%E5%8F%B0%E3%80%81%E9%81%A5%E6%B5%8B%E6%88%96%E7%AD%96%E7%95%A5%E7%B3%BB%E7%BB%9F%E7%9A%84%20API%E3%80%82Istio%E7%9A%84%E5%A4%9A%E6%A0%B7%E5%8C%96%E5%8A%9F%E8%83%BD%E9%9B%86%E4%BD%BF%E4%BD%A0%E8%83%BD%E5%A4%9F%E6%88%90%E5%8A%9F%E9%AB%98%E6%95%88%E5%9C%B0%E8%BF%90%E8%A1%8C%E5%88%86%E5%B8%83%E5%BC%8F%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%EF%BC%8C%E5%B9%B6%E6%8F%90%E4%BE%9B%E4%BF%9D%E6%8A%A4%E3%80%81%E8%BF%9E%E6%8E%A5%E5%92%8C%E7%9B%91%E6%8E%A7%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E7%BB%9F%E4%B8%80%E6%96%B9%E6%B3%95%E3%80%82%0A%0A%E4%BB%8E%E4%B8%8A%E9%9D%A2%E7%9A%84%E7%AE%80%E5%8D%95%E4%BB%8B%E7%BB%8D%E4%B8%AD%EF%BC%8CService%20Mesh%20%E5%92%8C%20Spring%20Cloud%20%E5%AE%9E%E7%8E%B0%E7%9A%84%E5%8A%9F%E8%83%BD%E5%B7%AE%E4%B8%8D%E5%A4%9A%EF%BC%8C%E9%82%A3%E8%BF%99%E4%B8%A4%E7%A7%8D%E6%9E%B6%E6%9E%84%E5%BA%94%E8%AF%A5%E5%A6%82%E4%BD%95%E9%80%89%E6%8B%A9%E5%91%A2%EF%BC%9F%0A%0A%23%23%20Service%20Mesh%20%E7%9A%84%E4%BC%98%E5%8A%BF%0A2019%20%E5%B9%B4%EF%BC%8C%E7%BB%8F%E8%BF%87%E5%89%8D%E5%87%A0%E5%B9%B4%E7%9A%84%E5%8F%91%E5%B1%95%EF%BC%8CService%20Mesh%20%E5%9C%A8%E5%9B%BD%E5%86%85%E5%BC%80%E5%A7%8B%E5%A4%A7%E9%9D%A2%E7%A7%AF%E5%BC%80%E8%8A%B1%E7%BB%93%E6%9E%9C%EF%BC%8C%E4%BA%92%E8%81%94%E7%BD%91%E5%A4%A7%E5%8E%82%E7%BA%B7%E7%BA%B7%E5%BC%80%E5%A7%8B%E8%B5%B0%E4%B8%8A%E5%AE%9E%E8%B7%B5%E9%81%93%E8%B7%AF%EF%BC%88%E4%BE%8B%E5%A6%82%E8%9A%82%E8%9A%81%E9%87%91%E6%9C%8D%E7%9A%84SOFASTACK%EF%BC%89%EF%BC%8C%E4%B9%9F%E6%9C%89%E5%A4%A7%E9%83%A8%E5%88%86%E4%BC%81%E4%B8%9A%E5%B7%B2%E7%BB%8F%E5%BC%80%E5%A7%8B%E6%8E%A5%E8%A7%A6Service%20Mesh%E3%80%82%0A%0A%E5%8F%AF%E4%BB%A5%E8%AE%A4%E4%B8%BA%20Service%20Mesh%20%E5%B0%86%E6%98%AF%E5%BE%AE%E6%9C%8D%E5%8A%A1%E7%9A%84%E6%9C%AA%E6%9D%A5%EF%BC%8C%E6%98%AF%E5%8F%AF%E4%BB%A5%E6%9B%BF%E6%8D%A2%E7%9B%AE%E5%89%8D%E7%9A%84%E4%BA%8B%E5%AE%9E%E6%A0%87%E5%87%86%20Spring%20Cloud%20%E7%9A%84%E5%AD%98%E5%9C%A8%EF%BC%8C%E5%85%B6%E5%8E%9F%E5%9B%A0%EF%BC%8C%E6%80%BB%E7%BB%93%E4%B8%8B%E6%9D%A5%EF%BC%8C%E6%9C%89%E5%9B%9B%E4%B8%AA%E6%96%B9%E9%9D%A2%EF%BC%9A%0A%0A%23%23%23%20%E4%B8%8E%20Spring%20Cloud%20%E5%8A%9F%E8%83%BD%E9%87%8D%E5%8F%A0%0A%0A%E6%9D%A5%E7%AE%80%E5%8D%95%E7%9C%8B%E4%B8%80%E4%B8%8B%E4%BB%96%E4%BB%AC%E7%9A%84%E5%8A%9F%E8%83%BD%E5%AF%B9%E6%AF%94%EF%BC%9A%0A%0A%7C%20%E5%8A%9F%E8%83%BD%E5%88%97%E8%A1%A8%20%7C%20Spring%20Cloud%20%7C%20Isito%20%7C%20%0A%7C%20---%20%7C%20---%20%7C%20---%20%7C%0A%7C%20%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E4%B8%8E%E5%8F%91%E7%8E%B0%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8EEureka%EF%BC%8Cconsul%E7%AD%89%E7%BB%84%E4%BB%B6%EF%BC%8C%E6%8F%90%E4%BE%9Bserver%EF%BC%8C%E5%92%8CClient%E7%AE%A1%E7%90%86%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8EXDS%E6%8E%A5%E5%8F%A3%E8%8E%B7%E5%8F%96%E6%9C%8D%E5%8A%A1%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%B9%B6%E4%BE%9D%E8%B5%96%E2%80%9C%E8%99%9A%E6%8B%9F%E6%9C%8D%E5%8A%A1%E8%B7%AF%E7%94%B1%E8%A1%A8%E2%80%9D%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%20%7C%0A%7C%20%E9%93%BE%E8%B7%AF%E7%9B%91%E6%8E%A7%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8EZikpin%E6%88%96%E8%80%85Pinpoint%E6%88%96%E8%80%85Skywalking%E5%AE%9E%E7%8E%B0%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8EsideCar%E4%BB%A3%E7%90%86%E6%A8%A1%E5%9E%8B%EF%BC%8C%E8%AE%B0%E5%BD%95%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E4%BF%A1%E6%81%AF%E5%AE%9E%E7%8E%B0%20%7C%0A%7C%20API%E7%BD%91%E5%85%B3%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8Ezuul%E6%88%96%E8%80%85spring-cloud-gateway%E5%AE%9E%E7%8E%B0%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8EIngress%20gateway%E4%BB%A5%E5%8F%8Aegress%E5%AE%9E%E7%8E%B0%20%7C%0A%7C%20%E7%86%94%E6%96%AD%E5%99%A8%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8EHystrix%E5%AE%9E%E7%8E%B0%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8E%E5%A3%B0%E6%98%8E%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%EF%BC%8C%E6%9C%80%E7%BB%88%E8%BD%AC%E5%8C%96%E6%88%90%E8%B7%AF%E7%94%B1%E8%A7%84%E5%88%99%E5%AE%9E%E7%8E%B0%20%7C%20%0A%E6%9C%8D%E5%8A%A1%E8%B7%AF%E7%94%B1%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8E%E7%BD%91%E5%85%B3%E5%B1%82%E5%AE%9E%E7%8E%B0%E8%B7%AF%E7%94%B1%E8%BD%AC%E5%8F%91%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8Eiptables%E8%A7%84%E5%88%99%E5%AE%9E%E7%8E%B0%20%7C%0A%7C%20%E5%AE%89%E5%85%A8%E7%AD%96%E7%95%A5%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8Espring-security%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%8C%85%E6%8B%AC%E8%AE%A4%E8%AF%81%EF%BC%8C%E9%89%B4%E6%9D%83%E7%AD%89%EF%BC%8C%E6%94%AF%E6%8C%81%E9%80%9A%E4%BF%A1%E5%8A%A0%E5%AF%86%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8ERBAC%E7%9A%84%E6%9D%83%E9%99%90%E6%A8%A1%E5%9E%8B%EF%BC%8C%E4%BE%9D%E8%B5%96Kubernetes%E5%AE%9E%E7%8E%B0%EF%BC%8C%E5%90%8C%E6%97%B6%E6%94%AF%E6%8C%81%E9%80%9A%E4%BF%A1%E5%8A%A0%E5%AF%86%20%7C%0A%7C%20%E9%85%8D%E7%BD%AE%E4%B8%AD%E5%BF%83%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8Cspringcloud-config%E7%BB%84%E4%BB%B6%E5%AE%9E%E7%8E%B0%20%7C%20%E4%B8%8D%E6%94%AF%E6%8C%81%20%7C%0A%7C%20%E6%80%A7%E8%83%BD%E7%9B%91%E6%8E%A7%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8ESpring%20cloud%E6%8F%90%E4%BE%9B%E7%9A%84%E7%9B%91%E6%8E%A7%E7%BB%84%E4%BB%B6%E6%94%B6%E9%9B%86%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%AF%B9%E6%8E%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E7%9A%84%E7%9B%91%E6%8E%A7%E6%95%B0%E6%8D%AE%E5%AD%98%E5%82%A8%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8ESideCar%E4%BB%A3%E7%90%86%EF%BC%8C%E8%AE%B0%E5%BD%95%E6%9C%8D%E5%8A%A1%E8%B0%83%E7%94%A8%E6%80%A7%E8%83%BD%E6%95%B0%E6%8D%AE%EF%BC%8C%E5%B9%B6%E9%80%9A%E8%BF%87metrics%20adapter%EF%BC%8C%E5%AF%BC%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E6%95%B0%E6%8D%AE%E7%9B%91%E6%8E%A7%E5%B7%A5%E5%85%B7%20%7C%0A%7C%20%E6%97%A5%E5%BF%97%E6%94%B6%E9%9B%86%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E6%8F%90%E4%BE%9Bclient%EF%BC%8C%E5%AF%B9%E6%8E%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%EF%BC%8C%E4%BE%8B%E5%A6%82ELK%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E5%9F%BA%E4%BA%8ESideCar%E4%BB%A3%E7%90%86%EF%BC%8C%E8%AE%B0%E5%BD%95%E6%97%A5%E5%BF%97%E4%BF%A1%E6%81%AF%EF%BC%8C%E5%B9%B6%E9%80%9A%E8%BF%87log%20adapter%EF%BC%8C%E5%AF%BC%E5%85%A5%E7%AC%AC%E4%B8%89%E6%96%B9%E6%97%A5%E5%BF%97%E7%B3%BB%E7%BB%9F%20%7C%0A%7C%20%E5%B7%A5%E5%85%B7%E5%AE%A2%E6%88%B7%E7%AB%AF%E9%9B%86%E6%88%90%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E6%8F%90%E4%BE%9B%E6%B6%88%E6%81%AF%EF%BC%8C%E6%80%BB%E7%BA%BF%EF%BC%8C%E9%83%A8%E7%BD%B2%E7%AE%A1%E9%81%93%EF%BC%8C%E6%95%B0%E6%8D%AE%E5%A4%84%E7%90%86%E7%AD%89%E5%A4%9A%E7%A7%8D%E5%B7%A5%E5%85%B7%E5%AE%A2%E6%88%B7%E7%AB%AFSDK%20%7C%20%E4%B8%8D%E6%94%AF%E6%8C%81%20%7C%0A%7C%20%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%20%7C%20%E6%94%AF%E6%8C%81%EF%BC%8C%E6%94%AF%E6%8C%81%E4%B8%8D%E5%90%8C%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E6%A8%A1%E5%BC%8F%EF%BC%9AJTA%EF%BC%8CTCC%EF%BC%8CSAGA%E7%AD%89%EF%BC%8C%E5%B9%B6%E4%B8%94%E6%8F%90%E4%BE%9B%E5%AE%9E%E7%8E%B0%E7%9A%84SDK%E6%A1%86%E6%9E%B6%20%7C%20%E4%B8%8D%E6%94%AF%E6%8C%81%20%7C%0A%7C%20%E5%85%B6%E4%BB%96%20%7C%20%E2%80%A6%E2%80%A6%20%7C%20%E2%80%A6%E2%80%A6%20%7C%0A%0A%0A%E4%BB%8E%E4%B8%8A%E9%9D%A2%E8%A1%A8%E6%A0%BC%E4%B8%AD%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%88%B0%EF%BC%8C%E5%A6%82%E6%9E%9C%E4%BB%8E%E5%8A%9F%E8%83%BD%E5%B1%82%E9%9D%A2%E8%80%83%E8%99%91%EF%BC%8CSpring%20Cloud%E4%B8%8EService%20Mesh%E5%9C%A8%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E5%9C%BA%E6%99%AF%E4%B8%8B%EF%BC%8C%E6%9C%89%E7%9B%B8%E5%BD%93%E5%A4%A7%E9%87%8F%E7%9A%84%E9%87%8D%E5%8F%A0%E5%8A%9F%E8%83%BD%EF%BC%8C%E4%BB%8E%E8%BF%99%E4%B8%AA%E5%B1%82%E9%9D%A2%E8%80%8C%E8%A8%80%EF%BC%8C%E4%B8%BASpring%20Cloud%E5%90%91Service%20Mesh%E8%BF%81%E7%A7%BB%E6%8F%90%E4%BE%9B%E4%BA%86%E4%B8%80%E7%A7%8D%E6%BD%9C%E5%9C%A8%E7%9A%84%E5%8F%AF%E8%83%BD%E6%80%A7%E3%80%82%0A%0A%23%23%23%20%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8%E5%8C%96%0A%E5%9C%A8%E8%A1%8C%E4%B8%9A%E5%BD%93%E5%89%8D%E7%8E%AF%E5%A2%83%E4%B8%8B%EF%BC%8C%E8%BF%98%E6%9C%89%E4%B8%80%E4%B8%AA%E8%B6%8B%E5%8A%BF%EF%BC%8C%E6%88%96%E8%80%85%E8%AF%B4%E6%98%AF%E7%8E%B0%E7%8A%B6%E3%80%82%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%9A%E7%9A%84%E5%BA%94%E7%94%A8%E8%B5%B0%E5%9C%A8%E4%BA%86%E9%80%9A%E5%BE%80%E5%BA%94%E7%94%A8%E5%AE%B9%E5%99%A8%E5%8C%96%E7%9A%84%E9%81%93%E8%B7%AF%E4%B8%8A%EF%BC%8C%E6%88%96%E8%80%85%E5%9C%A8%E6%9C%AA%E6%9D%A5%EF%BC%8C%E5%AE%B9%E5%99%A8%E5%8C%96%E4%BC%9A%E6%88%90%E4%B8%BA%E5%BA%94%E7%94%A8%E9%83%A8%E7%BD%B2%E7%9A%84%E6%A0%87%E5%87%86%E5%BD%A2%E6%80%81%E3%80%82%E8%80%8C%E4%B8%94%E6%97%A0%E8%AE%BA%E5%93%AA%E7%A7%8D%E5%AE%B9%E5%99%A8%E5%8C%96%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%EF%BC%8C%E9%83%BD%E5%A4%A9%E7%84%B6%E6%94%AF%E6%92%91%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%8F%91%E7%8E%B0%E8%BF%99%E4%B8%80%E5%9F%BA%E6%9C%AC%E8%A6%81%E6%B1%82%EF%BC%8C%E8%BF%99%E5%B0%B1%E5%AF%BC%E8%87%B4Spring%20Cloud%E4%BD%93%E7%B3%BB%E5%BA%94%E7%94%A8%E4%B8%8A%E5%AE%B9%E5%99%A8%E7%9A%84%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E5%AD%98%E5%9C%A8%E4%B8%80%E5%AE%9A%E7%9A%84%E5%8A%9F%E8%83%BD%E9%87%8D%E5%8F%A0%EF%BC%8C%E6%9C%89%E5%8F%AF%E8%83%BD%E4%B8%BA%E5%90%8E%E6%9C%9F%E7%9A%84%E5%BA%94%E7%94%A8%E8%BF%90%E7%BB%B4%E5%B8%A6%E6%9D%A5%E4%B8%80%E5%AE%9A%E7%9A%84%E5%BD%B1%E5%93%8D%EF%BC%8C%E8%80%8CService%20Mesh%E6%81%B0%E6%81%B0%E9%9C%80%E8%A6%81%E4%BE%9D%E8%B5%96%E5%AE%B9%E5%99%A8%E8%BF%90%E8%A1%8C%E7%8E%AF%E5%A2%83%EF%BC%8C%E5%90%8C%E6%97%B6%E5%BC%A5%E8%A1%A5%E4%BA%86%E5%AE%B9%E5%99%A8%E7%8E%AF%E5%A2%83%E6%89%80%E6%AC%A0%E7%BC%BA%E7%9A%84%E5%86%85%E5%AE%B9%EF%BC%88%E5%90%8E%E7%BB%AD%E4%BC%9A%E5%85%B7%E4%BD%93%E5%88%86%E6%9E%90%EF%BC%89%E3%80%82%0A%0A%23%23%23%20%E6%9C%AF%E4%B8%9A%E6%9C%89%E4%B8%93%E6%94%BB%0A%0A%E4%BB%8E%E8%BD%AF%E4%BB%B6%E8%AE%BE%E8%AE%A1%E8%A7%92%E5%BA%A6%E5%87%BA%E5%8F%91%EF%BC%8C%E6%88%91%E4%BB%AC%E4%B8%80%E7%9B%B4%E5%9C%A8%E8%BF%BD%E6%B1%82%E6%9D%BE%E8%80%A6%E5%90%88%E7%9A%84%E6%9E%B6%E6%9E%84%EF%BC%8C%E4%B9%9F%E5%B8%8C%E6%9C%9B%E5%81%9A%E5%88%B0%E9%A2%86%E5%9F%9F%E4%B8%93%E6%94%BB%E3%80%82%E4%BE%8B%E5%A6%82%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%E5%B8%8C%E6%9C%9B%E6%88%91%E5%8F%AA%E8%A6%81%E5%85%B3%E5%BF%83%E4%B8%9A%E5%8A%A1%E9%80%BB%E8%BE%91%E5%8D%B3%E5%8F%AF%EF%BC%8C%E4%B8%8D%E9%9C%80%E8%A6%81%E5%85%B3%E5%BF%83%E9%93%BE%E8%B7%AF%E8%B7%9F%E8%B8%AA%EF%BC%8C%E7%86%94%E6%96%AD%EF%BC%8C%E6%9C%8D%E5%8A%A1%E6%B3%A8%E5%86%8C%E5%8F%91%E7%8E%B0%E7%AD%89%E6%94%AF%E6%92%91%E5%B7%A5%E5%85%B7%E7%9A%84%E6%9C%8D%E5%8A%A1%EF%BC%9B%E8%80%8C%E5%B9%B3%E5%8F%B0%E6%94%AF%E6%92%91%E5%BC%80%E5%8F%91%E4%BA%BA%E5%91%98%EF%BC%8C%E5%88%99%E5%B8%8C%E6%9C%9B%E6%88%91%E7%9A%84%E4%BB%A3%E7%A0%81%E4%B8%AD%E4%B8%8D%E8%A6%81%E5%8C%85%E5%90%AB%E4%BB%BB%E4%BD%95%E4%B8%9A%E5%8A%A1%E7%9B%B8%E5%85%B3%E7%9A%84%E5%86%85%E5%AE%B9%E3%80%82%E8%80%8CService%20Mesh%E7%9A%84%E5%87%BA%E7%8E%B0%EF%BC%8C%E8%AE%A9%E8%BF%99%E7%A7%8D%E6%83%85%E5%86%B5%E6%88%90%E4%B8%BA%E5%8F%AF%E8%83%BD%E3%80%82%0A%0A%23%23%23%20%E8%AF%AD%E8%A8%80%E5%A3%81%E5%9E%92%0A%0A%E7%9B%AE%E5%89%8D%E8%80%8C%E8%A8%80Spring%20Cloud%E8%99%BD%E7%84%B6%E6%8F%90%E4%BE%9B%E4%BA%86%E5%AF%B9%E4%BC%97%E5%A4%9A%E5%8D%8F%E8%AE%AE%E7%9A%84%E6%94%AF%E6%8C%81%EF%BC%8C%E4%BD%86%E6%98%AF%E5%8F%97%E9%99%90%E4%BA%8EJava%E6%8A%80%E6%9C%AF%E4%BD%93%E7%B3%BB%E3%80%82%E8%BF%99%E5%B0%B1%E8%A6%81%E6%B1%82%E5%BA%94%E7%94%A8%E9%9C%80%E8%A6%81%E5%9C%A8%E5%90%8C%E4%B8%80%E7%A7%8D%E8%AF%AD%E8%A8%80%E4%B8%8B%E8%BF%9B%E8%A1%8C%E5%BC%80%E5%8F%91%EF%BC%88%E8%BF%99%E4%B8%8D%E4%B8%80%E5%AE%9A%E6%98%AF%E5%9D%8F%E4%BA%8B%E5%84%BF%EF%BC%89%EF%BC%8C%E5%9C%A8%E6%9F%90%E7%A7%8D%E6%83%85%E5%86%B5%E4%B8%8B%EF%BC%8C%E4%B8%8D%E4%B8%80%E5%AE%9A%E9%80%82%E7%94%A8%E4%BA%8E%E4%B8%80%E4%BA%9B%E5%B7%A5%E4%BD%9C%E5%9C%BA%E6%99%AF%E3%80%82%E8%80%8C%E4%BB%8E%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%AE%BE%E8%AE%A1%E8%80%83%E8%99%91%EF%BC%8C%E4%B8%8D%E5%BA%94%E8%AF%A5%E5%8F%97%E9%99%90%E4%BA%8E%E6%9F%90%E7%A7%8D%E8%AF%AD%E8%A8%80%EF%BC%8C%E5%90%84%E4%B8%AA%E6%9C%8D%E5%8A%A1%E5%BA%94%E8%AF%A5%E8%83%BD%E5%A4%9F%E7%9B%B8%E4%BA%92%E7%8B%AC%E7%AB%8B%EF%BC%8C%E5%A4%A7%E5%AE%B6%E9%9C%80%E8%A6%81%E7%9A%84%E6%98%AF%E9%81%B5%E5%BE%AA%E9%80%9A%E4%BF%A1%E8%A7%84%E8%8C%83%E5%8D%B3%E5%8F%AF%E3%80%82%E8%80%8CService%20Mesh%E6%81%B0%E5%A5%BD%E5%8F%AF%E4%BB%A5%E6%B6%88%E9%99%A4%E6%9C%8D%E5%8A%A1%E9%97%B4%E7%9A%84%E8%AF%AD%E8%A8%80%E5%A3%81%E5%9E%92%EF%BC%8C%E5%90%8C%E6%97%B6%E5%AE%9E%E7%8E%B0%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E7%9A%84%E8%83%BD%E5%8A%9B%E3%80%82%0A%0A%23%23%20%E9%80%89%E6%8B%A9%E5%92%8C%E8%BF%81%E7%A7%BB%0A%0A%E4%BB%8E%E4%B8%8A%E6%96%87%E4%B8%AD%E6%88%91%E4%BB%AC%E5%BE%97%E7%9F%A5%20Service%20Mesh%20%E7%9A%84%E5%90%84%E7%A7%8D%E4%BC%98%E5%8A%BF%EF%BC%8C%E9%82%A3%E4%B9%88%EF%BC%8C%E5%A6%82%E4%BD%95%E8%AE%A9%20Service%20Mesh%20%20%E5%9C%A8%E6%88%91%E4%BB%AC%E7%9A%84%E9%A1%B9%E7%9B%AE%E4%B8%AD%E8%90%BD%E5%9C%B0%E5%91%A2%EF%BC%9F%E6%8E%A5%E4%B8%8B%E6%9D%A5%E6%88%91%E4%BB%AC%E5%88%86%E5%87%A0%E7%A7%8D%E6%83%85%E5%86%B5%E8%AE%A8%E8%AE%BA%E4%B8%8B%0A%0A%23%23%23%20%E5%85%A8%E6%96%B0%E7%9A%84%E9%A1%B9%E7%9B%AE%0A%E5%A6%82%E6%9E%9C%E6%98%AF%E5%B0%8F%E5%9E%8B%E9%A1%B9%E7%9B%AE%EF%BC%8C%E8%BD%BB%E4%B8%9A%E5%8A%A1%E3%80%81%E9%87%8D%E6%B5%81%E9%87%8F%E3%80%81%E9%9C%80%E6%B1%82%E5%BF%AB%E9%80%9F%E5%8F%98%E5%8C%96%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%E6%88%91%E4%B9%8B%E5%89%8D%E5%86%99%E7%9A%84%E6%96%87%E7%AB%A0%5B%E8%BD%BB%E9%87%8F%E5%9E%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E6%96%B9%E5%BC%8F%5D(http%3A%2F%2Fmyfjdthink.com%2F2019%2F10%2F11%2F%25e8%25bd%25bb%25e9%2587%258f%25e5%259e%258b%25e4%25ba%2592%25e8%2581%2594%25e7%25bd%2591%25e5%25ba%2594%25e7%2594%25a8%25e6%259e%25b6%25e6%259e%2584%25e6%2596%25b9%25e5%25bc%258f%2F)%EF%BC%8C%E8%AF%AD%E8%A8%80%E5%B1%82%E9%9D%A2%E9%80%89%E6%8B%A9%20Node.js%20%2B%20Mongodb%2FMysql.%0A%0A%E5%A6%82%E6%9E%9C%E9%A1%B9%E7%9B%AE%E5%B1%9E%E4%BA%8E%E4%B8%9A%E5%8A%A1%E5%A4%8D%E6%9D%82%E7%B1%BB%E5%9E%8B%EF%BC%8C%E8%AF%AD%E8%A8%80%E5%B1%82%E9%9D%A2%E5%8F%AF%E4%BB%A5%E9%80%89%E6%8B%A9%20Java%20with%20Kotlin%E3%80%82%0A%0A%E5%BD%93%E7%84%B6%EF%BC%8C%E5%85%A8%E6%96%B0%E9%A1%B9%E7%9B%AE%EF%BC%8C%E5%AE%B9%E5%99%A8%E5%8C%96%E6%98%AF%E5%BF%85%E9%A1%BB%E7%9A%84%E3%80%82%0A%0A%E8%80%8C%E4%B8%94%E5%A6%82%E6%9E%9C%E4%BD%A0%E7%9A%84%E5%B7%A5%E6%9C%9F%E7%B4%A7%E5%BC%A0%EF%BC%8C%E5%8F%AF%E4%BB%A5%E8%80%83%E8%99%91%E6%B8%90%E8%BF%9B%E5%BC%8F%E5%9C%B0%E6%8E%A8%E8%BF%9B%2C%20%E5%85%88%20k8s%20%E5%90%8E%20Service%20Mesh%E3%80%82%0A%0A%E5%85%88%E6%8A%8A%E9%A1%B9%E7%9B%AE%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8%E8%AF%9D%EF%BC%8C%E5%9C%A8%20k8s%20%E4%B8%8A%E9%83%A8%E7%BD%B2%E8%B5%B7%E6%9D%A5%EF%BC%8C%E6%AD%A4%E6%97%B6%E5%B7%B2%E7%BB%8F%E8%83%BD%E5%A4%9F%E4%BA%AB%E5%8F%97%20k8s%20%E5%B8%A6%E6%9D%A5%E7%9A%84%E4%B8%80%E9%83%A8%E5%88%86%E6%9C%8D%E5%8A%A1%E6%B2%BB%E7%90%86%E8%83%BD%E5%8A%9B%E4%BA%86%E3%80%82%E4%BE%8B%E5%A6%82%EF%BC%9A%0A-%20%E6%9C%8D%E5%8A%A1%E5%8F%91%E7%8E%B0%0A-%20%E8%B4%9F%E8%BD%BD%E5%9D%87%E8%A1%A1%0A-%20API%20%E7%BD%91%E5%85%B3%0A-%20%E6%9C%8D%E5%8A%A1%E8%B7%AF%E7%94%B1%0A%0AIstio%20%E5%9F%BA%E4%BA%8E%20k8s%EF%BC%8C%E9%A1%B9%E7%9B%AE%E6%9C%89%E4%BA%86%20k8s%20%E7%9A%84%E5%9F%BA%E7%A1%80%EF%BC%8C%E8%90%BD%E5%9C%B0%20Istio%20%E4%B9%9F%E5%8F%AF%E4%BB%A5%E9%A1%BA%E6%B0%B4%E6%B8%A0%E6%88%90%E3%80%82%0A%0A%23%23%23%20Spring%20Cloud%20%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%BF%81%E7%A7%BB%0A%E7%8E%B0%E5%AD%98%E7%9A%84%20Spring%20Cloud%20%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%BF%81%E7%A7%BB%E6%96%B9%E6%A1%88%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%8F%82%E8%80%83%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%20%5B%E6%9C%8D%E5%8A%A1%E8%BF%81%E7%A7%BB%E4%B9%8B%E8%B7%AF%20%7C%20Spring%20Cloud%E5%90%91Service%20Mesh%E8%BD%AC%E5%8F%98%5D(https%3A%2F%2Fjuejin.im%2Fpost%2F5ce26e266fb9a07eb67d619f)%0A%0A%E7%AE%80%E5%8D%95%E6%9D%A5%E8%AF%B4%E5%B0%B1%E6%98%AF%E5%85%88%E6%8A%8A%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8%E5%8C%96%EF%BC%8C%E7%84%B6%E5%90%8E%E9%80%90%E6%AD%A5%E7%94%A8%20Service%20Mesh%20%E6%9B%BF%E6%8D%A2%20Spring%20Cloud%20%E7%9A%84%E5%8A%9F%E8%83%BD%E3%80%82%0A%0A%23%23%23%20%E5%85%B6%E4%BB%96%E8%AF%AD%E8%A8%80%E9%A1%B9%E7%9B%AE%E7%9A%84%E8%BF%81%E7%A7%BB%0A%E5%92%8C%E4%B8%8A%E9%9D%A2%E7%9A%84%E6%96%B9%E6%A1%88%E5%A4%A7%E5%90%8C%E5%B0%8F%E5%BC%82%EF%BC%8C%E5%89%8D%E6%8F%90%E6%9D%A1%E4%BB%B6%E9%83%BD%E6%98%AF%E5%85%88%E6%8A%8A%E6%9C%8D%E5%8A%A1%E5%AE%B9%E5%99%A8%E8%AF%9D%E3%80%82%0A%0A%23%23%20%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0%0A%5B%E6%9C%8D%E5%8A%A1%E8%BF%81%E7%A7%BB%E4%B9%8B%E8%B7%AF%20%7C%20Spring%20Cloud%E5%90%91Service%20Mesh%E8%BD%AC%E5%8F%98%5D(https%3A%2F%2Fjuejin.im%2Fpost%2F5ce26e266fb9a07eb67d619f)%0A%0A%5B%E8%BD%BB%E9%87%8F%E5%9E%8B%E4%BA%92%E8%81%94%E7%BD%91%E5%BA%94%E7%94%A8%E6%9E%B6%E6%9E%84%E6%96%B9%E5%BC%8F%5D(http%3A%2F%2Fmyfjdthink.com%2F2019%2F10%2F11%2F%25e8%25bd%25bb%25e9%2587%258f%25e5%259e%258b%25e4%25ba%2592%25e8%2581%2594%25e7%25bd%2591%25e5%25ba%2594%25e7%2594%25a8%25e6%259e%25b6%25e6%259e%2584%25e6%2596%25b9%25e5%25bc%258f%2F)%0A%0A</center>"
  },
  {
    "title": "Typescript 与 Mongoose 的最佳实践",
    "created": "2017-05-24T20:15:52.000Z",
    "updated": "2019-11-20T19:14:06.000Z",
    "tags": [
      "Node",
      "typescript",
      "编程相关",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=d092cc09-5ecd-4c94-9f97-73c0866a3374&notebook=blog)</del>\n\n`blog` `编程相关` `Node` `typescript` `posts` `编程相关`\n\n## Update\n\n2019-11-21 更新：  \n这篇文章写于 2017 年，有些过时了，现在 typescript + mongoose 也有些开源实现了，建议使用以下开源项目：  \n[typegoose](https://github.com/szokodiakos/typegoose) ： 使用 class 来定义mongoose 的 Schema。  \n[typeorm](https://typeorm.io/#/) ：应该是目前 Node 业界最好的 orm，但它主要是面向 sql 类数据库，对 mongodb 的支持欠佳\n\n## 前言\n\nmongoose 是 node.js 里操作 mongodb 的最好的 orm 工具。  \ntypescript 则是带了 type 的 js 超集。  \n在开发过程中经常会碰到写错字段名的问题，只有到了运行阶段才能发现（或许也没发现。。。），使用 typescript 可以达到以下目的：\n\n1.  智能提示，不会输错字段名啦，当然这个取决于你的 IDE 是否支持 typescript。\n\n2.  类型检查，错误的类型定义可以在编译期发现。\n\n接下来就看看这两个东西怎么配合吧。\n\n完整的 Express + Typescript + Mongoose 的 Demo 可以参考之前的文章 ：[使用 typescript 做后端应用开发](http://myfjdthink.com/%E4%BD%BF%E7%94%A8-typescript-%E5%81%9A%E5%90%8E%E7%AB%AF%E5%BA%94%E7%94%A8%E5%BC%80%E5%8F%91/)\n\n## 安装准备\n\n1.  typescript  \n    typescript 的安装配置这里不赘述，可以看 typescript 的官方文档。\n\n2.  mongoose\n\n下载 mongoose 的类型定义文件\n\n    $ npm install mongoose --save $ npm install @types/mongoose --save-dev $ npm install @types/mongodb --save-dev \n\ntypescript 的 tsd 的组织方式一直在变化，目前的方式算是比较简单的，typescript 官方把常见的库 Definition 都放在 npm 上了。\n\n## Model 的定义\n\n以一个 User Model 为例。\n\n### 先定义一个接口\n\nsrc/interfaces/User.ts:\n\n    export interface IUser {  createdAt?: Date;  email?: string;  firstName?: string;  lastName?: string; } \n\n### Schema + Model\n\nsrc/model/User.ts:\n\n    import {Document, Schema, Model, model} from \"mongoose\"; import {IUser} from \"../interfaces/User\";"
  },
  {
    "title": "关于编程基本功",
    "created": "2019-09-01T18:04:45.000Z",
    "updated": "2019-09-01T18:10:03.000Z",
    "tags": [
      "posts"
    ],
    "content": "熊节，《重构》中文版译者，他最近接受infoQ的采访，表达了“[80% 的国内开发者缺乏基本功？](https://zhuanlan.zhihu.com/p/78975920)” 这个观点，同时他认为，练习编程基本功的方式是：只看书是不够的，需要反复的练习，所以他创建了一个“测试驱动开发实战营”项目，为大量程序员创造一个刻意练习的环境，帮他们提升基本功。\n\n我今天看了熊节发布的[重构视频秀第二集](https://zhuanlan.zhihu.com/p/80748271)，虽然说重构这本书我看过两遍，视频里提到的技巧也熟记于心，但还是能从视频中收获一些新东西。视频里展现出来的小步快跑的重构节奏，是我之前没有掌握好的，需要加强练习。\n\nBTW：我是非常赞同熊节对于基本功的态度的，特别是见过一些程序员一顿瞎搞就是不出成果的时候。  \n他还有一个观点也让我茅塞顿开：\n\n> 我有一个观察：越是基本功不怎么扎实、操作不怎么熟练的同学，越是在拿到问题时忍不住会想很多，一下子就扎到纷繁芜杂的泥潭里面去，怎么也理不清头绪，寸步难行。\n\n原来人家不是想太多，而是基础差😂。\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%E7%86%8A%E8%8A%82%EF%BC%8C%E3%80%8A%E9%87%8D%E6%9E%84%E3%80%8B%E4%B8%AD%E6%96%87%E7%89%88%E8%AF%91%E8%80%85%EF%BC%8C%E4%BB%96%E6%9C%80%E8%BF%91%E6%8E%A5%E5%8F%97infoQ%E7%9A%84%E9%87%87%E8%AE%BF%EF%BC%8C%E8%A1%A8%E8%BE%BE%E4%BA%86%E2%80%9C%5B80%25%20%E7%9A%84%E5%9B%BD%E5%86%85%E5%BC%80%E5%8F%91%E8%80%85%E7%BC%BA%E4%B9%8F%E5%9F%BA%E6%9C%AC%E5%8A%9F%EF%BC%9F%5D(https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F78975920)%E2%80%9D%20%20%E8%BF%99%E4%B8%AA%E8%A7%82%E7%82%B9%EF%BC%8C%E5%90%8C%E6%97%B6%E4%BB%96%E8%AE%A4%E4%B8%BA%EF%BC%8C%E7%BB%83%E4%B9%A0%E7%BC%96%E7%A8%8B%E5%9F%BA%E6%9C%AC%E5%8A%9F%E7%9A%84%E6%96%B9%E5%BC%8F%E6%98%AF%EF%BC%9A%E5%8F%AA%E7%9C%8B%E4%B9%A6%E6%98%AF%E4%B8%8D%E5%A4%9F%E7%9A%84%EF%BC%8C%E9%9C%80%E8%A6%81%E5%8F%8D%E5%A4%8D%E7%9A%84%E7%BB%83%E4%B9%A0%EF%BC%8C%E6%89%80%E4%BB%A5%E4%BB%96%E5%88%9B%E5%BB%BA%E4%BA%86%E4%B8%80%E4%B8%AA%E2%80%9C%E6%B5%8B%E8%AF%95%E9%A9%B1%E5%8A%A8%E5%BC%80%E5%8F%91%E5%AE%9E%E6%88%98%E8%90%A5%E2%80%9D%E9%A1%B9%E7%9B%AE%EF%BC%8C%E4%B8%BA%E5%A4%A7%E9%87%8F%E7%A8%8B%E5%BA%8F%E5%91%98%E5%88%9B%E9%80%A0%E4%B8%80%E4%B8%AA%E5%88%BB%E6%84%8F%E7%BB%83%E4%B9%A0%E7%9A%84%E7%8E%AF%E5%A2%83%EF%BC%8C%E5%B8%AE%E4%BB%96%E4%BB%AC%E6%8F%90%E5%8D%87%E5%9F%BA%E6%9C%AC%E5%8A%9F%E3%80%82%0A%0A%0A%E6%88%91%E4%BB%8A%E5%A4%A9%E7%9C%8B%E4%BA%86%E7%86%8A%E8%8A%82%E5%8F%91%E5%B8%83%E7%9A%84%5B%E9%87%8D%E6%9E%84%E8%A7%86%E9%A2%91%E7%A7%80%E7%AC%AC%E4%BA%8C%E9%9B%86%5D(%20https%3A%2F%2Fzhuanlan.zhihu.com%2Fp%2F80748271)%EF%BC%8C%E8%99%BD%E7%84%B6%E8%AF%B4%E9%87%8D%E6%9E%84%E8%BF%99%E6%9C%AC%E4%B9%A6%E6%88%91%E7%9C%8B%E8%BF%87%E4%B8%A4%E9%81%8D%EF%BC%8C%E8%A7%86%E9%A2%91%E9%87%8C%E6%8F%90%E5%88%B0%E7%9A%84%E6%8A%80%E5%B7%A7%E4%B9%9F%E7%86%9F%E8%AE%B0%E4%BA%8E%E5%BF%83%EF%BC%8C%E4%BD%86%E8%BF%98%E6%98%AF%E8%83%BD%E4%BB%8E%E8%A7%86%E9%A2%91%E4%B8%AD%E6%94%B6%E8%8E%B7%E4%B8%80%E4%BA%9B%E6%96%B0%E4%B8%9C%E8%A5%BF%E3%80%82%E8%A7%86%E9%A2%91%E9%87%8C%E5%B1%95%E7%8E%B0%E5%87%BA%E6%9D%A5%E7%9A%84%E5%B0%8F%E6%AD%A5%E5%BF%AB%E8%B7%91%E7%9A%84%E9%87%8D%E6%9E%84%E8%8A%82%E5%A5%8F%EF%BC%8C%E6%98%AF%E6%88%91%E4%B9%8B%E5%89%8D%E6%B2%A1%E6%9C%89%E6%8E%8C%E6%8F%A1%E5%A5%BD%E7%9A%84%EF%BC%8C%E9%9C%80%E8%A6%81%E5%8A%A0%E5%BC%BA%E7%BB%83%E4%B9%A0%E3%80%82%0A%0A%0ABTW%EF%BC%9A%E6%88%91%E6%98%AF%E9%9D%9E%E5%B8%B8%E8%B5%9E%E5%90%8C%E7%86%8A%E8%8A%82%E5%AF%B9%E4%BA%8E%E5%9F%BA%E6%9C%AC%E5%8A%9F%E7%9A%84%E6%80%81%E5%BA%A6%E7%9A%84%EF%BC%8C%E7%89%B9%E5%88%AB%E6%98%AF%E8%A7%81%E8%BF%87%E4%B8%80%E4%BA%9B%E7%A8%8B%E5%BA%8F%E5%91%98%E4%B8%80%E9%A1%BF%E7%9E%8E%E6%90%9E%E5%B0%B1%E6%98%AF%E4%B8%8D%E5%87%BA%E6%88%90%E6%9E%9C%E7%9A%84%E6%97%B6%E5%80%99%E3%80%82%0A%E4%BB%96%E8%BF%98%E6%9C%89%E4%B8%80%E4%B8%AA%E8%A7%82%E7%82%B9%E4%B9%9F%E8%AE%A9%E6%88%91%E8%8C%85%E5%A1%9E%E9%A1%BF%E5%BC%80%EF%BC%9A%0A%3E%E6%88%91%E6%9C%89%E4%B8%80%E4%B8%AA%E8%A7%82%E5%AF%9F%EF%BC%9A%E8%B6%8A%E6%98%AF%E5%9F%BA%E6%9C%AC%E5%8A%9F%E4%B8%8D%E6%80%8E%E4%B9%88%E6%89%8E%E5%AE%9E%E3%80%81%E6%93%8D%E4%BD%9C%E4%B8%8D%E6%80%8E%E4%B9%88%E7%86%9F%E7%BB%83%E7%9A%84%E5%90%8C%E5%AD%A6%EF%BC%8C%E8%B6%8A%E6%98%AF%E5%9C%A8%E6%8B%BF%E5%88%B0%E9%97%AE%E9%A2%98%E6%97%B6%E5%BF%8D%E4%B8%8D%E4%BD%8F%E4%BC%9A%E6%83%B3%E5%BE%88%E5%A4%9A%EF%BC%8C%E4%B8%80%E4%B8%8B%E5%AD%90%E5%B0%B1%E6%89%8E%E5%88%B0%E7%BA%B7%E7%B9%81%E8%8A%9C%E6%9D%82%E7%9A%84%E6%B3%A5%E6%BD%AD%E9%87%8C%E9%9D%A2%E5%8E%BB%EF%BC%8C%E6%80%8E%E4%B9%88%E4%B9%9F%E7%90%86%E4%B8%8D%E6%B8%85%E5%A4%B4%E7%BB%AA%EF%BC%8C%E5%AF%B8%E6%AD%A5%E9%9A%BE%E8%A1%8C%E3%80%82%0A%0A%E5%8E%9F%E6%9D%A5%E4%BA%BA%E5%AE%B6%E4%B8%8D%E6%98%AF%E6%83%B3%E5%A4%AA%E5%A4%9A%EF%BC%8C%E8%80%8C%E6%98%AF%E5%9F%BA%E7%A1%80%E5%B7%AE%F0%9F%98%82%E3%80%82%0A</center>"
  },
  {
    "title": "分布式事务的 N 种实现",
    "created": "2019-04-26T00:40:06.000Z",
    "updated": "2019-04-27T17:53:50.000Z",
    "tags": [
      "编程相关",
      "posts"
    ],
    "content": "## 目录\n\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">目录</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">需求缘起</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">理论基石</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">ACID 和 BASE</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">2PC</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">需求样例</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现1 Seata</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">介绍 & 框架</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">原理</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现充值需求</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">代码示例</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现2 TCC</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">介绍</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">原理</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现框架</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">代码示例</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现充值需求</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现3 事务消息</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">介绍</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现框架</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">原理</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">代码示例</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现充值需求</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现4 本地消息表</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">介绍 & 原理</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现充值需求</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现5 考拉的方案</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">介绍 & 原理</a>\n    *   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">实现充值需求</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">总结</a>\n*   <a style=\"line-height: 160%; box-sizing: content-box; text-decoration: underline; color: #5286bc;\">参考文章</a>\n\n## 需求缘起\n\n在微服务架构中，随着服务的逐步拆分，数据库私有已经成为共识，这也导致所面临的分布式事务问题成为微服务落地过程中一个非常难以逾越的障碍，但是目前尚没有一个完整通用的解决方案。\n\n其实不仅仅是在微服务架构中，随着用户访问量的逐渐上涨，数据库甚至是服务的分片、分区、水平拆分、垂直拆分已经逐渐成为较为常用的提升瓶颈的解决方案，因此越来越多的原子操作变成了跨库甚至是跨服务的事务操作。最终结果是在对高性能、高扩展性，高可用性的追求的道路上，我们开始逐渐放松对一致性的追求，但是在很多场景下，尤其是账务，电商等业务中，不可避免的存在着一致性问题，使得我们不得不去探寻一种机制，用以在分布式环境中保证事务的一致性\n\n引用自 https://www.infoq.cn/article/2018/08/rocketmq-4.3-release\n\n## 理论基石\n\n### ACID 和 BASE\n\n见 [https://www.infoq.cn/article/2018/08/rocketmq-4.3-release](https://www.infoq.cn/article/2018/08/rocketmq-4.3-release)  \n见 [https://www.txlcn.org/zh-cn/docs/preface.html](https://www.txlcn.org/zh-cn/docs/preface.html)\n\n### 2PC\n\n谈到分布式事务，首先要说的就是 2PC（two phase commit）方案，如下图所示：  \n<en-media hash=\"3b5a072b261c9c6afab0d9e598a41472\" type=\"image/png\"></en-media>\n\n2PC 把事务的执行分为两个阶段，第一个阶段即 prepare 阶段，这个阶段实际上就是投票阶段，协调者向参与者确认是否可以共同提交，再得到全部参与者的所有回答后，协调者向所有的参与者发布共同提交或者共同回滚的指令，用以保证事务达到一致性。  \n2PC 是几乎所有分布式事务算法的基础，后续的分布式事务算法几乎都由此改进而来。\n\n## 需求样例\n\n这里我们定义一个充值需求，后续我们在各个实现中看看如何为该需求实现分布式事务。  \n<en-media hash=\"9a5aba5d7ade859bf864d931b9c98dc8\" type=\"image/png\"></en-media>\n\nOrder 和 Account 分别是独立的一个服务，充值完成后，要分别将订单Order 设置为成功以及增加用户余额。\n\n## 实现1 Seata\n\n### 介绍 & 框架\n\n[Seata（Fescar）](https://github.com/seata/seata) is a distributed transaction solution with high performance and ease of use for microservices architecture.  \n阿里开源，其特点是用一个事务管理器，来管理每个服务的事务，本质上是 2PC（后文会解释） 的一种实现。  \nSeata 提供了全局的事务管理器\n\n<en-media hash=\"cb8928379aa09b1f0bbaba04dcae44ab\" type=\"image/png\"></en-media>\n\n### 原理\n\n[Fescar官方介绍](https://github.com/seata/seata/wiki/Home_Chinese)\n\n[Fescar全局锁的理解](https://www.jianshu.com/p/4cb127b737cf)\n\n代理 SQL 查询，实现事务管理，类似中间件\n\n### 实现充值需求\n\n用该方案实现需求的话，就是这样的：\n\n<en-media hash=\"290170da3fcb82429a979e16e42f45a5\" type=\"image/png\"></en-media>\n\nOrder 和 Account 都接入 Seata 来代理事务\n\n### 代码示例\n\n比起自己去实现 2PC，Seata 提供了简化方案，代码实例见 ：\n\n[Seata Samples](https://github.com/seata/seata-samples)\n\n## 实现2 TCC\n\n### 介绍\n\nTCC(Try-Confirm-Concel) 模型是一种补偿性事务，主要分为 Try：检查、保留资源，Confirm：执行事务，Concel：释放资源三个阶段，如下图所示：\n\n<en-media hash=\"14732df8f80719e067fee603b53b4a2d\" type=\"image/png\"></en-media>\n\n其中，活动管理器记录了全局事务的推进状态以及各子事务的执行状态，负责推进各个子事务共同进行提交或者回滚。同时负责在子事务处理超时后不停重试，重试不成功后转手工处理，用以保证事务的最终一致性。\n\n### 原理\n\n每个子节点，要实现 TCC 接口，才能被管理。  \n优点：不依赖 local transaction，可以管理非关系数据库库的服务  \n缺点：TCC 模式多增加了一个状态，导致在业务开发过程中，复杂度上升，而且协调器与子事务的通信过程增加，状态轮转处理也更为复杂。而且，很多业务是无法补偿的，例如银行卡充值。\n\n### 实现框架\n\n[tx-lcn](https://github.com/codingapi/tx-lcn) LCN distributed transaction framework, compatible with dubbo, spring cloud and Motan framework, supports various relational databases https://www.txlcn.org\n\n或者 Seata MT 模式\n\n### 代码示例\n\n[txlcn-demo](https://github.com/codingapi/txlcn-demo)\n\n### 实现充值需求\n\n<en-media hash=\"51aedac7f8aa83ba897c07213f2b8b28\" type=\"image/png\"></en-media>\n\n需要把 Oder.done 和 Account 的余额+ 操作都实现 tcc 接口  \n可以看出，这样真的很麻烦，能用本地事务的还是尽量用本地事务吧\n\n## 实现3 事务消息\n\n### 介绍\n\n以购物场景为例，张三购买物品，账户扣款 100 元的同时，需要保证在下游的会员服务中给该账户增加 100 积分。由于数据库私有，所以导致在实际的操作过程中会出现很多问题，比如先发送消息，可能会因为扣款失败导致账户积分无故增加，如果先执行扣款，则有可能因服务宕机，导致积分不能增加，无论是先发消息还是先执行本地事务，都有可能导致出现数据不一致的结果。\n\n<en-media hash=\"ceb103cd86a7cda25e4fc25635770dea\" type=\"image/png\"></en-media>\n\n事务消息的本质就是为了解决此类问题，解决本地事务执行与消息发送的原子性问题。\n\n### 实现框架\n\n[Apache RocketMQ™](https://rocketmq.apache.org/) is an open source distributed messaging and streaming data platform.\n\n### 原理\n\n<en-media hash=\"66b6ae1dec5b96084c3a6d29174a20e3\" type=\"image/png\"></en-media>\n\n1.  事务发起方首先发送 prepare 消息到 MQ。\n2.  在发送 prepare 消息成功后执行本地事务。\n3.  根据本地事务执行结果返回 commit 或者是 rollback。\n4.  如果消息是 rollback，MQ 将删除该 prepare 消息不进行下发，如果是 commit 消息，MQ 将会把这个消息发送给 consumer 端。\n5.  如果执行本地事务过程中，执行端挂掉，或者超时，MQ 将会不停的询问其同组的其它 producer 来获取状态。\n6.  Consumer 端的消费成功机制有 MQ 保证。\n\n优点：对异步操作支持友好  \n缺点：Producer 端要为 RMQ 实现事务查询接口，导致在业务开发过程中，复杂度上升。\n\n### 代码示例\n\n// TODO\n\n### 实现充值需求\n\n<en-media hash=\"bd919538163f6a55fadead2646574283\" type=\"image/png\"></en-media>\n\n通过 MQ，来保障 Order 和 Acount 的两个操作要么一起成功，要么一起失败。  \n注意一个点，假设 Account 的余额+失败了，这里是无法回滚 Order 的操作的，Account 要保证自己能正确处理消息。\n\n## 实现4 本地消息表\n\n### 介绍 & 原理\n\n分布式事务=A系统本地事务 + B系统本地事务 + 消息通知;  \n准备:  \nA系统维护一张消息表log1,状态为未执行,  \nB系统维护2张表,  \n未完成表log2,  \n已完成表log3,  \n消息中间件用两个topic,  \ntopic1是A系统通知B要执行任务了,  \ntopic2是B系统通知A已经完成任务了,\n\n<en-media hash=\"6788ded12488beeff631ff0ca075e702\" type=\"image/png\"></en-media>\n\n1.  用户在A系统里领取优惠券,并往log1插入一条记录\n2.  由定时任务轮询log1,发消息给B系统\n3.  B系统收到消息后,先检查是否在log3中执行过这条消息,没有的话插入log2表,并进行发短信,发送成功后删除log2的记录,插入log3\n4.  B系统发消息给A系统\n5.  A系统根据id删除这个消息\n\n假设出现网络中断和系统 Crash 等问题时，为了继续执行事务，需要进行重试。重试方式有：\n\n1.  定时任务恢复事务的执行，\n2.  使用 MQ 来传递消息，MQ可以保证消息被正确消费。\n\n优点：简单  \n缺点：程序会出现执行到一半的状态，重试则要求每个操作需要实现**幂等性**\n\n注意：分布式系统实现幂等性的时候，记得使用分布式锁，分布式锁详细介绍见文末参考文章\n\n### 实现充值需求\n\n<en-media hash=\"f2d89fc2f83e77febfd121ccc1f3a54c\" type=\"image/png\"></en-media>\n\n通过消息表，把断开的事务继续执行下去。\n\n## 实现5 考拉的方案\n\n### 介绍 & 原理\n\n考拉的方案，就是使用本地消息表，但是少了两个重要组件（MQ 和 关系型数据库），写起来还是比较辛苦的。\n\n考拉方案有如下特点：\n\n1.  Order 表承担了消息表功能\n2.  服务之间使用 http 通信，所以碰到问题要依赖定时任务发布补单重试\n3.  没有使用关系型数据库，幂等性的实现比较困难。\n\n### 实现充值需求\n\n<en-media hash=\"7b6cccee174c7389cd9d6a777a1fc409\" type=\"image/png\"></en-media>\n\n难点:\n\n*   实现幂等性的要求太高，基本要求所有操作都需要实现幂等性,例如更新余额操作，要高效更新，简单的办法是使用乐观锁，但是要同时兼顾幂等性的话，乐观锁就不够用了。\n\n*   程序在任一一步断开，都需要重新运行起来，补单程序会很难写（简单的业务还好，复杂业务就会混乱了）\n\n改进建议：\n\n*   服务直接使用 mq 通信，服务异常需要重试消费。\n*   使用关系型数据库，通过本地事务，可以只程序开始处判断重复，简化幂等性的实现逻辑\n\n实际上就是往上一个实现4上走\n\n## 总结\n\n我们先对这些实现方案进行一个总结：\n\n<table style=\"margin: 2px 0 14px; color: #333; width: auto; border-collapse: collapse; box-sizing: border-box;\">\n\n<thead style=\"line-height: 160%; box-sizing: content-box;\">\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<th align=\"left\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #72777b; border-top: 0; background-color: #7b8184; font-weight: 300; color: #fff; padding-top: 6px;\">基础原理</th>\n\n<th align=\"right\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #72777b; border-top: 0; background-color: #7b8184; font-weight: 300; color: #fff; padding-top: 6px;\">实现</th>\n\n<th align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #72777b; border-top: 0; background-color: #7b8184; font-weight: 300; color: #fff; padding-top: 6px;\">优势</th>\n\n<th align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #72777b; border-top: 0; background-color: #7b8184; font-weight: 300; color: #fff; padding-top: 6px;\">必要前提</th>\n\n</tr>\n\n</thead>\n\n<tbody style=\"line-height: 160%; box-sizing: content-box;\">\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td align=\"left\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">2PC</td>\n\n<td align=\"right\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">Seata</td>\n\n<td align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">简单</td>\n\n<td align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">关系型数据库</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td align=\"left\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">2PC</td>\n\n<td align=\"right\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">TCC</td>\n\n<td align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">不依赖关系系数据库</td>\n\n<td align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">实现 TCC 接口</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td align=\"left\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">2PC</td>\n\n<td align=\"right\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">事务消息</td>\n\n<td align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">高性能</td>\n\n<td align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">实现事务检查接口</td>\n\n</tr>\n\n<tr style=\"line-height: 160%; box-sizing: content-box;\">\n\n<td align=\"left\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">最终一致性</td>\n\n<td align=\"right\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">本地消息表</td>\n\n<td align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">去中心化</td>\n\n<td align=\"center\" style=\"line-height: 160%; box-sizing: content-box; padding: 5px 14px 5px 12px; border: 1px solid #eaeaea;\">侵入业务，接口需要幂等性</td>\n\n</tr>\n\n</tbody>\n\n</table>\n\n各个方案有自己的优劣，实际使用过程中，我们还是需要根据情况来选择不同事务方案来灵活组合。\n\n例如存在服务模块A 、B、 C。A模块是mysql作为数据源的服务，B模块是基于redis作为数据源的服务，C模块是基于mongo作为数据源的服务。若需要解决他们的事务一致性就需要针对不同的节点采用不同的方案，并且统一协调完成分布式事务的处理。\n\n<en-media hash=\"0f6dbd32fdf49943dfaff1243b40ad2b\" type=\"image/png\"></en-media>\n\n方案：将A模块采用 Seata 模式、B/C采用TCC模式就能完美解决。\n\n## 参考文章\n\n[RocketMQ 4.3 正式发布，支持分布式事务](https://www.infoq.cn/article/2018/08/rocketmq-4.3-release)\n\n[Seata](https://github.com/seata/seata)\n\n[txlcn](https://www.txlcn.org/zh-cn/docs/preface.html)\n\n[分布式事务 CAP 理解论证 解决方案](https://blog.csdn.net/weixin_40533111/article/details/85069536)\n\n[再有人问你分布式锁，这篇文章扔给他](https://juejin.im/post/5bbb0d8df265da0abd3533a5)\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">%23%23%20%E7%9B%AE%E5%BD%95%0A%0A%5BTOC%5D%0A%0A%23%23%20%E9%9C%80%E6%B1%82%E7%BC%98%E8%B5%B7%0A%0A%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%EF%BC%8C%E9%9A%8F%E7%9D%80%E6%9C%8D%E5%8A%A1%E7%9A%84%E9%80%90%E6%AD%A5%E6%8B%86%E5%88%86%EF%BC%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A7%81%E6%9C%89%E5%B7%B2%E7%BB%8F%E6%88%90%E4%B8%BA%E5%85%B1%E8%AF%86%EF%BC%8C%E8%BF%99%E4%B9%9F%E5%AF%BC%E8%87%B4%E6%89%80%E9%9D%A2%E4%B8%B4%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E9%97%AE%E9%A2%98%E6%88%90%E4%B8%BA%E5%BE%AE%E6%9C%8D%E5%8A%A1%E8%90%BD%E5%9C%B0%E8%BF%87%E7%A8%8B%E4%B8%AD%E4%B8%80%E4%B8%AA%E9%9D%9E%E5%B8%B8%E9%9A%BE%E4%BB%A5%E9%80%BE%E8%B6%8A%E7%9A%84%E9%9A%9C%E7%A2%8D%EF%BC%8C%E4%BD%86%E6%98%AF%E7%9B%AE%E5%89%8D%E5%B0%9A%E6%B2%A1%E6%9C%89%E4%B8%80%E4%B8%AA%E5%AE%8C%E6%95%B4%E9%80%9A%E7%94%A8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%E3%80%82%0A%0A%E5%85%B6%E5%AE%9E%E4%B8%8D%E4%BB%85%E4%BB%85%E6%98%AF%E5%9C%A8%E5%BE%AE%E6%9C%8D%E5%8A%A1%E6%9E%B6%E6%9E%84%E4%B8%AD%EF%BC%8C%E9%9A%8F%E7%9D%80%E7%94%A8%E6%88%B7%E8%AE%BF%E9%97%AE%E9%87%8F%E7%9A%84%E9%80%90%E6%B8%90%E4%B8%8A%E6%B6%A8%EF%BC%8C%E6%95%B0%E6%8D%AE%E5%BA%93%E7%94%9A%E8%87%B3%E6%98%AF%E6%9C%8D%E5%8A%A1%E7%9A%84%E5%88%86%E7%89%87%E3%80%81%E5%88%86%E5%8C%BA%E3%80%81%E6%B0%B4%E5%B9%B3%E6%8B%86%E5%88%86%E3%80%81%E5%9E%82%E7%9B%B4%E6%8B%86%E5%88%86%E5%B7%B2%E7%BB%8F%E9%80%90%E6%B8%90%E6%88%90%E4%B8%BA%E8%BE%83%E4%B8%BA%E5%B8%B8%E7%94%A8%E7%9A%84%E6%8F%90%E5%8D%87%E7%93%B6%E9%A2%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%EF%BC%8C%E5%9B%A0%E6%AD%A4%E8%B6%8A%E6%9D%A5%E8%B6%8A%E5%A4%9A%E7%9A%84%E5%8E%9F%E5%AD%90%E6%93%8D%E4%BD%9C%E5%8F%98%E6%88%90%E4%BA%86%E8%B7%A8%E5%BA%93%E7%94%9A%E8%87%B3%E6%98%AF%E8%B7%A8%E6%9C%8D%E5%8A%A1%E7%9A%84%E4%BA%8B%E5%8A%A1%E6%93%8D%E4%BD%9C%E3%80%82%E6%9C%80%E7%BB%88%E7%BB%93%E6%9E%9C%E6%98%AF%E5%9C%A8%E5%AF%B9%E9%AB%98%E6%80%A7%E8%83%BD%E3%80%81%E9%AB%98%E6%89%A9%E5%B1%95%E6%80%A7%EF%BC%8C%E9%AB%98%E5%8F%AF%E7%94%A8%E6%80%A7%E7%9A%84%E8%BF%BD%E6%B1%82%E7%9A%84%E9%81%93%E8%B7%AF%E4%B8%8A%EF%BC%8C%E6%88%91%E4%BB%AC%E5%BC%80%E5%A7%8B%E9%80%90%E6%B8%90%E6%94%BE%E6%9D%BE%E5%AF%B9%E4%B8%80%E8%87%B4%E6%80%A7%E7%9A%84%E8%BF%BD%E6%B1%82%EF%BC%8C%E4%BD%86%E6%98%AF%E5%9C%A8%E5%BE%88%E5%A4%9A%E5%9C%BA%E6%99%AF%E4%B8%8B%EF%BC%8C%E5%B0%A4%E5%85%B6%E6%98%AF%E8%B4%A6%E5%8A%A1%EF%BC%8C%E7%94%B5%E5%95%86%E7%AD%89%E4%B8%9A%E5%8A%A1%E4%B8%AD%EF%BC%8C%E4%B8%8D%E5%8F%AF%E9%81%BF%E5%85%8D%E7%9A%84%E5%AD%98%E5%9C%A8%E7%9D%80%E4%B8%80%E8%87%B4%E6%80%A7%E9%97%AE%E9%A2%98%EF%BC%8C%E4%BD%BF%E5%BE%97%E6%88%91%E4%BB%AC%E4%B8%8D%E5%BE%97%E4%B8%8D%E5%8E%BB%E6%8E%A2%E5%AF%BB%E4%B8%80%E7%A7%8D%E6%9C%BA%E5%88%B6%EF%BC%8C%E7%94%A8%E4%BB%A5%E5%9C%A8%E5%88%86%E5%B8%83%E5%BC%8F%E7%8E%AF%E5%A2%83%E4%B8%AD%E4%BF%9D%E8%AF%81%E4%BA%8B%E5%8A%A1%E7%9A%84%E4%B8%80%E8%87%B4%E6%80%A7%0A%0A%E5%BC%95%E7%94%A8%E8%87%AA%20https%3A%2F%2Fwww.infoq.cn%2Farticle%2F2018%2F08%2Frocketmq-4.3-release%0A%0A%23%23%20%E7%90%86%E8%AE%BA%E5%9F%BA%E7%9F%B3%0A%0A%23%23%23%20ACID%20%E5%92%8C%20BASE%0A%E8%A7%81%20%5Bhttps%3A%2F%2Fwww.infoq.cn%2Farticle%2F2018%2F08%2Frocketmq-4.3-release%5D(https%3A%2F%2Fwww.infoq.cn%2Farticle%2F2018%2F08%2Frocketmq-4.3-release)%0A%E8%A7%81%20%5Bhttps%3A%2F%2Fwww.txlcn.org%2Fzh-cn%2Fdocs%2Fpreface.html%5D(https%3A%2F%2Fwww.txlcn.org%2Fzh-cn%2Fdocs%2Fpreface.html)%0A%0A%23%23%23%202PC%0A%0A%E8%B0%88%E5%88%B0%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%EF%BC%8C%E9%A6%96%E5%85%88%E8%A6%81%E8%AF%B4%E7%9A%84%E5%B0%B1%E6%98%AF%202PC%EF%BC%88two%20phase%20commit%EF%BC%89%E6%96%B9%E6%A1%88%EF%BC%8C%E5%A6%82%E4%B8%8B%E5%9B%BE%E6%89%80%E7%A4%BA%EF%BC%9A%0A!%5B3b5a072b261c9c6afab0d9e598a41472.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1901)%0A%0A%0A2PC%20%E6%8A%8A%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%89%A7%E8%A1%8C%E5%88%86%E4%B8%BA%E4%B8%A4%E4%B8%AA%E9%98%B6%E6%AE%B5%EF%BC%8C%E7%AC%AC%E4%B8%80%E4%B8%AA%E9%98%B6%E6%AE%B5%E5%8D%B3%20prepare%20%E9%98%B6%E6%AE%B5%EF%BC%8C%E8%BF%99%E4%B8%AA%E9%98%B6%E6%AE%B5%E5%AE%9E%E9%99%85%E4%B8%8A%E5%B0%B1%E6%98%AF%E6%8A%95%E7%A5%A8%E9%98%B6%E6%AE%B5%EF%BC%8C%E5%8D%8F%E8%B0%83%E8%80%85%E5%90%91%E5%8F%82%E4%B8%8E%E8%80%85%E7%A1%AE%E8%AE%A4%E6%98%AF%E5%90%A6%E5%8F%AF%E4%BB%A5%E5%85%B1%E5%90%8C%E6%8F%90%E4%BA%A4%EF%BC%8C%E5%86%8D%E5%BE%97%E5%88%B0%E5%85%A8%E9%83%A8%E5%8F%82%E4%B8%8E%E8%80%85%E7%9A%84%E6%89%80%E6%9C%89%E5%9B%9E%E7%AD%94%E5%90%8E%EF%BC%8C%E5%8D%8F%E8%B0%83%E8%80%85%E5%90%91%E6%89%80%E6%9C%89%E7%9A%84%E5%8F%82%E4%B8%8E%E8%80%85%E5%8F%91%E5%B8%83%E5%85%B1%E5%90%8C%E6%8F%90%E4%BA%A4%E6%88%96%E8%80%85%E5%85%B1%E5%90%8C%E5%9B%9E%E6%BB%9A%E7%9A%84%E6%8C%87%E4%BB%A4%EF%BC%8C%E7%94%A8%E4%BB%A5%E4%BF%9D%E8%AF%81%E4%BA%8B%E5%8A%A1%E8%BE%BE%E5%88%B0%E4%B8%80%E8%87%B4%E6%80%A7%E3%80%82%20%0A2PC%20%E6%98%AF%E5%87%A0%E4%B9%8E%E6%89%80%E6%9C%89%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%AE%97%E6%B3%95%E7%9A%84%E5%9F%BA%E7%A1%80%EF%BC%8C%E5%90%8E%E7%BB%AD%E7%9A%84%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%AE%97%E6%B3%95%E5%87%A0%E4%B9%8E%E9%83%BD%E7%94%B1%E6%AD%A4%E6%94%B9%E8%BF%9B%E8%80%8C%E6%9D%A5%E3%80%82%0A%0A%0A%0A%20%20%0A%23%23%20%E9%9C%80%E6%B1%82%E6%A0%B7%E4%BE%8B%0A%E8%BF%99%E9%87%8C%E6%88%91%E4%BB%AC%E5%AE%9A%E4%B9%89%E4%B8%80%E4%B8%AA%E5%85%85%E5%80%BC%E9%9C%80%E6%B1%82%EF%BC%8C%E5%90%8E%E7%BB%AD%E6%88%91%E4%BB%AC%E5%9C%A8%E5%90%84%E4%B8%AA%E5%AE%9E%E7%8E%B0%E4%B8%AD%E7%9C%8B%E7%9C%8B%E5%A6%82%E4%BD%95%E4%B8%BA%E8%AF%A5%E9%9C%80%E6%B1%82%E5%AE%9E%E7%8E%B0%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E3%80%82%0A!%5B9a5aba5d7ade859bf864d931b9c98dc8.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1902)%0A%0A%0AOrder%20%E5%92%8C%20Account%20%E5%88%86%E5%88%AB%E6%98%AF%E7%8B%AC%E7%AB%8B%E7%9A%84%E4%B8%80%E4%B8%AA%E6%9C%8D%E5%8A%A1%EF%BC%8C%E5%85%85%E5%80%BC%E5%AE%8C%E6%88%90%E5%90%8E%EF%BC%8C%E8%A6%81%E5%88%86%E5%88%AB%E5%B0%86%E8%AE%A2%E5%8D%95Order%20%E8%AE%BE%E7%BD%AE%E4%B8%BA%E6%88%90%E5%8A%9F%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%8A%A0%E7%94%A8%E6%88%B7%E4%BD%99%E9%A2%9D%E3%80%82%0A%0A%0A%0A%0A%23%23%20%E5%AE%9E%E7%8E%B01%20Seata%0A%0A%23%23%23%20%E4%BB%8B%E7%BB%8D%20%26%20%E6%A1%86%E6%9E%B6%0A%5BSeata%EF%BC%88Fescar%EF%BC%89%5D(https%3A%2F%2Fgithub.com%2Fseata%2Fseata)%20is%20a%20distributed%20transaction%20solution%20with%20high%20performance%20and%20ease%20of%20use%20for%20microservices%20architecture.%0A%E9%98%BF%E9%87%8C%E5%BC%80%E6%BA%90%EF%BC%8C%E5%85%B6%E7%89%B9%E7%82%B9%E6%98%AF%E7%94%A8%E4%B8%80%E4%B8%AA%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%EF%BC%8C%E6%9D%A5%E7%AE%A1%E7%90%86%E6%AF%8F%E4%B8%AA%E6%9C%8D%E5%8A%A1%E7%9A%84%E4%BA%8B%E5%8A%A1%EF%BC%8C%E6%9C%AC%E8%B4%A8%E4%B8%8A%E6%98%AF%202PC%EF%BC%88%E5%90%8E%E6%96%87%E4%BC%9A%E8%A7%A3%E9%87%8A%EF%BC%89%20%E7%9A%84%E4%B8%80%E7%A7%8D%E5%AE%9E%E7%8E%B0%E3%80%82%0ASeata%20%E6%8F%90%E4%BE%9B%E4%BA%86%E5%85%A8%E5%B1%80%E7%9A%84%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86%E5%99%A8%0A%0A!%5Bcb8928379aa09b1f0bbaba04dcae44ab.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1903)%0A%0A%23%23%23%20%E5%8E%9F%E7%90%86%0A%5BFescar%E5%AE%98%E6%96%B9%E4%BB%8B%E7%BB%8D%5D(https%3A%2F%2Fgithub.com%2Fseata%2Fseata%2Fwiki%2FHome_Chinese)%0A%5BFescar%E5%85%A8%E5%B1%80%E9%94%81%E7%9A%84%E7%90%86%E8%A7%A3%5D(https%3A%2F%2Fwww.jianshu.com%2Fp%2F4cb127b737cf)%0A%0A%E4%BB%A3%E7%90%86%20SQL%20%E6%9F%A5%E8%AF%A2%EF%BC%8C%E5%AE%9E%E7%8E%B0%E4%BA%8B%E5%8A%A1%E7%AE%A1%E7%90%86%EF%BC%8C%E7%B1%BB%E4%BC%BC%E4%B8%AD%E9%97%B4%E4%BB%B6%0A%0A%23%23%23%20%E5%AE%9E%E7%8E%B0%E5%85%85%E5%80%BC%E9%9C%80%E6%B1%82%0A%0A%E7%94%A8%E8%AF%A5%E6%96%B9%E6%A1%88%E5%AE%9E%E7%8E%B0%E9%9C%80%E6%B1%82%E7%9A%84%E8%AF%9D%EF%BC%8C%E5%B0%B1%E6%98%AF%E8%BF%99%E6%A0%B7%E7%9A%84%EF%BC%9A%0A%0A!%5B290170da3fcb82429a979e16e42f45a5.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1904)%0A%0AOrder%20%E5%92%8C%20Account%20%E9%83%BD%E6%8E%A5%E5%85%A5%20Seata%20%E6%9D%A5%E4%BB%A3%E7%90%86%E4%BA%8B%E5%8A%A1%0A%0A%23%23%23%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B%0A%E6%AF%94%E8%B5%B7%E8%87%AA%E5%B7%B1%E5%8E%BB%E5%AE%9E%E7%8E%B0%202PC%EF%BC%8CSeata%20%E6%8F%90%E4%BE%9B%E4%BA%86%E7%AE%80%E5%8C%96%E6%96%B9%E6%A1%88%EF%BC%8C%E4%BB%A3%E7%A0%81%E5%AE%9E%E4%BE%8B%E8%A7%81%20%EF%BC%9A%0A%5BSeata%20Samples%5D(https%3A%2F%2Fgithub.com%2Fseata%2Fseata-samples)%0A%0A%23%23%20%E5%AE%9E%E7%8E%B02%20TCC%0A%0A%23%23%23%20%E4%BB%8B%E7%BB%8D%0ATCC(Try-Confirm-Concel)%20%E6%A8%A1%E5%9E%8B%E6%98%AF%E4%B8%80%E7%A7%8D%E8%A1%A5%E5%81%BF%E6%80%A7%E4%BA%8B%E5%8A%A1%EF%BC%8C%E4%B8%BB%E8%A6%81%E5%88%86%E4%B8%BA%20Try%EF%BC%9A%E6%A3%80%E6%9F%A5%E3%80%81%E4%BF%9D%E7%95%99%E8%B5%84%E6%BA%90%EF%BC%8CConfirm%EF%BC%9A%E6%89%A7%E8%A1%8C%E4%BA%8B%E5%8A%A1%EF%BC%8CConcel%EF%BC%9A%E9%87%8A%E6%94%BE%E8%B5%84%E6%BA%90%E4%B8%89%E4%B8%AA%E9%98%B6%E6%AE%B5%EF%BC%8C%E5%A6%82%E4%B8%8B%E5%9B%BE%E6%89%80%E7%A4%BA%EF%BC%9A%0A%0A!%5B14732df8f80719e067fee603b53b4a2d.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1905)%0A%0A%0A%E5%85%B6%E4%B8%AD%EF%BC%8C%E6%B4%BB%E5%8A%A8%E7%AE%A1%E7%90%86%E5%99%A8%E8%AE%B0%E5%BD%95%E4%BA%86%E5%85%A8%E5%B1%80%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%8E%A8%E8%BF%9B%E7%8A%B6%E6%80%81%E4%BB%A5%E5%8F%8A%E5%90%84%E5%AD%90%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%89%A7%E8%A1%8C%E7%8A%B6%E6%80%81%EF%BC%8C%E8%B4%9F%E8%B4%A3%E6%8E%A8%E8%BF%9B%E5%90%84%E4%B8%AA%E5%AD%90%E4%BA%8B%E5%8A%A1%E5%85%B1%E5%90%8C%E8%BF%9B%E8%A1%8C%E6%8F%90%E4%BA%A4%E6%88%96%E8%80%85%E5%9B%9E%E6%BB%9A%E3%80%82%E5%90%8C%E6%97%B6%E8%B4%9F%E8%B4%A3%E5%9C%A8%E5%AD%90%E4%BA%8B%E5%8A%A1%E5%A4%84%E7%90%86%E8%B6%85%E6%97%B6%E5%90%8E%E4%B8%8D%E5%81%9C%E9%87%8D%E8%AF%95%EF%BC%8C%E9%87%8D%E8%AF%95%E4%B8%8D%E6%88%90%E5%8A%9F%E5%90%8E%E8%BD%AC%E6%89%8B%E5%B7%A5%E5%A4%84%E7%90%86%EF%BC%8C%E7%94%A8%E4%BB%A5%E4%BF%9D%E8%AF%81%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7%E3%80%82%0A%0A%23%23%23%20%E5%8E%9F%E7%90%86%0A%E6%AF%8F%E4%B8%AA%E5%AD%90%E8%8A%82%E7%82%B9%EF%BC%8C%E8%A6%81%E5%AE%9E%E7%8E%B0%20TCC%20%E6%8E%A5%E5%8F%A3%EF%BC%8C%E6%89%8D%E8%83%BD%E8%A2%AB%E7%AE%A1%E7%90%86%E3%80%82%0A%E4%BC%98%E7%82%B9%EF%BC%9A%E4%B8%8D%E4%BE%9D%E8%B5%96%20local%20transaction%EF%BC%8C%E5%8F%AF%E4%BB%A5%E7%AE%A1%E7%90%86%E9%9D%9E%E5%85%B3%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%E5%BA%93%E7%9A%84%E6%9C%8D%E5%8A%A1%0A%E7%BC%BA%E7%82%B9%EF%BC%9ATCC%20%E6%A8%A1%E5%BC%8F%E5%A4%9A%E5%A2%9E%E5%8A%A0%E4%BA%86%E4%B8%80%E4%B8%AA%E7%8A%B6%E6%80%81%EF%BC%8C%E5%AF%BC%E8%87%B4%E5%9C%A8%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E5%A4%8D%E6%9D%82%E5%BA%A6%E4%B8%8A%E5%8D%87%EF%BC%8C%E8%80%8C%E4%B8%94%E5%8D%8F%E8%B0%83%E5%99%A8%E4%B8%8E%E5%AD%90%E4%BA%8B%E5%8A%A1%E7%9A%84%E9%80%9A%E4%BF%A1%E8%BF%87%E7%A8%8B%E5%A2%9E%E5%8A%A0%EF%BC%8C%E7%8A%B6%E6%80%81%E8%BD%AE%E8%BD%AC%E5%A4%84%E7%90%86%E4%B9%9F%E6%9B%B4%E4%B8%BA%E5%A4%8D%E6%9D%82%E3%80%82%E8%80%8C%E4%B8%94%EF%BC%8C%E5%BE%88%E5%A4%9A%E4%B8%9A%E5%8A%A1%E6%98%AF%E6%97%A0%E6%B3%95%E8%A1%A5%E5%81%BF%E7%9A%84%EF%BC%8C%E4%BE%8B%E5%A6%82%E9%93%B6%E8%A1%8C%E5%8D%A1%E5%85%85%E5%80%BC%E3%80%82%0A%0A%23%23%23%20%E5%AE%9E%E7%8E%B0%E6%A1%86%E6%9E%B6%0A%5Btx-lcn%5D(https%3A%2F%2Fgithub.com%2Fcodingapi%2Ftx-lcn)%20LCN%20distributed%20transaction%20framework%2C%20compatible%20with%20dubbo%2C%20spring%20cloud%20and%20Motan%20framework%2C%20supports%20various%20relational%20databases%20https%3A%2F%2Fwww.txlcn.org%0A%0A%E6%88%96%E8%80%85%20Seata%20MT%20%E6%A8%A1%E5%BC%8F%0A%0A%23%23%23%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B%0A%5Btxlcn-demo%5D(https%3A%2F%2Fgithub.com%2Fcodingapi%2Ftxlcn-demo)%0A%0A%23%23%23%20%E5%AE%9E%E7%8E%B0%E5%85%85%E5%80%BC%E9%9C%80%E6%B1%82%0A%0A!%5B51aedac7f8aa83ba897c07213f2b8b28.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1914)%0A%0A%0A%E9%9C%80%E8%A6%81%E6%8A%8A%20Oder.done%20%E5%92%8C%20Account%20%E7%9A%84%E4%BD%99%E9%A2%9D%2B%20%E6%93%8D%E4%BD%9C%E9%83%BD%E5%AE%9E%E7%8E%B0%20tcc%20%E6%8E%A5%E5%8F%A3%0A%E5%8F%AF%E4%BB%A5%E7%9C%8B%E5%87%BA%EF%BC%8C%E8%BF%99%E6%A0%B7%E7%9C%9F%E7%9A%84%E5%BE%88%E9%BA%BB%E7%83%A6%EF%BC%8C%E8%83%BD%E7%94%A8%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%E7%9A%84%E8%BF%98%E6%98%AF%E5%B0%BD%E9%87%8F%E7%94%A8%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%E5%90%A7%0A%0A%23%23%20%E5%AE%9E%E7%8E%B03%20%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF%0A%0A%23%23%23%20%E4%BB%8B%E7%BB%8D%0A%E4%BB%A5%E8%B4%AD%E7%89%A9%E5%9C%BA%E6%99%AF%E4%B8%BA%E4%BE%8B%EF%BC%8C%E5%BC%A0%E4%B8%89%E8%B4%AD%E4%B9%B0%E7%89%A9%E5%93%81%EF%BC%8C%E8%B4%A6%E6%88%B7%E6%89%A3%E6%AC%BE%20100%20%E5%85%83%E7%9A%84%E5%90%8C%E6%97%B6%EF%BC%8C%E9%9C%80%E8%A6%81%E4%BF%9D%E8%AF%81%E5%9C%A8%E4%B8%8B%E6%B8%B8%E7%9A%84%E4%BC%9A%E5%91%98%E6%9C%8D%E5%8A%A1%E4%B8%AD%E7%BB%99%E8%AF%A5%E8%B4%A6%E6%88%B7%E5%A2%9E%E5%8A%A0%20100%20%E7%A7%AF%E5%88%86%E3%80%82%E7%94%B1%E4%BA%8E%E6%95%B0%E6%8D%AE%E5%BA%93%E7%A7%81%E6%9C%89%EF%BC%8C%E6%89%80%E4%BB%A5%E5%AF%BC%E8%87%B4%E5%9C%A8%E5%AE%9E%E9%99%85%E7%9A%84%E6%93%8D%E4%BD%9C%E8%BF%87%E7%A8%8B%E4%B8%AD%E4%BC%9A%E5%87%BA%E7%8E%B0%E5%BE%88%E5%A4%9A%E9%97%AE%E9%A2%98%EF%BC%8C%E6%AF%94%E5%A6%82%E5%85%88%E5%8F%91%E9%80%81%E6%B6%88%E6%81%AF%EF%BC%8C%E5%8F%AF%E8%83%BD%E4%BC%9A%E5%9B%A0%E4%B8%BA%E6%89%A3%E6%AC%BE%E5%A4%B1%E8%B4%A5%E5%AF%BC%E8%87%B4%E8%B4%A6%E6%88%B7%E7%A7%AF%E5%88%86%E6%97%A0%E6%95%85%E5%A2%9E%E5%8A%A0%EF%BC%8C%E5%A6%82%E6%9E%9C%E5%85%88%E6%89%A7%E8%A1%8C%E6%89%A3%E6%AC%BE%EF%BC%8C%E5%88%99%E6%9C%89%E5%8F%AF%E8%83%BD%E5%9B%A0%E6%9C%8D%E5%8A%A1%E5%AE%95%E6%9C%BA%EF%BC%8C%E5%AF%BC%E8%87%B4%E7%A7%AF%E5%88%86%E4%B8%8D%E8%83%BD%E5%A2%9E%E5%8A%A0%EF%BC%8C%E6%97%A0%E8%AE%BA%E6%98%AF%E5%85%88%E5%8F%91%E6%B6%88%E6%81%AF%E8%BF%98%E6%98%AF%E5%85%88%E6%89%A7%E8%A1%8C%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%EF%BC%8C%E9%83%BD%E6%9C%89%E5%8F%AF%E8%83%BD%E5%AF%BC%E8%87%B4%E5%87%BA%E7%8E%B0%E6%95%B0%E6%8D%AE%E4%B8%8D%E4%B8%80%E8%87%B4%E7%9A%84%E7%BB%93%E6%9E%9C%E3%80%82%0A%0A!%5Bceb103cd86a7cda25e4fc25635770dea.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1907)%0A%0A%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF%E7%9A%84%E6%9C%AC%E8%B4%A8%E5%B0%B1%E6%98%AF%E4%B8%BA%E4%BA%86%E8%A7%A3%E5%86%B3%E6%AD%A4%E7%B1%BB%E9%97%AE%E9%A2%98%EF%BC%8C%E8%A7%A3%E5%86%B3%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%E6%89%A7%E8%A1%8C%E4%B8%8E%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81%E7%9A%84%E5%8E%9F%E5%AD%90%E6%80%A7%E9%97%AE%E9%A2%98%E3%80%82%0A%0A%23%23%23%20%E5%AE%9E%E7%8E%B0%E6%A1%86%E6%9E%B6%0A%0A%5BApache%20RocketMQ%E2%84%A2%5D(https%3A%2F%2Frocketmq.apache.org%2F)%20is%20an%20open%20source%20distributed%20messaging%20and%20streaming%20data%20platform.%0A%0A%23%23%23%20%E5%8E%9F%E7%90%86%0A%0A!%5B66b6ae1dec5b96084c3a6d29174a20e3.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1908)%0A%0A1.%20%E4%BA%8B%E5%8A%A1%E5%8F%91%E8%B5%B7%E6%96%B9%E9%A6%96%E5%85%88%E5%8F%91%E9%80%81%20prepare%20%E6%B6%88%E6%81%AF%E5%88%B0%20MQ%E3%80%82%0A1.%20%E5%9C%A8%E5%8F%91%E9%80%81%20prepare%20%E6%B6%88%E6%81%AF%E6%88%90%E5%8A%9F%E5%90%8E%E6%89%A7%E8%A1%8C%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%E3%80%82%0A1.%20%E6%A0%B9%E6%8D%AE%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%E6%89%A7%E8%A1%8C%E7%BB%93%E6%9E%9C%E8%BF%94%E5%9B%9E%20commit%20%E6%88%96%E8%80%85%E6%98%AF%20rollback%E3%80%82%0A1.%20%E5%A6%82%E6%9E%9C%E6%B6%88%E6%81%AF%E6%98%AF%20rollback%EF%BC%8CMQ%20%E5%B0%86%E5%88%A0%E9%99%A4%E8%AF%A5%20prepare%20%E6%B6%88%E6%81%AF%E4%B8%8D%E8%BF%9B%E8%A1%8C%E4%B8%8B%E5%8F%91%EF%BC%8C%E5%A6%82%E6%9E%9C%E6%98%AF%20commit%20%E6%B6%88%E6%81%AF%EF%BC%8CMQ%20%E5%B0%86%E4%BC%9A%E6%8A%8A%E8%BF%99%E4%B8%AA%E6%B6%88%E6%81%AF%E5%8F%91%E9%80%81%E7%BB%99%20consumer%20%E7%AB%AF%E3%80%82%0A1.%20%E5%A6%82%E6%9E%9C%E6%89%A7%E8%A1%8C%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E6%89%A7%E8%A1%8C%E7%AB%AF%E6%8C%82%E6%8E%89%EF%BC%8C%E6%88%96%E8%80%85%E8%B6%85%E6%97%B6%EF%BC%8CMQ%20%E5%B0%86%E4%BC%9A%E4%B8%8D%E5%81%9C%E7%9A%84%E8%AF%A2%E9%97%AE%E5%85%B6%E5%90%8C%E7%BB%84%E7%9A%84%E5%85%B6%E5%AE%83%20producer%20%E6%9D%A5%E8%8E%B7%E5%8F%96%E7%8A%B6%E6%80%81%E3%80%82%0A1.%20Consumer%20%E7%AB%AF%E7%9A%84%E6%B6%88%E8%B4%B9%E6%88%90%E5%8A%9F%E6%9C%BA%E5%88%B6%E6%9C%89%20MQ%20%E4%BF%9D%E8%AF%81%E3%80%82%0A%0A%E4%BC%98%E7%82%B9%EF%BC%9A%E5%AF%B9%E5%BC%82%E6%AD%A5%E6%93%8D%E4%BD%9C%E6%94%AF%E6%8C%81%E5%8F%8B%E5%A5%BD%0A%E7%BC%BA%E7%82%B9%EF%BC%9AProducer%20%E7%AB%AF%E8%A6%81%E4%B8%BA%20RMQ%20%E5%AE%9E%E7%8E%B0%E4%BA%8B%E5%8A%A1%E6%9F%A5%E8%AF%A2%E6%8E%A5%E5%8F%A3%EF%BC%8C%E5%AF%BC%E8%87%B4%E5%9C%A8%E4%B8%9A%E5%8A%A1%E5%BC%80%E5%8F%91%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E5%A4%8D%E6%9D%82%E5%BA%A6%E4%B8%8A%E5%8D%87%E3%80%82%0A%0A%23%23%23%20%E4%BB%A3%E7%A0%81%E7%A4%BA%E4%BE%8B%0A%0A%2F%2F%20TODO%0A%0A%23%23%23%20%E5%AE%9E%E7%8E%B0%E5%85%85%E5%80%BC%E9%9C%80%E6%B1%82%0A%0A!%5Bbd919538163f6a55fadead2646574283.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1915)%0A%0A%E9%80%9A%E8%BF%87%20MQ%EF%BC%8C%E6%9D%A5%E4%BF%9D%E9%9A%9C%20Order%20%E5%92%8C%20Acount%20%E7%9A%84%E4%B8%A4%E4%B8%AA%E6%93%8D%E4%BD%9C%E8%A6%81%E4%B9%88%E4%B8%80%E8%B5%B7%E6%88%90%E5%8A%9F%EF%BC%8C%E8%A6%81%E4%B9%88%E4%B8%80%E8%B5%B7%E5%A4%B1%E8%B4%A5%E3%80%82%0A%E6%B3%A8%E6%84%8F%E4%B8%80%E4%B8%AA%E7%82%B9%EF%BC%8C%E5%81%87%E8%AE%BE%20Account%20%E7%9A%84%E4%BD%99%E9%A2%9D%2B%E5%A4%B1%E8%B4%A5%E4%BA%86%EF%BC%8C%E8%BF%99%E9%87%8C%E6%98%AF%E6%97%A0%E6%B3%95%E5%9B%9E%E6%BB%9A%20Order%20%E7%9A%84%E6%93%8D%E4%BD%9C%E7%9A%84%EF%BC%8CAccount%20%E8%A6%81%E4%BF%9D%E8%AF%81%E8%87%AA%E5%B7%B1%E8%83%BD%E6%AD%A3%E7%A1%AE%E5%A4%84%E7%90%86%E6%B6%88%E6%81%AF%E3%80%82%0A%0A%0A%23%23%20%20%E5%AE%9E%E7%8E%B04%20%E6%9C%AC%E5%9C%B0%E6%B6%88%E6%81%AF%E8%A1%A8%0A%0A%23%23%23%20%E4%BB%8B%E7%BB%8D%20%26%20%E5%8E%9F%E7%90%86%0A%0A%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%3DA%E7%B3%BB%E7%BB%9F%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%20%2B%20B%E7%B3%BB%E7%BB%9F%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%20%2B%20%E6%B6%88%E6%81%AF%E9%80%9A%E7%9F%A5%3B%0A%E5%87%86%E5%A4%87%3A%20%0AA%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A4%E4%B8%80%E5%BC%A0%E6%B6%88%E6%81%AF%E8%A1%A8log1%2C%E7%8A%B6%E6%80%81%E4%B8%BA%E6%9C%AA%E6%89%A7%E8%A1%8C%2C%0AB%E7%B3%BB%E7%BB%9F%E7%BB%B4%E6%8A%A42%E5%BC%A0%E8%A1%A8%2C%0A%E6%9C%AA%E5%AE%8C%E6%88%90%E8%A1%A8log2%2C%0A%E5%B7%B2%E5%AE%8C%E6%88%90%E8%A1%A8log3%2C%0A%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E7%94%A8%E4%B8%A4%E4%B8%AAtopic%2C%0Atopic1%E6%98%AFA%E7%B3%BB%E7%BB%9F%E9%80%9A%E7%9F%A5B%E8%A6%81%E6%89%A7%E8%A1%8C%E4%BB%BB%E5%8A%A1%E4%BA%86%2C%0Atopic2%E6%98%AFB%E7%B3%BB%E7%BB%9F%E9%80%9A%E7%9F%A5A%E5%B7%B2%E7%BB%8F%E5%AE%8C%E6%88%90%E4%BB%BB%E5%8A%A1%E4%BA%86%2C%0A%0A!%5B6788ded12488beeff631ff0ca075e702.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1910)%0A%0A1.%20%E7%94%A8%E6%88%B7%E5%9C%A8A%E7%B3%BB%E7%BB%9F%E9%87%8C%E9%A2%86%E5%8F%96%E4%BC%98%E6%83%A0%E5%88%B8%2C%E5%B9%B6%E5%BE%80log1%E6%8F%92%E5%85%A5%E4%B8%80%E6%9D%A1%E8%AE%B0%E5%BD%95%0A2.%20%E7%94%B1%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E8%BD%AE%E8%AF%A2log1%2C%E5%8F%91%E6%B6%88%E6%81%AF%E7%BB%99B%E7%B3%BB%E7%BB%9F%0A3.%20B%E7%B3%BB%E7%BB%9F%E6%94%B6%E5%88%B0%E6%B6%88%E6%81%AF%E5%90%8E%2C%E5%85%88%E6%A3%80%E6%9F%A5%E6%98%AF%E5%90%A6%E5%9C%A8log3%E4%B8%AD%E6%89%A7%E8%A1%8C%E8%BF%87%E8%BF%99%E6%9D%A1%E6%B6%88%E6%81%AF%2C%E6%B2%A1%E6%9C%89%E7%9A%84%E8%AF%9D%E6%8F%92%E5%85%A5log2%E8%A1%A8%2C%E5%B9%B6%E8%BF%9B%E8%A1%8C%E5%8F%91%E7%9F%AD%E4%BF%A1%2C%E5%8F%91%E9%80%81%E6%88%90%E5%8A%9F%E5%90%8E%E5%88%A0%E9%99%A4log2%E7%9A%84%E8%AE%B0%E5%BD%95%2C%E6%8F%92%E5%85%A5log3%0A4.%20B%E7%B3%BB%E7%BB%9F%E5%8F%91%E6%B6%88%E6%81%AF%E7%BB%99A%E7%B3%BB%E7%BB%9F%0A5.%20A%E7%B3%BB%E7%BB%9F%E6%A0%B9%E6%8D%AEid%E5%88%A0%E9%99%A4%E8%BF%99%E4%B8%AA%E6%B6%88%E6%81%AF%0A%0A%E5%81%87%E8%AE%BE%E5%87%BA%E7%8E%B0%E7%BD%91%E7%BB%9C%E4%B8%AD%E6%96%AD%E5%92%8C%E7%B3%BB%E7%BB%9F%20Crash%20%E7%AD%89%E9%97%AE%E9%A2%98%E6%97%B6%EF%BC%8C%E4%B8%BA%E4%BA%86%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C%E4%BA%8B%E5%8A%A1%EF%BC%8C%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E9%87%8D%E8%AF%95%E3%80%82%E9%87%8D%E8%AF%95%E6%96%B9%E5%BC%8F%E6%9C%89%EF%BC%9A%0A1.%20%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E6%81%A2%E5%A4%8D%E4%BA%8B%E5%8A%A1%E7%9A%84%E6%89%A7%E8%A1%8C%EF%BC%8C%0A2.%20%E4%BD%BF%E7%94%A8%20MQ%20%E6%9D%A5%E4%BC%A0%E9%80%92%E6%B6%88%E6%81%AF%EF%BC%8CMQ%E5%8F%AF%E4%BB%A5%E4%BF%9D%E8%AF%81%E6%B6%88%E6%81%AF%E8%A2%AB%E6%AD%A3%E7%A1%AE%E6%B6%88%E8%B4%B9%E3%80%82%0A%0A%E4%BC%98%E7%82%B9%EF%BC%9A%E7%AE%80%E5%8D%95%0A%E7%BC%BA%E7%82%B9%EF%BC%9A%E7%A8%8B%E5%BA%8F%E4%BC%9A%E5%87%BA%E7%8E%B0%E6%89%A7%E8%A1%8C%E5%88%B0%E4%B8%80%E5%8D%8A%E7%9A%84%E7%8A%B6%E6%80%81%EF%BC%8C%E9%87%8D%E8%AF%95%E5%88%99%E8%A6%81%E6%B1%82%E6%AF%8F%E4%B8%AA%E6%93%8D%E4%BD%9C%E9%9C%80%E8%A6%81%E5%AE%9E%E7%8E%B0**%E5%B9%82%E7%AD%89%E6%80%A7**%0A%0A%E6%B3%A8%E6%84%8F%EF%BC%9A%E5%88%86%E5%B8%83%E5%BC%8F%E7%B3%BB%E7%BB%9F%E5%AE%9E%E7%8E%B0%E5%B9%82%E7%AD%89%E6%80%A7%E7%9A%84%E6%97%B6%E5%80%99%EF%BC%8C%E8%AE%B0%E5%BE%97%E4%BD%BF%E7%94%A8%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%EF%BC%8C%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%E8%AF%A6%E7%BB%86%E4%BB%8B%E7%BB%8D%E8%A7%81%E6%96%87%E6%9C%AB%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0%0A%0A%23%23%23%20%E5%AE%9E%E7%8E%B0%E5%85%85%E5%80%BC%E9%9C%80%E6%B1%82%0A%0A!%5Bf2d89fc2f83e77febfd121ccc1f3a54c.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1916)%0A%0A%E9%80%9A%E8%BF%87%E6%B6%88%E6%81%AF%E8%A1%A8%EF%BC%8C%E6%8A%8A%E6%96%AD%E5%BC%80%E7%9A%84%E4%BA%8B%E5%8A%A1%E7%BB%A7%E7%BB%AD%E6%89%A7%E8%A1%8C%E4%B8%8B%E5%8E%BB%E3%80%82%0A%0A%0A%23%23%20%E5%AE%9E%E7%8E%B05%20%E8%80%83%E6%8B%89%E7%9A%84%E6%96%B9%E6%A1%88%0A%0A%23%23%23%20%E4%BB%8B%E7%BB%8D%20%26%20%E5%8E%9F%E7%90%86%0A%E8%80%83%E6%8B%89%E7%9A%84%E6%96%B9%E6%A1%88%EF%BC%8C%E5%B0%B1%E6%98%AF%E4%BD%BF%E7%94%A8%E6%9C%AC%E5%9C%B0%E6%B6%88%E6%81%AF%E8%A1%A8%EF%BC%8C%E4%BD%86%E6%98%AF%E5%B0%91%E4%BA%86%E4%B8%A4%E4%B8%AA%E9%87%8D%E8%A6%81%E7%BB%84%E4%BB%B6%EF%BC%88MQ%20%E5%92%8C%20%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%89%EF%BC%8C%E5%86%99%E8%B5%B7%E6%9D%A5%E8%BF%98%E6%98%AF%E6%AF%94%E8%BE%83%E8%BE%9B%E8%8B%A6%E7%9A%84%E3%80%82%0A%0A%E8%80%83%E6%8B%89%E6%96%B9%E6%A1%88%E6%9C%89%E5%A6%82%E4%B8%8B%E7%89%B9%E7%82%B9%EF%BC%9A%0A1.%20Order%20%E8%A1%A8%E6%89%BF%E6%8B%85%E4%BA%86%E6%B6%88%E6%81%AF%E8%A1%A8%E5%8A%9F%E8%83%BD%0A2.%20%E6%9C%8D%E5%8A%A1%E4%B9%8B%E9%97%B4%E4%BD%BF%E7%94%A8%20http%20%E9%80%9A%E4%BF%A1%EF%BC%8C%E6%89%80%E4%BB%A5%E7%A2%B0%E5%88%B0%E9%97%AE%E9%A2%98%E8%A6%81%E4%BE%9D%E8%B5%96%E5%AE%9A%E6%97%B6%E4%BB%BB%E5%8A%A1%E5%8F%91%E5%B8%83%E8%A1%A5%E5%8D%95%E9%87%8D%E8%AF%95%0A3.%20%E6%B2%A1%E6%9C%89%E4%BD%BF%E7%94%A8%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%8C%E5%B9%82%E7%AD%89%E6%80%A7%E7%9A%84%E5%AE%9E%E7%8E%B0%E6%AF%94%E8%BE%83%E5%9B%B0%E9%9A%BE%E3%80%82%0A%0A%23%23%23%20%E5%AE%9E%E7%8E%B0%E5%85%85%E5%80%BC%E9%9C%80%E6%B1%82%0A%0A!%5B7b6cccee174c7389cd9d6a777a1fc409.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1917)%0A%0A%E9%9A%BE%E7%82%B9%3A%0A-%20%E5%AE%9E%E7%8E%B0%E5%B9%82%E7%AD%89%E6%80%A7%E7%9A%84%E8%A6%81%E6%B1%82%E5%A4%AA%E9%AB%98%EF%BC%8C%E5%9F%BA%E6%9C%AC%E8%A6%81%E6%B1%82%E6%89%80%E6%9C%89%E6%93%8D%E4%BD%9C%E9%83%BD%E9%9C%80%E8%A6%81%E5%AE%9E%E7%8E%B0%E5%B9%82%E7%AD%89%E6%80%A7%2C%E4%BE%8B%E5%A6%82%E6%9B%B4%E6%96%B0%E4%BD%99%E9%A2%9D%E6%93%8D%E4%BD%9C%EF%BC%8C%E8%A6%81%E9%AB%98%E6%95%88%E6%9B%B4%E6%96%B0%EF%BC%8C%E7%AE%80%E5%8D%95%E7%9A%84%E5%8A%9E%E6%B3%95%E6%98%AF%E4%BD%BF%E7%94%A8%E4%B9%90%E8%A7%82%E9%94%81%EF%BC%8C%E4%BD%86%E6%98%AF%E8%A6%81%E5%90%8C%E6%97%B6%E5%85%BC%E9%A1%BE%E5%B9%82%E7%AD%89%E6%80%A7%E7%9A%84%E8%AF%9D%EF%BC%8C%E4%B9%90%E8%A7%82%E9%94%81%E5%B0%B1%E4%B8%8D%E5%A4%9F%E7%94%A8%E4%BA%86%E3%80%82%0A%0A-%20%E7%A8%8B%E5%BA%8F%E5%9C%A8%E4%BB%BB%E4%B8%80%E4%B8%80%E6%AD%A5%E6%96%AD%E5%BC%80%EF%BC%8C%E9%83%BD%E9%9C%80%E8%A6%81%E9%87%8D%E6%96%B0%E8%BF%90%E8%A1%8C%E8%B5%B7%E6%9D%A5%EF%BC%8C%E8%A1%A5%E5%8D%95%E7%A8%8B%E5%BA%8F%E4%BC%9A%E5%BE%88%E9%9A%BE%E5%86%99%EF%BC%88%E7%AE%80%E5%8D%95%E7%9A%84%E4%B8%9A%E5%8A%A1%E8%BF%98%E5%A5%BD%EF%BC%8C%E5%A4%8D%E6%9D%82%E4%B8%9A%E5%8A%A1%E5%B0%B1%E4%BC%9A%E6%B7%B7%E4%B9%B1%E4%BA%86%EF%BC%89%0A%0A%E6%94%B9%E8%BF%9B%E5%BB%BA%E8%AE%AE%EF%BC%9A%0A-%20%E6%9C%8D%E5%8A%A1%E7%9B%B4%E6%8E%A5%E4%BD%BF%E7%94%A8%20mq%20%E9%80%9A%E4%BF%A1%EF%BC%8C%E6%9C%8D%E5%8A%A1%E5%BC%82%E5%B8%B8%E9%9C%80%E8%A6%81%E9%87%8D%E8%AF%95%E6%B6%88%E8%B4%B9%E3%80%82%0A-%20%E4%BD%BF%E7%94%A8%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%EF%BC%8C%E9%80%9A%E8%BF%87%E6%9C%AC%E5%9C%B0%E4%BA%8B%E5%8A%A1%EF%BC%8C%E5%8F%AF%E4%BB%A5%E5%8F%AA%E7%A8%8B%E5%BA%8F%E5%BC%80%E5%A7%8B%E5%A4%84%E5%88%A4%E6%96%AD%E9%87%8D%E5%A4%8D%EF%BC%8C%E7%AE%80%E5%8C%96%E5%B9%82%E7%AD%89%E6%80%A7%E7%9A%84%E5%AE%9E%E7%8E%B0%E9%80%BB%E8%BE%91%0A%0A%E5%AE%9E%E9%99%85%E4%B8%8A%E5%B0%B1%E6%98%AF%E5%BE%80%E4%B8%8A%E4%B8%80%E4%B8%AA%E5%AE%9E%E7%8E%B04%E4%B8%8A%E8%B5%B0%0A%0A%23%23%20%E6%80%BB%E7%BB%93%0A%E6%88%91%E4%BB%AC%E5%85%88%E5%AF%B9%E8%BF%99%E4%BA%9B%E5%AE%9E%E7%8E%B0%E6%96%B9%E6%A1%88%E8%BF%9B%E8%A1%8C%E4%B8%80%E4%B8%AA%E6%80%BB%E7%BB%93%EF%BC%9A%0A%0A%7C%20%E5%9F%BA%E7%A1%80%E5%8E%9F%E7%90%86%20%20%20%20%20%20%7C%20%20%20%20%E5%AE%9E%E7%8E%B0%20%7C%20%E4%BC%98%E5%8A%BF%20%20%7C%20%E5%BF%85%E8%A6%81%E5%89%8D%E6%8F%90%20%20%7C%0A%7C%20%3A--------%20%7C%20--------%3A%7C%20%3A--%3A%20%7C%20%3A--%3A%20%7C%0A%7C%202PC%20%20%7C%20Seata%20%7C%20%E7%AE%80%E5%8D%95%20%20%20%7C%20%E5%85%B3%E7%B3%BB%E5%9E%8B%E6%95%B0%E6%8D%AE%E5%BA%93%20%7C%0A%7C%202PC%20%20%20%20%20%7C%20TCC%20%7C%20%20%E4%B8%8D%E4%BE%9D%E8%B5%96%E5%85%B3%E7%B3%BB%E7%B3%BB%E6%95%B0%E6%8D%AE%E5%BA%93%20%20%7C%20%E5%AE%9E%E7%8E%B0%20TCC%20%E6%8E%A5%E5%8F%A3%20%7C%0A%7C%20%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7%20%20%20%20%20%20%7C%20%20%20%20%E4%BA%8B%E5%8A%A1%E6%B6%88%E6%81%AF%20%7C%20%E9%AB%98%E6%80%A7%E8%83%BD%20%20%7C%20%E5%AE%9E%E7%8E%B0%E4%BA%8B%E5%8A%A1%E6%A3%80%E6%9F%A5%E6%8E%A5%E5%8F%A3%20%7C%0A%7C%20%E6%9C%80%E7%BB%88%E4%B8%80%E8%87%B4%E6%80%A7%20%20%20%20%20%20%7C%20%20%20%20%E6%9C%AC%E5%9C%B0%E6%B6%88%E6%81%AF%E8%A1%A8%20%7C%20%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%20%20%7C%20%E4%BE%B5%E5%85%A5%E4%B8%9A%E5%8A%A1%EF%BC%8C%E6%8E%A5%E5%8F%A3%E9%9C%80%E8%A6%81%E5%B9%82%E7%AD%89%E6%80%A7%20%7C%0A%0A%E5%90%84%E4%B8%AA%E6%96%B9%E6%A1%88%E6%9C%89%E8%87%AA%E5%B7%B1%E7%9A%84%E4%BC%98%E5%8A%A3%EF%BC%8C%E5%AE%9E%E9%99%85%E4%BD%BF%E7%94%A8%E8%BF%87%E7%A8%8B%E4%B8%AD%EF%BC%8C%E6%88%91%E4%BB%AC%E8%BF%98%E6%98%AF%E9%9C%80%E8%A6%81%E6%A0%B9%E6%8D%AE%E6%83%85%E5%86%B5%E6%9D%A5%E9%80%89%E6%8B%A9%E4%B8%8D%E5%90%8C%E4%BA%8B%E5%8A%A1%E6%96%B9%E6%A1%88%E6%9D%A5%E7%81%B5%E6%B4%BB%E7%BB%84%E5%90%88%E3%80%82%0A%0A%E4%BE%8B%E5%A6%82%E5%AD%98%E5%9C%A8%E6%9C%8D%E5%8A%A1%E6%A8%A1%E5%9D%97A%20%E3%80%81B%E3%80%81%20C%E3%80%82A%E6%A8%A1%E5%9D%97%E6%98%AFmysql%E4%BD%9C%E4%B8%BA%E6%95%B0%E6%8D%AE%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%EF%BC%8CB%E6%A8%A1%E5%9D%97%E6%98%AF%E5%9F%BA%E4%BA%8Eredis%E4%BD%9C%E4%B8%BA%E6%95%B0%E6%8D%AE%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%EF%BC%8CC%E6%A8%A1%E5%9D%97%E6%98%AF%E5%9F%BA%E4%BA%8Emongo%E4%BD%9C%E4%B8%BA%E6%95%B0%E6%8D%AE%E6%BA%90%E7%9A%84%E6%9C%8D%E5%8A%A1%E3%80%82%E8%8B%A5%E9%9C%80%E8%A6%81%E8%A7%A3%E5%86%B3%E4%BB%96%E4%BB%AC%E7%9A%84%E4%BA%8B%E5%8A%A1%E4%B8%80%E8%87%B4%E6%80%A7%E5%B0%B1%E9%9C%80%E8%A6%81%E9%92%88%E5%AF%B9%E4%B8%8D%E5%90%8C%E7%9A%84%E8%8A%82%E7%82%B9%E9%87%87%E7%94%A8%E4%B8%8D%E5%90%8C%E7%9A%84%E6%96%B9%E6%A1%88%EF%BC%8C%E5%B9%B6%E4%B8%94%E7%BB%9F%E4%B8%80%E5%8D%8F%E8%B0%83%E5%AE%8C%E6%88%90%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%E7%9A%84%E5%A4%84%E7%90%86%E3%80%82%0A%0A!%5B0f6dbd32fdf49943dfaff1243b40ad2b.png%5D(evernotecid%3A%2F%2FD9B9AAE1-DBE2-4BC6-B259-F119B7D09197%2Fappyinxiangcom%2F946845%2FENResource%2Fp1913)%0A%0A%E6%96%B9%E6%A1%88%EF%BC%9A%E5%B0%86A%E6%A8%A1%E5%9D%97%E9%87%87%E7%94%A8%20Seata%20%E6%A8%A1%E5%BC%8F%E3%80%81B%2FC%E9%87%87%E7%94%A8TCC%E6%A8%A1%E5%BC%8F%E5%B0%B1%E8%83%BD%E5%AE%8C%E7%BE%8E%E8%A7%A3%E5%86%B3%E3%80%82%0A%0A%23%23%20%E5%8F%82%E8%80%83%E6%96%87%E7%AB%A0%0A%5BRocketMQ%204.3%20%E6%AD%A3%E5%BC%8F%E5%8F%91%E5%B8%83%EF%BC%8C%E6%94%AF%E6%8C%81%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%5D(https%3A%2F%2Fwww.infoq.cn%2Farticle%2F2018%2F08%2Frocketmq-4.3-release)%0A%5BSeata%5D(https%3A%2F%2Fgithub.com%2Fseata%2Fseata)%0A%5Btxlcn%5D(https%3A%2F%2Fwww.txlcn.org%2Fzh-cn%2Fdocs%2Fpreface.html)%0A%5B%E5%88%86%E5%B8%83%E5%BC%8F%E4%BA%8B%E5%8A%A1%20CAP%20%E7%90%86%E8%A7%A3%E8%AE%BA%E8%AF%81%20%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88%5D(https%3A%2F%2Fblog.csdn.net%2Fweixin_40533111%2Farticle%2Fdetails%2F85069536)%0A%5B%E5%86%8D%E6%9C%89%E4%BA%BA%E9%97%AE%E4%BD%A0%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81%EF%BC%8C%E8%BF%99%E7%AF%87%E6%96%87%E7%AB%A0%E6%89%94%E7%BB%99%E4%BB%96%5D(https%3A%2F%2Fjuejin.im%2Fpost%2F5bbb0d8df265da0abd3533a5)%0A%0A</center>"
  },
  {
    "title": "如何 parse 一个 typescript interface",
    "created": "2018-11-14T18:54:37.000Z",
    "updated": "2018-11-14T18:56:49.000Z",
    "tags": [
      "Node",
      "ast",
      "typescript",
      "编程相关",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=435fa954-6e16-4fee-b9fe-13f957637a30&notebook=blog)</del>\n\n`blog` `编程相关` `Node` `posts` `编程相关` `typescript` `ast`\n\n## 目标\n\n有如下一个接口定义，我们想把它的结构 parse 出来，知道每个字段的定义和注释，方便我们生成文档\n\n    import {IBanner} from './base/IBanner' import {IProductGroup} from './base/IProductGroup'"
  },
  {
    "title": "AI 考拉 2018 开源汇总（Node 基础架构）",
    "created": "2018-11-07T01:41:16.000Z",
    "updated": "2018-11-07T01:42:13.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=e8321472-725b-48c8-8d1c-2f98f75bde70&notebook=blog)</del>\n\n`blog` `编程相关` `Node` `posts` `编程相关`\n\n## 前言\n\n2018 年，考拉开始对现有项目的常用的工具库进行整理，包含日期处理，数字处理，logger 等常用工具，并打包成 npm module，方便各个项目使用。\n\n## 代码风格\n\n在开发工具库之前，我们统一了编码标准\n\n### JavaScript 代码规范\n\n前端 browser 通用  \n统一使用 [eslint-config-klg](https://github.com/kaolalicai/eslint-config-klg) ，基于 [eslint-config-standard](https://github.com/standard/eslint-config-standard) 封装  \n安装说明见文档\n\n### Typescript 代码规范\n\n统一使用 [tslint-config-klg](https://github.com/kaolalicai/tslint-config-klg) ，基于 [tslint-config-standard](https://github.com/standard/tslint-config-standard) 封装\n\n安装说明见文档\n\n## 脚手架\n\n我们也提供了脚手架 [klg-init](https://github.com/kaolalicai/egg-init)，来方便大家启动一个新项目。  \n安装好这个工具后，一键生成项目模板\n\n    $ klg-init dest [klg-init] fetching npm info of klg-init-config ? Please select a boilerplate type (Use arrow keys)  ────────────── ❯ module - npm 库项目模板  model - mongoose model 模板 todo  project - JavaScript 后端项目模板 todo  project-ts - Typescript 后端项目模板 todo  admin - 管理后台项目模板 todo"
  },
  {
    "title": "API 接口与 Typescript Interface",
    "created": "2018-09-26T03:19:45.000Z",
    "updated": "2018-09-27T00:20:13.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=8989ed54-3b86-4057-b1be-d67950ca3594&notebook=blog)</del>\n\n`blog` `编程相关` `Node` `posts` `编程相关`\n\n## 前言\n\nInterface 就是接口，在 typescript 用于类型限定。  \n在 Node 项目中，我们常用 apidoc 来定义接口文档。  \n那么，他们俩是否能结合起来呢？\n\n## apidoc 的痛点\n\n[apidoc](http://apidocjs.com/) Inline Documentation for RESTful web APIs，使用起来非常方便，直接在 api 上添加注释，就可以生成可视化的文档。\n\n但是，在实际业务中，我们有些接口比较复杂，定义返回值是一件比较痛苦的事情，如图：\n\n<en-media longdesc=\"./1537959979248.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"4a622c7264ac7c7f335b9cc20a6c4666\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n而且，过了一段时间之后，出于惰性，开发人员会放弃更新 API 文档，导致文档落后于实际。\n\n## API Interface\n\n### API 未定义的问题\n\n在 js 项目中，api 返回结构一般是无法清晰地看出来的，你得跑一下接口，才知道会返回什么，或者仔细看一遍代码。这种情况下，开发人员维护 API 会面临以下问题：\n\n*   文档缺失：接口文档缺少对某个字段的定义，不知道该字段作何用处\n*   字段混乱：明明是一个字段，可能在 接口 A 是叫 amount， 在接口 B 却叫 number\n*   重复定义：多个接口中都用到一个叫 Banner 的东西，需要在每个接口文档中定义一遍，稍有改动，需要更改多处\n\n### 使用 interface 的好处\n\n所以可以尝试使用 typescript 的 interface 来定义 API 的返回值结构，一个接口对应一个 interface。\n\n<en-media longdesc=\"./1538033991774.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"355a0851ff4f1e04c907447a0e1a425b\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n假设一个 api 是 product info ，定义结构如下：\n\n    /**  * 产品明细  */ export interface IProductInfo {  /**  * 基础利息  */  baseRate: number  /**  * 加息  */  bonusRate: number  /**  * 加息提示  */  bonusRateStr: string } \n\n另一个 api 是 product list ，可以很方便地进行复用：\n\n    /**  * 产品列表  */ export interface IProductList {  list: Array<IProductInfo> } \n\n这些接口定义也可以共享给前端（前端也用 typescript 的话）\n\n## apidoc + interface\n\n很多时候，你的痛点其实也是其他人的痛点，所以就有了开源项目，通过搜寻，我们可以找到一个 apidoc 的插件 [apidoc-plugin-ts](https://github.com/tgreyjs/apidoc-plugin-ts)，这个插件可以根据 interface 的定义帮你生成 apidoc 需要的 @apiSuccess 内容。  \n定义一个接口：\n\n    filename: ./employers.ts"
  },
  {
    "title": "Node.js APM 软件调研报告",
    "created": "2018-07-18T00:27:34.000Z",
    "updated": "2018-07-18T00:32:53.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=548c0227-8829-444b-b893-48851ac47ac0&notebook=blog)</del>\n\n`blog` `编程相关` `Node` `posts` `编程相关`\n\n## 前言\n\n最近做 Node 服务的性能优化工作，在 2016年3月，我写过 [Node 性能优化](http://myfjdthink.com/2016/03/22/node-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/) 这篇文章， 讲解了常见的 Node 服务缓慢原因，还介绍了 内存泄露 和 cpu profile 的知识。\n\n这一次，是侧重中应用运行信息收集这一块，根据同事 Leo 的介绍，我对一些支持 Node.js 的 APM 软件做了一次调研。\n\n在分别介绍每个软件之前，我要先阐述我使用这些软件的目的：它可以发现慢的 http 请求，并且可以查看当时的 Node 服务状态（包括内存 CPU 占用状态），database 状态（这里是 mongodb），帮助 dev 准确分析出请求处理缓慢的原因。\n\n下文的体验报告将以此目标为标准进行评价。\n\n## 软件列表\n\n本次体验的 APM 软件有：\n\n<table style=\"border-collapse: collapse; border-spacing: 0; margin-bottom: 20px; line-height: 1.6;\">\n\n<tbody style=\"line-height: 1.6;\">\n\n<tr style=\"line-height: 1.6; font-weight: bold;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">名称</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">介绍</td>\n\n<td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">开源/收费情况</td>\n\n</tr>\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">atatus</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">支持多种语言，包括前端</td>\n\n<td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">不开源，收费</td>\n\n</tr>\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">newrelic</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">支持多种语言，包括前端</td>\n\n<td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">开源，收费</td>\n\n</tr>\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">keymetrics</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">pm2, Node 应用管理器</td>\n\n<td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">开源，限额免费</td>\n\n</tr>\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">Pandora.js</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">阿里出品，Node 应用管理器</td>\n\n<td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">开源，免费（自建服务）</td>\n\n</tr>\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">alinode</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">Node 底层的监控</td>\n\n<td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">开源，免费（阿里云上配置实例）</td>\n\n</tr>\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">statsd + graphite + grafana</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">监控三件套，开发自由度高</td>\n\n<td align=\"center\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">开源，自建服务</td>\n\n</tr>\n\n</tbody>\n\n</table>\n\n## atatus\n\natatus 提供了 npm 工具包 [atatus-node](https://www.npmjs.com/package/atatus-node) 用于监控数据收集，具体配置见[官方文档](https://www.atatus.com/getting-started/node-js)。\n\n使用报告：不是 100 % 的采样率，没有收集到官网宣传的各种维度的信息，使用 Koa 框架，基本上只能看到总的 http response time。\n\n<en-media longdesc=\"./1531900063055.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"1bfdf40417468698fa58879c4fbb73cb\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n## newrelic\n\n网址 [https://newrelic.com/](https://newrelic.com/) ，和 atatus 基本相同，也提供 npm 工具包 newrelic。\n\n<en-media longdesc=\"./1531900145317.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"e8ccb45ec957adbcf5475736b16663de\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n## keymetrics\n\n偏向应用生命周期管理，可以看到 Node 服务的 cpu 内存等占用情况，有错误（crash）收集功能，国内访问很卡。\n\n## Pandora.js\n\nPandora.js 是一个 Node.js 应用监控管理器。它集成了多种类型的能力诸如：监控、链路追踪、调试、进程管理等等。\n\n它是个很有趣的东西，总结来说是它很强大但是还不够成熟，包括 Pandora 自身和整个 Node 生态都不成熟。\n\n### 应用管理\n\n可以对标 PM2，不赘述。\n\n### 应用度量\n\n有操作系统指标，包含 Load、CPU、内存、磁盘、网络、TCP 等各种指标；  \n有 Node.js 指标（内存占用）；  \n还可以自定义指标，类似 statsd 做的事情，但是后续的存储和展示嘛，非常简单，没有 statsd + graphite + grafana 好用。\n\n### 链路追踪\n\n这个是 Pandora 提供的比较“先进”的功能，链路追踪理论上可以分析出一个 http 哪里耗时多，例如一个 get 请求，做的事情有，查询 db ，调用 第三方服务等。链路追踪会记录每一个环节的耗时：\n\n<en-media longdesc=\"./1531901160806.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"e35f22bce0f8d9a0e650fe8e596d224f\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n链路追踪的实现依赖了 Node 的一个实验性特性 async_hooks，因为是新特性，目前还有很多问题没有解决，例如 mongoose 和 superagent 两个工具包的 Promise 实现方式会导致 async_hooks，具体可以见我在 Pandora 提的 [issue](https://github.com/midwayjs/pandora/issues/221) ，也就是说，如果你刚好用了这两个框架，Pandora 链路追踪就失效了。\n\n## alinode\n\nNode.js 性能平台 [https://cn.aliyun.com/product/nodejs](https://cn.aliyun.com/product/nodejs) ，alinode 是在 node runtime 层面做的应用信息收集，而不是上述各个框架在应用层进行信息收集，所以 alinode 可以监控到 进程数据，堆快照、堆时间线、CPU Profile、GC Trace 等非常底层的信息，如果你的应用性能瓶颈在 Node 服务本身，使用该工具会有很大的帮助，如果你的应用性能瓶颈在 DB，那应该是用 DB 监控工具。\n\n## statsd + graphite + grafana\n\n这个三件套有意思的是，监控指标是开发自己定义的，考拉用这三件套监控请求处理时间，记录每个请求的处理时间  \n这样在 grafana 上可以快速看出当前应用的请求量与趋势，已经快速分析哪些接口缓慢。\n\n接口访问量的趋势变化：\n\n<en-media longdesc=\"./1531901882642.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"c204e17aca6a0f163ea938dfeb3995c3\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n处理最慢的接口：\n\n<en-media longdesc=\"./1531902040338.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"ff4f61655f11ccd404513e0a04b85ee1\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n这套工具的优势在于 grafana， 提供了非常直观的图表。  \n这套工具的搭建方法我之前也写过文章，可以看看 [快速搭建一个监控服务](http://myfjdthink.com/2016/01/08/%E5%BF%AB%E9%80%9F%E6%90%AD%E5%BB%BA%E4%B8%80%E4%B8%AA%E7%9B%91%E6%8E%A7%E6%9C%8D%E5%8A%A1/)\n\n## 总结\n\n回到我们的目标“帮助 dev 准确分析出请求处理缓慢的原因”，  \n理论上最贴合这个目标的是 Pandora.js ，但是我们还需要再等等，等它成熟。  \n最简单而强大的是 statsd + graphite + grafana 三件套，不用考虑 atatus newrelic 等。  \n如果你使用 Node 做高并发服务，alinode 将会很有用。\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">@%28blog%29%5B%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%2C%20posts%2C%20%u7F16%u7A0B%u76F8%u5173%5D%0A%0A%23%20Node.js%20APM%20%u8F6F%u4EF6%u8C03%u7814%u62A5%u544A%0A%0A%23%23%20%u524D%u8A00%0A%u6700%u8FD1%u505A%20Node%20%u670D%u52A1%u7684%u6027%u80FD%u4F18%u5316%u5DE5%u4F5C%uFF0C%u5728%202016%u5E743%u6708%uFF0C%u6211%u5199%u8FC7%20%5BNode%20%u6027%u80FD%u4F18%u5316%5D%28http%3A//myfjdthink.com/2016/03/22/node-%25E6%2580%25A7%25E8%2583%25BD%25E4%25BC%2598%25E5%258C%2596/%29%20%u8FD9%u7BC7%u6587%u7AE0%uFF0C%20%u8BB2%u89E3%u4E86%u5E38%u89C1%u7684%20Node%20%u670D%u52A1%u7F13%u6162%u539F%u56E0%uFF0C%u8FD8%u4ECB%u7ECD%u4E86%20%u5185%u5B58%u6CC4%u9732%20%u548C%20cpu%20profile%20%u7684%u77E5%u8BC6%u3002%0A%0A%u8FD9%u4E00%u6B21%uFF0C%u662F%u4FA7%u91CD%u4E2D%u5E94%u7528%u8FD0%u884C%u4FE1%u606F%u6536%u96C6%u8FD9%u4E00%u5757%uFF0C%u6839%u636E%u540C%u4E8B%20Leo%20%u7684%u4ECB%u7ECD%uFF0C%u6211%u5BF9%u4E00%u4E9B%u652F%u6301%20Node.js%20%u7684%20APM%20%u8F6F%u4EF6%u505A%u4E86%u4E00%u6B21%u8C03%u7814%u3002%0A%0A%u5728%u5206%u522B%u4ECB%u7ECD%u6BCF%u4E2A%u8F6F%u4EF6%u4E4B%u524D%uFF0C%u6211%u8981%u5148%u9610%u8FF0%u6211%u4F7F%u7528%u8FD9%u4E9B%u8F6F%u4EF6%u7684%u76EE%u7684%uFF1A%u5B83%u53EF%u4EE5%u53D1%u73B0%u6162%u7684%20http%20%u8BF7%u6C42%uFF0C%u5E76%u4E14%u53EF%u4EE5%u67E5%u770B%u5F53%u65F6%u7684%20Node%20%u670D%u52A1%u72B6%u6001%uFF08%u5305%u62EC%u5185%u5B58%20CPU%20%u5360%u7528%u72B6%u6001%uFF09%uFF0Cdatabase%20%u72B6%u6001%uFF08%u8FD9%u91CC%u662F%20mongodb%uFF09%uFF0C%u5E2E%u52A9%20dev%20%u51C6%u786E%u5206%u6790%u51FA%u8BF7%u6C42%u5904%u7406%u7F13%u6162%u7684%u539F%u56E0%u3002%0A%0A%u4E0B%u6587%u7684%u4F53%u9A8C%u62A5%u544A%u5C06%u4EE5%u6B64%u76EE%u6807%u4E3A%u6807%u51C6%u8FDB%u884C%u8BC4%u4EF7%u3002%0A%0A%23%23%20%u8F6F%u4EF6%u5217%u8868%0A%u672C%u6B21%u4F53%u9A8C%u7684%20APM%20%u8F6F%u4EF6%u6709%uFF1A%0A%0A%7C%20%u540D%u79F0%20%20%20%20%20%20%7C%20%20%20%20%u4ECB%u7ECD%20%7C%20%u5F00%u6E90/%u6536%u8D39%u60C5%u51B5%20%7C%0A%7C%20%3A--------%20%7C%20--------%3A%7C%20%3A--%3A%20%7C%0A%7C%20atatus%20%20%7C%20%u652F%u6301%u591A%u79CD%u8BED%u8A00%uFF0C%u5305%u62EC%u524D%u7AEF%20%7C%20%20%u4E0D%u5F00%u6E90%uFF0C%u6536%u8D39%20%20%20%7C%20%0A%7C%20newrelic%20%20%20%20%20%7C%20%20%20%u652F%u6301%u591A%u79CD%u8BED%u8A00%uFF0C%u5305%u62EC%u524D%u7AEF%20%7C%20%20%u5F00%u6E90%uFF0C%u6536%u8D39%20%20%7C%0A%7C%20keymetrics%20%20%20%20%20%20%7C%20%20%20%20pm2%2C%20Node%20%u5E94%u7528%u7BA1%u7406%u5668%20%7C%20%u5F00%u6E90%uFF0C%u9650%u989D%u514D%u8D39%20%20%7C%0A%7C%20Pandora.js%20%20%20%20%20%20%7C%20%20%20%20%u963F%u91CC%u51FA%u54C1%uFF0CNode%20%u5E94%u7528%u7BA1%u7406%u5668%20%7C%20%u5F00%u6E90%uFF0C%u514D%u8D39%uFF08%u81EA%u5EFA%u670D%u52A1%uFF09%20%20%7C%0A%7C%20alinode%20%20%20%20%20%20%7C%20%20%20Node%20%u5E95%u5C42%u7684%u76D1%u63A7%20%7C%20%u5F00%u6E90%uFF0C%u514D%u8D39%uFF08%u963F%u91CC%u4E91%u4E0A%u914D%u7F6E%u5B9E%u4F8B%uFF09%20%20%7C%0A%7C%20statsd%20+%20graphite%20+%20grafana%20%20%20%20%20%20%7C%20%20%u76D1%u63A7%u4E09%u4EF6%u5957%uFF0C%u5F00%u53D1%u81EA%u7531%u5EA6%u9AD8%20%7C%20%u5F00%u6E90%uFF0C%u81EA%u5EFA%u670D%u52A1%20%20%7C%0A%0A%0A%23%23%20atatus%0Aatatus%20%u63D0%u4F9B%u4E86%20npm%20%u5DE5%u5177%u5305%20%5Batatus-node%5D%28https%3A//www.npmjs.com/package/atatus-node%29%20%u7528%u4E8E%u76D1%u63A7%u6570%u636E%u6536%u96C6%uFF0C%u5177%u4F53%u914D%u7F6E%u89C1%5B%u5B98%u65B9%u6587%u6863%5D%28https%3A//www.atatus.com/getting-started/node-js%29%u3002%0A%0A%u4F7F%u7528%u62A5%u544A%uFF1A%u4E0D%u662F%20100%20%25%20%u7684%u91C7%u6837%u7387%uFF0C%u6CA1%u6709%u6536%u96C6%u5230%u5B98%u7F51%u5BA3%u4F20%u7684%u5404%u79CD%u7EF4%u5EA6%u7684%u4FE1%u606F%uFF0C%u4F7F%u7528%20Koa%20%u6846%u67B6%uFF0C%u57FA%u672C%u4E0A%u53EA%u80FD%u770B%u5230%u603B%u7684%20http%20response%20time%u3002%0A%0A%21%5BAlt%20text%5D%28./1531900063055.png%29%0A%0A%23%23%20newrelic%0A%u7F51%u5740%20https%3A//newrelic.com/%20%uFF0C%u548C%20atatus%20%u57FA%u672C%u76F8%u540C%uFF0C%u4E5F%u63D0%u4F9B%20npm%20%u5DE5%u5177%u5305%20newrelic%u3002%0A%21%5BAlt%20text%5D%28./1531900145317.png%29%0A%0A%0A%23%23%20keymetrics%0A%u504F%u5411%u5E94%u7528%u751F%u547D%u5468%u671F%u7BA1%u7406%uFF0C%u53EF%u4EE5%u770B%u5230%20Node%20%u670D%u52A1%u7684%20cpu%20%u5185%u5B58%u7B49%u5360%u7528%u60C5%u51B5%uFF0C%u6709%u9519%u8BEF%uFF08crash%uFF09%u6536%u96C6%u529F%u80FD%uFF0C%u56FD%u5185%u8BBF%u95EE%u5F88%u5361%u3002%0A%0A%23%23%20Pandora.js%0APandora.js%20%u662F%u4E00%u4E2A%20Node.js%20%u5E94%u7528%u76D1%u63A7%u7BA1%u7406%u5668%u3002%u5B83%u96C6%u6210%u4E86%u591A%u79CD%u7C7B%u578B%u7684%u80FD%u529B%u8BF8%u5982%uFF1A%u76D1%u63A7%u3001%u94FE%u8DEF%u8FFD%u8E2A%u3001%u8C03%u8BD5%u3001%u8FDB%u7A0B%u7BA1%u7406%u7B49%u7B49%u3002%0A%0A%u5B83%u662F%u4E2A%u5F88%u6709%u8DA3%u7684%u4E1C%u897F%uFF0C%u603B%u7ED3%u6765%u8BF4%u662F%u5B83%u5F88%u5F3A%u5927%u4F46%u662F%u8FD8%u4E0D%u591F%u6210%u719F%uFF0C%u5305%u62EC%20Pandora%20%u81EA%u8EAB%u548C%u6574%u4E2A%20Node%20%u751F%u6001%u90FD%u4E0D%u6210%u719F%u3002%0A%0A%23%23%23%20%u5E94%u7528%u7BA1%u7406%0A%u53EF%u4EE5%u5BF9%u6807%20PM2%uFF0C%u4E0D%u8D58%u8FF0%u3002%0A%0A%23%23%23%20%u5E94%u7528%u5EA6%u91CF%0A%u6709%u64CD%u4F5C%u7CFB%u7EDF%u6307%u6807%uFF0C%u5305%u542B%20Load%u3001CPU%u3001%u5185%u5B58%u3001%u78C1%u76D8%u3001%u7F51%u7EDC%u3001TCP%20%u7B49%u5404%u79CD%u6307%u6807%uFF1B%0A%u6709%20Node.js%20%u6307%u6807%uFF08%u5185%u5B58%u5360%u7528%uFF09%uFF1B%0A%u8FD8%u53EF%u4EE5%u81EA%u5B9A%u4E49%u6307%u6807%uFF0C%u7C7B%u4F3C%20statsd%20%u505A%u7684%u4E8B%u60C5%uFF0C%u4F46%u662F%u540E%u7EED%u7684%u5B58%u50A8%u548C%u5C55%u793A%u561B%uFF0C%u975E%u5E38%u7B80%u5355%uFF0C%u6CA1%u6709%20statsd%20+%20graphite%20+%20grafana%20%u597D%u7528%u3002%0A%0A%23%23%23%20%u94FE%u8DEF%u8FFD%u8E2A%0A%u8FD9%u4E2A%u662F%20Pandora%20%u63D0%u4F9B%u7684%u6BD4%u8F83%u201C%u5148%u8FDB%u201D%u7684%u529F%u80FD%uFF0C%u94FE%u8DEF%u8FFD%u8E2A%u7406%u8BBA%u4E0A%u53EF%u4EE5%u5206%u6790%u51FA%u4E00%u4E2A%20http%20%u54EA%u91CC%u8017%u65F6%u591A%uFF0C%u4F8B%u5982%u4E00%u4E2A%20get%20%u8BF7%u6C42%uFF0C%u505A%u7684%u4E8B%u60C5%u6709%uFF0C%u67E5%u8BE2%20db%20%uFF0C%u8C03%u7528%20%u7B2C%u4E09%u65B9%u670D%u52A1%u7B49%u3002%u94FE%u8DEF%u8FFD%u8E2A%u4F1A%u8BB0%u5F55%u6BCF%u4E00%u4E2A%u73AF%u8282%u7684%u8017%u65F6%uFF1A%0A%0A%21%5BAlt%20text%5D%28./1531901160806.png%29%0A%0A%u94FE%u8DEF%u8FFD%u8E2A%u7684%u5B9E%u73B0%u4F9D%u8D56%u4E86%20Node%20%u7684%u4E00%u4E2A%u5B9E%u9A8C%u6027%u7279%u6027%20async_hooks%uFF0C%u56E0%u4E3A%u662F%u65B0%u7279%u6027%uFF0C%u76EE%u524D%u8FD8%u6709%u5F88%u591A%u95EE%u9898%u6CA1%u6709%u89E3%u51B3%uFF0C%u4F8B%u5982%20mongoose%20%u548C%20superagent%20%u4E24%u4E2A%u5DE5%u5177%u5305%u7684%20Promise%20%u5B9E%u73B0%u65B9%u5F0F%u4F1A%u5BFC%u81F4%20async_hooks%uFF0C%u5177%u4F53%u53EF%u4EE5%u89C1%u6211%u5728%20Pandora%20%u63D0%u7684%20%5Bissue%5D%28https%3A//github.com/midwayjs/pandora/issues/221%29%20%uFF0C%u4E5F%u5C31%u662F%u8BF4%uFF0C%u5982%u679C%u4F60%u521A%u597D%u7528%u4E86%u8FD9%u4E24%u4E2A%u6846%u67B6%uFF0CPandora%20%u94FE%u8DEF%u8FFD%u8E2A%u5C31%u5931%u6548%u4E86%u3002%0A%0A%23%23%20alinode%0ANode.js%20%u6027%u80FD%u5E73%u53F0%20https%3A//cn.aliyun.com/product/nodejs%20%uFF0Calinode%20%u662F%u5728%20%20node%20runtime%20%u5C42%u9762%u505A%u7684%u5E94%u7528%u4FE1%u606F%u6536%u96C6%uFF0C%u800C%u4E0D%u662F%u4E0A%u8FF0%u5404%u4E2A%u6846%u67B6%u5728%u5E94%u7528%u5C42%u8FDB%u884C%u4FE1%u606F%u6536%u96C6%uFF0C%u6240%u4EE5%20alinode%20%u53EF%u4EE5%u76D1%u63A7%u5230%20%u8FDB%u7A0B%u6570%u636E%uFF0C%u5806%u5FEB%u7167%u3001%u5806%u65F6%u95F4%u7EBF%u3001CPU%20Profile%u3001GC%20Trace%20%u7B49%u975E%u5E38%u5E95%u5C42%u7684%u4FE1%u606F%uFF0C%u5982%u679C%u4F60%u7684%u5E94%u7528%u6027%u80FD%u74F6%u9888%u5728%20Node%20%u670D%u52A1%u672C%u8EAB%uFF0C%u4F7F%u7528%u8BE5%u5DE5%u5177%u4F1A%u6709%u5F88%u5927%u7684%u5E2E%u52A9%uFF0C%u5982%u679C%u4F60%u7684%u5E94%u7528%u6027%u80FD%u74F6%u9888%u5728%20DB%uFF0C%u90A3%u5E94%u8BE5%u662F%u7528%20DB%20%u76D1%u63A7%u5DE5%u5177%u3002%0A%0A%23%23%20statsd%20+%20graphite%20+%20grafana%0A%0A%u8FD9%u4E2A%u4E09%u4EF6%u5957%u6709%u610F%u601D%u7684%u662F%uFF0C%u76D1%u63A7%u6307%u6807%u662F%u5F00%u53D1%u81EA%u5DF1%u5B9A%u4E49%u7684%uFF0C%u8003%u62C9%u7528%u8FD9%u4E09%u4EF6%u5957%u76D1%u63A7%u8BF7%u6C42%u5904%u7406%u65F6%u95F4%uFF0C%u8BB0%u5F55%u6BCF%u4E2A%u8BF7%u6C42%u7684%u5904%u7406%u65F6%u95F4%0A%u8FD9%u6837%u5728%20grafana%20%u4E0A%u53EF%u4EE5%u5FEB%u901F%u770B%u51FA%u5F53%u524D%u5E94%u7528%u7684%u8BF7%u6C42%u91CF%u4E0E%u8D8B%u52BF%uFF0C%u5DF2%u7ECF%u5FEB%u901F%u5206%u6790%u54EA%u4E9B%u63A5%u53E3%u7F13%u6162%u3002%0A%0A%u63A5%u53E3%u8BBF%u95EE%u91CF%u7684%u8D8B%u52BF%u53D8%u5316%uFF1A%0A%0A%21%5BAlt%20text%5D%28./1531901882642.png%29%0A%0A%u5904%u7406%u6700%u6162%u7684%u63A5%u53E3%uFF1A%0A%0A%21%5BAlt%20text%5D%28./1531902040338.png%29%0A%0A%u8FD9%u5957%u5DE5%u5177%u7684%u4F18%u52BF%u5728%u4E8E%20grafana%uFF0C%20%u63D0%u4F9B%u4E86%u975E%u5E38%u76F4%u89C2%u7684%u56FE%u8868%u3002%0A%u8FD9%u5957%u5DE5%u5177%u7684%u642D%u5EFA%u65B9%u6CD5%u6211%u4E4B%u524D%u4E5F%u5199%u8FC7%u6587%u7AE0%uFF0C%u53EF%u4EE5%u770B%u770B%20%20%5B%u5FEB%u901F%u642D%u5EFA%u4E00%u4E2A%u76D1%u63A7%u670D%u52A1%5D%28http%3A//myfjdthink.com/2016/01/08/%25E5%25BF%25AB%25E9%2580%259F%25E6%2590%25AD%25E5%25BB%25BA%25E4%25B8%2580%25E4%25B8%25AA%25E7%259B%2591%25E6%258E%25A7%25E6%259C%258D%25E5%258A%25A1/%29%0A%0A%23%23%20%u603B%u7ED3%0A%u56DE%u5230%u6211%u4EEC%u7684%u76EE%u6807%u201C%u5E2E%u52A9%20dev%20%u51C6%u786E%u5206%u6790%u51FA%u8BF7%u6C42%u5904%u7406%u7F13%u6162%u7684%u539F%u56E0%u201D%uFF0C%0A%u7406%u8BBA%u4E0A%u6700%u8D34%u5408%u8FD9%u4E2A%u76EE%u6807%u7684%u662F%20Pandora.js%20%uFF0C%u4F46%u662F%u6211%u4EEC%u8FD8%u9700%u8981%u518D%u7B49%u7B49%uFF0C%u7B49%u5B83%u6210%u719F%u3002%0A%u6700%u7B80%u5355%u800C%u5F3A%u5927%u7684%u662F%20%20%20statsd%20+%20graphite%20+%20grafana%20%u4E09%u4EF6%u5957%uFF0C%u4E0D%u7528%u8003%u8651%20atatus%20newrelic%20%u7B49%u3002%0A%u5982%u679C%u4F60%u4F7F%u7528%20Node%20%u505A%u9AD8%u5E76%u53D1%u670D%u52A1%uFF0Calinode%20%u5C06%u4F1A%u5F88%u6709%u7528%u3002%0A</center>"
  },
  {
    "title": "class extends function",
    "created": "2018-07-05T01:31:29.000Z",
    "updated": "2018-07-05T01:39:11.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=0db8d0c9-9e88-42a0-905f-ca63c6eb236c&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n`我写的东西` `编程相关` `Node` `posts`\n\n注意：本文示例代码是 typescript\n\n## klg-logger 的封装\n\n最近在做一个共用的 logger 包 [klg-logger](https://github.com/kaolalicai/klg-logger) ，在调研了一圈后，决定基于 [tracer](https://github.com/baryon/tracer) 这个包来做封装，tracer 足够简单，也具有拓展性。因为公司使用的工具包都是使用 class 风格的， 所以第一版的 klg-logger 长这样：\n\n    import {console, Tracer} from 'tracer'"
  },
  {
    "title": "IDE 常用功能 for Node.js",
    "created": "2017-12-25T00:31:27.000Z",
    "updated": "2018-04-01T18:41:56.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=b78758c9-c360-46ad-954e-24338f1bc02c&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n`我写的东西` `编程相关` `Node` `posts`\n\n### 什么是 IDE\n\n集成开发环境（IDE，Integrated Development Environment ）是用于提供程序开发环境的应用程序。使用 nodejs 开发后端应用的时候，我的常用 IDE 是 Webstorm，偶尔也用 vs code。  \n根据我的日常使用经验，本文列举下 Webstorm 这个 IDE 提供了哪些比较实用功能，这些功能基本上 vs code 也支持。\n\n### 编辑\n\n#### 文件跳转\n\n跳转都任意文件  \n搜索功能\n\n#### 快捷键\n\n导出快捷键列表，仔细过一遍，\n\n#### 自动补全\n\n自动补全功能的实现一般有两种\n\n1.  正则匹配，自动匹配出现过的字符\n2.  语法树分析，因为 js 是动态类型语言，IDE 根据语法树预知变量类型，但是 typescript 是可以的，vs code 也会根据 js 库里的 d.ts 描述文件来做自动补全，所以 typescript 项目的自动补全体验会更好。\n\n#### Refactor 重构\n\n常见重构支持：  \n重命名  \nInline : 表达式替换变量  \nExtract ：变量替换表达式\n\n该功能在 typescript 项目中会更强大\n\n#### 模板功能\n\n把常见的代码块设置为模板，方便快速输入。  \n例如把 `console.log('$message$);` 这类常用语句定义为模板后定义关键字为 log ，只要输入 log 补全即可。\n\n#### TODO 列表\n\n列出项目里的所有 TODO，时刻提醒你还债~\n\n<en-media longdesc=\"./1516438829916.png\" alt=\"滑稽\" title=\"\" type=\"image/png\" width=\"80\" height=\"80\" hash=\"0a53cc459c6cc0743ca66aa5a78df00e\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n<en-media longdesc=\"./1522636237311.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"72cbc22710a40eb98b5a6f663264c689\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### eslint / tslint\n\n集成 eslint / tslint 等 js 代码检查工具，错误代码直接标红。\n\n<en-media longdesc=\"./1522636278556.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"75c81c199c97cca23c39ebc385c3a6ea\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### Format\n\n自动的格式化功能呢，支持 standard\n\n### 运行\n\n#### Build\n\n支持 typescript flow 等语言的编译\n\n#### Run\n\nrun 配置，支持以下常见库的运行配置。\n\n<en-media longdesc=\"./1522635913016.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"e275f51d63a8dde9963056ccc2477226\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n在 Webstorm 中，配置好一个 run 配置之后，可以快速 debug 。\n\n#### Debug\n\n提供 debug 支持，断点比 console.log 清晰，也不会留下一堆乱七八糟的 log 代码，而且断点的设置还支持条件过滤，非常方便\n\n#### Unit Test\n\n清晰的 test 结果\n\n<en-media longdesc=\"./1516438174900.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"1003b1152e1c5da3e3cf98e4628a6c57\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### Coverage\n\n代码覆盖率直接显示到编辑器上，如下图，line 37-39 左侧是淡绿色，表示测试覆盖到了，下方的淡红色表明测试未覆盖\n\n<en-media longdesc=\"./1516438274305.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"84addd1b14e9e96ad28be186ea8e166e\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### Deploy\n\n支持 ftp 上传，IDE 也是可以直接在服务器编程的  \n就是自动帮你执行 ftp 上传命令\n\n#### Terminal\n\n当前目录开启 terminal\n\n### 版本控制\n\n#### 支持主流的版本控制软件\n\ngit svn csv\n\n#### Commit\n\n除了 GUI commit 视图\n\n<en-media longdesc=\"./1516438416605.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"ce31243de4fb954a0ff717fc9055fa6e\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n还有 before commit 和 after commit 钩子\n\n#### Review\n\nreview 视图帮助你清晰了解变更，强烈建议每次 commit 之前都要 review 一次。\n\n<en-media longdesc=\"./1522636433385.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"abeedda2e80656aac4f0fbc9129e9e0e\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### Revert\n\n撤销更改，git checkout – [filename]\n\n#### 冲突解决\n\n解决代码冲突，gui 视图，会清晰很多\n\n#### Shelve 暂存\n\n临时切换任务使用，就不用提交一个 “暂存” commit 了\n\n#### ChangeList/Task\n\n任务汇总，整理变更\n\n#### History\n\n1.  version control 的 history 查看历史变更\n2.  Annotate，查锅神器，同 git blame ，可以看到每一行代码的最后编辑人\n3.  local history 防丢失非常重要\n\n### 集成外部软件\n\n有名的外部软件基本都能找到集成，我常用的有\n\n#### Jira\n\n直接获取 task ，根据 task 信息创建分支，自动填充 commit 信息\n\n#### Plantuml\n\n有插件，将 uml 渲染成图片\n\n### 总结\n\n上文列举了后端开发中比较实用的功能，但每个人的工作习惯都不一样，如何知道有哪些功能是你很喜欢的但是你还没发现呢？\n\n**仔细过一遍 IDE 的菜单就好了**\n\n<center style=\"display:none !important;visibility:collapse !important;height:0 !important;white-space:nowrap;width:100%;overflow:hidden\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5B%u7F16%u7A0B%u76F8%u5173%2C%20Node%2C%20posts%5D%0A%23%20IDE%20%20%u5E38%u7528%u529F%u80FD%20for%20Node.js%0A%0A%23%23%23%20%u4EC0%u4E48%u662F%20IDE%0A%u96C6%u6210%u5F00%u53D1%u73AF%u5883%uFF08IDE%uFF0CIntegrated%20Development%20Environment%20%uFF09%u662F%u7528%u4E8E%u63D0%u4F9B%u7A0B%u5E8F%u5F00%u53D1%u73AF%u5883%u7684%u5E94%u7528%u7A0B%u5E8F%u3002%u4F7F%u7528%20nodejs%20%u5F00%u53D1%u540E%u7AEF%u5E94%u7528%u7684%u65F6%u5019%uFF0C%u6211%u7684%u5E38%u7528%20IDE%20%u662F%20Webstorm%uFF0C%u5076%u5C14%u4E5F%u7528%20vs%20code%u3002%0A%u6839%u636E%u6211%u7684%u65E5%u5E38%u4F7F%u7528%u7ECF%u9A8C%uFF0C%u672C%u6587%u5217%u4E3E%u4E0B%20Webstorm%20%u8FD9%u4E2A%20IDE%20%u63D0%u4F9B%u4E86%u54EA%u4E9B%u6BD4%u8F83%u5B9E%u7528%u529F%u80FD%uFF0C%u8FD9%u4E9B%u529F%u80FD%u57FA%u672C%u4E0A%20vs%20code%20%u4E5F%u652F%u6301%u3002%0A%0A%23%23%23%20%u7F16%u8F91%0A%0A%23%23%23%23%20%u6587%u4EF6%u8DF3%u8F6C%0A%u8DF3%u8F6C%u90FD%u4EFB%u610F%u6587%u4EF6%0A%u641C%u7D22%u529F%u80FD%0A%0A%23%23%23%23%20%u5FEB%u6377%u952E%0A%u5BFC%u51FA%u5FEB%u6377%u952E%u5217%u8868%uFF0C%u4ED4%u7EC6%u8FC7%u4E00%u904D%uFF0C%0A%0A%23%23%23%23%20%u81EA%u52A8%u8865%u5168%0A%u81EA%u52A8%u8865%u5168%u529F%u80FD%u7684%u5B9E%u73B0%u4E00%u822C%u6709%u4E24%u79CD%0A1.%20%u6B63%u5219%u5339%u914D%uFF0C%u81EA%u52A8%u5339%u914D%u51FA%u73B0%u8FC7%u7684%u5B57%u7B26%0A2.%20%u8BED%u6CD5%u6811%u5206%u6790%uFF0C%u56E0%u4E3A%20js%20%u662F%u52A8%u6001%u7C7B%u578B%u8BED%u8A00%uFF0CIDE%20%u6839%u636E%u8BED%u6CD5%u6811%u9884%u77E5%u53D8%u91CF%u7C7B%u578B%uFF0C%u4F46%u662F%20typescript%20%u662F%u53EF%u4EE5%u7684%uFF0Cvs%20code%20%u4E5F%u4F1A%u6839%u636E%20js%20%u5E93%u91CC%u7684%20d.ts%20%u63CF%u8FF0%u6587%u4EF6%u6765%u505A%u81EA%u52A8%u8865%u5168%uFF0C%u6240%u4EE5%20typescript%20%u9879%u76EE%u7684%u81EA%u52A8%u8865%u5168%u4F53%u9A8C%u4F1A%u66F4%u597D%u3002%0A%0A%23%23%23%23%20Refactor%20%u91CD%u6784%0A%u5E38%u89C1%u91CD%u6784%u652F%u6301%uFF1A%0A%u91CD%u547D%u540D%0AInline%20%3A%20%u8868%u8FBE%u5F0F%u66FF%u6362%u53D8%u91CF%0AExtract%20%uFF1A%u53D8%u91CF%u66FF%u6362%u8868%u8FBE%u5F0F%0A%0A%u8BE5%u529F%u80FD%u5728%20typescript%20%u9879%u76EE%u4E2D%u4F1A%u66F4%u5F3A%u5927%0A%0A%23%23%23%23%20%u6A21%u677F%u529F%u80FD%0A%u628A%u5E38%u89C1%u7684%u4EE3%u7801%u5757%u8BBE%u7F6E%u4E3A%u6A21%u677F%uFF0C%u65B9%u4FBF%u5FEB%u901F%u8F93%u5165%u3002%0A%u4F8B%u5982%u628A%20%60console.log%28%27%24message%24%29%3B%60%20%u8FD9%u7C7B%u5E38%u7528%u8BED%u53E5%u5B9A%u4E49%u4E3A%u6A21%u677F%u540E%u5B9A%u4E49%u5173%u952E%u5B57%u4E3A%20log%20%uFF0C%u53EA%u8981%u8F93%u5165%20log%20%u8865%u5168%u5373%u53EF%u3002%0A%0A%23%23%23%23%20TODO%20%u5217%u8868%0A%u5217%u51FA%u9879%u76EE%u91CC%u7684%u6240%u6709%20TODO%uFF0C%u65F6%u523B%u63D0%u9192%u4F60%u8FD8%u503A%7E%0A%0A%21%5B%u6ED1%u7A3D%20%7C%2080x80%5D%28./1516438829916.png%29%0A%0A%21%5BAlt%20text%5D%28./1522636237311.png%29%0A%0A%0A%23%23%23%23%20eslint%20/%20tslint%0A%u96C6%u6210%20eslint%20/%20tslint%20%u7B49%20js%20%u4EE3%u7801%u68C0%u67E5%u5DE5%u5177%uFF0C%u9519%u8BEF%u4EE3%u7801%u76F4%u63A5%u6807%u7EA2%u3002%0A%21%5BAlt%20text%5D%28./1522636278556.png%29%0A%0A%23%23%23%23%20Format%0A%u81EA%u52A8%u7684%u683C%u5F0F%u5316%u529F%u80FD%u5462%uFF0C%u652F%u6301%20standard%0A%0A%23%23%23%20%u8FD0%u884C%0A%23%23%23%23%20Build%0A%u652F%u6301%20typescript%20flow%20%u7B49%u8BED%u8A00%u7684%u7F16%u8BD1%0A%0A%23%23%23%23%20Run%0Arun%20%u914D%u7F6E%uFF0C%u652F%u6301%u4EE5%u4E0B%u5E38%u89C1%u5E93%u7684%u8FD0%u884C%u914D%u7F6E%u3002%0A%21%5BAlt%20text%5D%28./1522635913016.png%29%0A%0A%u5728%20Webstorm%20%u4E2D%uFF0C%u914D%u7F6E%u597D%u4E00%u4E2A%20run%20%u914D%u7F6E%u4E4B%u540E%uFF0C%u53EF%u4EE5%u5FEB%u901F%20debug%20%u3002%0A%0A%23%23%23%23%20Debug%20%0A%u63D0%u4F9B%20debug%20%u652F%u6301%uFF0C%u65AD%u70B9%u6BD4%20console.log%20%u6E05%u6670%uFF0C%u4E5F%u4E0D%u4F1A%u7559%u4E0B%u4E00%u5806%u4E71%u4E03%u516B%u7CDF%u7684%20log%20%u4EE3%u7801%uFF0C%u800C%u4E14%u65AD%u70B9%u7684%u8BBE%u7F6E%u8FD8%u652F%u6301%u6761%u4EF6%u8FC7%u6EE4%uFF0C%u975E%u5E38%u65B9%u4FBF%0A%0A%23%23%23%23%20Unit%20Test%0A%u6E05%u6670%u7684%20test%20%u7ED3%u679C%0A%21%5BAlt%20text%5D%28./1516438174900.png%29%0A%0A%23%23%23%23%20Coverage%0A%u4EE3%u7801%u8986%u76D6%u7387%u76F4%u63A5%u663E%u793A%u5230%u7F16%u8F91%u5668%u4E0A%uFF0C%u5982%u4E0B%u56FE%uFF0Cline%2037-39%20%u5DE6%u4FA7%u662F%u6DE1%u7EFF%u8272%uFF0C%u8868%u793A%u6D4B%u8BD5%u8986%u76D6%u5230%u4E86%uFF0C%u4E0B%u65B9%u7684%u6DE1%u7EA2%u8272%u8868%u660E%u6D4B%u8BD5%u672A%u8986%u76D6%0A%21%5BAlt%20text%5D%28./1516438274305.png%29%0A%0A%23%23%23%23%20Deploy%0A%u652F%u6301%20ftp%20%u4E0A%u4F20%uFF0CIDE%20%u4E5F%u662F%u53EF%u4EE5%u76F4%u63A5%u5728%u670D%u52A1%u5668%u7F16%u7A0B%u7684%0A%u5C31%u662F%u81EA%u52A8%u5E2E%u4F60%u6267%u884C%20ftp%20%u4E0A%u4F20%u547D%u4EE4%0A%0A%23%23%23%23%20Terminal%0A%u5F53%u524D%u76EE%u5F55%u5F00%u542F%20terminal%0A%0A%23%23%23%20%u7248%u672C%u63A7%u5236%0A%23%23%23%23%20%u652F%u6301%u4E3B%u6D41%u7684%u7248%u672C%u63A7%u5236%u8F6F%u4EF6%0Agit%20svn%20%20csv%0A%0A%23%23%23%23%20Commit%20%0A%u9664%u4E86%20GUI%20commit%20%u89C6%u56FE%0A%21%5BAlt%20text%5D%28./1516438416605.png%29%0A%0A%u8FD8%u6709%20before%20commit%20%u548C%20after%20commit%20%u94A9%u5B50%0A%0A%23%23%23%23%20Review%0Areview%20%u89C6%u56FE%u5E2E%u52A9%u4F60%u6E05%u6670%u4E86%u89E3%u53D8%u66F4%uFF0C%u5F3A%u70C8%u5EFA%u8BAE%u6BCF%u6B21%20commit%20%u4E4B%u524D%u90FD%u8981%20review%20%u4E00%u6B21%u3002%0A%21%5BAlt%20text%5D%28./1522636433385.png%29%0A%0A%23%23%23%23%20Revert%20%0A%u64A4%u9500%u66F4%u6539%uFF0Cgit%20checkout%20--%20%5Bfilename%5D%0A%0A%23%23%23%23%20%u51B2%u7A81%u89E3%u51B3%20%0A%u89E3%u51B3%u4EE3%u7801%u51B2%u7A81%uFF0Cgui%20%u89C6%u56FE%uFF0C%u4F1A%u6E05%u6670%u5F88%u591A%0A%0A%23%23%23%23%20Shelve%20%u6682%u5B58%0A%u4E34%u65F6%u5207%u6362%u4EFB%u52A1%u4F7F%u7528%uFF0C%u5C31%u4E0D%u7528%u63D0%u4EA4%u4E00%u4E2A%20%u201C%u6682%u5B58%u201D%20commit%20%u4E86%0A%0A%23%23%23%23%20ChangeList/Task%0A%u4EFB%u52A1%u6C47%u603B%uFF0C%u6574%u7406%u53D8%u66F4%0A%0A%23%23%23%23%20History%0A1.%20version%20control%20%u7684%20history%20%u67E5%u770B%u5386%u53F2%u53D8%u66F4%0A2.%20Annotate%uFF0C%u67E5%u9505%u795E%u5668%uFF0C%u540C%20git%20%20blame%20%uFF0C%u53EF%u4EE5%u770B%u5230%u6BCF%u4E00%u884C%u4EE3%u7801%u7684%u6700%u540E%u7F16%u8F91%u4EBA%0A3.%20local%20history%20%u9632%u4E22%u5931%u975E%u5E38%u91CD%u8981%0A%0A%20%20%20%20%0A%23%23%23%20%u96C6%u6210%u5916%u90E8%u8F6F%u4EF6%0A%u6709%u540D%u7684%u5916%u90E8%u8F6F%u4EF6%u57FA%u672C%u90FD%u80FD%u627E%u5230%u96C6%u6210%uFF0C%u6211%u5E38%u7528%u7684%u6709%0A%23%23%23%23%20Jira%20%0A%u76F4%u63A5%u83B7%u53D6%20task%20%uFF0C%u6839%u636E%20task%20%u4FE1%u606F%u521B%u5EFA%u5206%u652F%uFF0C%u81EA%u52A8%u586B%u5145%20commit%20%u4FE1%u606F%0A%0A%23%23%23%23%20Plantuml%20%0A%u6709%u63D2%u4EF6%uFF0C%u5C06%20uml%20%u6E32%u67D3%u6210%u56FE%u7247%0A%20%20%20%20%0A%23%23%23%20%u603B%u7ED3%0A%u4E0A%u6587%u5217%u4E3E%u4E86%u540E%u7AEF%u5F00%u53D1%u4E2D%u6BD4%u8F83%u5B9E%u7528%u7684%u529F%u80FD%uFF0C%u4F46%u6BCF%u4E2A%u4EBA%u7684%u5DE5%u4F5C%u4E60%u60EF%u90FD%u4E0D%u4E00%u6837%uFF0C%u5982%u4F55%u77E5%u9053%u6709%u54EA%u4E9B%u529F%u80FD%u662F%u4F60%u5F88%u559C%u6B22%u7684%u4F46%u662F%u4F60%u8FD8%u6CA1%u53D1%u73B0%u5462%uFF1F%0A%0A**%u4ED4%u7EC6%u8FC7%u4E00%u904D%20IDE%20%u7684%u83DC%u5355%u5C31%u597D%u4E86**%0A%0A%0A</center>"
  },
  {
    "title": "做个 SSO 系统",
    "created": "2018-01-20T02:50:24.000Z",
    "updated": "2018-01-31T00:00:24.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=83a22912-7a68-47c8-8daf-7b1c7eaf9539&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n`我写的东西` `编程相关` `Node` `posts` `编程相关`\n\n### 应用场景\n\n最近公司要统一内部管理系统的用户与权限控制，于是考虑开发一个 SSO 单点登陆系统，考虑到内部系统都是 web 服务和开发时间有限，而且内部系统都是 Node.js 写的， 使用 Koa 框架，最终决定使用最简单的解决方案。\n\n### 实现方案\n\n#### 原理\n\nkwt + cookie  \nJSON Web Token（JWT）是一个非常轻巧的规范。这个规范允许我们使用JWT在用户和服务器之间传递安全可靠的信息，这里将作为用户的登陆标识。  \n用户的登陆流程是这样的：\n\n1.  打开接入方系统，假设域名是 aaa.abc.com\n2.  校验登陆状态，查看 cookie 里是否存在 jwt 并解密校验，如果未登录，跳转到 SSO 登陆页面，SSO 域名是 sso.abc.com\n3.  在 SSO 登陆页面填写用户名和密码（未注册的先注册），登陆后 SSO 系统把 jwt 写入 cookie，cookie 的有效域名为 abc.com，然后跳跳转回原系统（跳过来的时候在 url 里带上原系统地址）\n4.  返回原系统，校验登陆状态，登陆完成\n\n#### sso 系统实现\n\n基本的用户管理功能，有：\n\n*   部门管理\n*   权限管理\n*   注册功能\n*   登陆功能\n*   找回密码\n\n重点功能是登陆，需要在登陆时将 jwt 写入 cookie，上文原理中有要求各个系统要有个共同的主域名 abc.com，各个系统不同域的话，那就只能把 jwt 在 url 中返回给原系统了，原系统自己把 jwt 写入 cookie，来看看这部分的代码：\n\n    const jwtdata = {  username: user.username,  email: user.email,  role: user.role } // 生成 jwt const token = jwt.sign(jwtdata, Const.TOKEN_SECRET, {expiresIn: '365d'}) // 写入 cookie ctx.cookies.set(  'token',  token,  {  domain: '.abc.com', // 写cookie所在的域名  path: '/', // 写cookie所在的路径  maxAge: 30 * 60 * 1000, // cookie有效时长  httpOnly: false, // 是否只用于http请求中获取  overwrite: true // 是否允许重写  } ) \n\n注意用于加密 jwt 的密匙，内部系统的话可以直接用一个密匙加密，然后接入方都用这个密匙解密就可以了。  \n如果安全要求高一点，那就是 sso 系统用公钥（保密）加密 jwt，然后接入方使用私钥（公开）解密。\n\n#### 接入方实现\n\n考虑到接入方有多个，所以考虑直接写个 Koa 中间件给各个接入方调用是最简单的，将此中间件作为 npm 包发布，接入方使用该中间件监听所有请求，完成对 jwt 的解析和校验。\n\n**监控请求**：\n\n    const Koa = require('koa') const app = new Koa() const auth = require('sso-auth') app.use(auth.validate({  unless: [/\\/register/, /\\/login/, /\\/message/],  errHandle: async function (ctx) {  console.log('授权错误')  // 跳转到SSO的登陆页面或者 返回url给前端跳转  ctx.body = {  code: 3,  message: '授权错误',  url: 'https://sso.abc.com'  }  ctx.status = 200  } })) \n\n**中间件 sso-auth 的内部实现**：\n\n    // 从 cookie 取出 jwt // 校验 jwt 是否符合 \n\n假设接入方是其他编程语言的系统，那就对该语言实现对应的上述校验逻辑即可。\n\n### 总结\n\njwt 作为 token 可以附带额外的信息  \n使用 cookie 存储 token ，同域名的系统接入非常方便  \n使用中间件方便了接入方校验 token\n\n<center style=\"display:none\">%23%20%u505A%u4E2A%20SSO%20%u7CFB%u7EDF%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5B%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%2C%20posts%2C%20%u7F16%u7A0B%u76F8%u5173%5D%0A%0A%23%23%23%20%u5E94%u7528%u573A%u666F%0A%u6700%u8FD1%u516C%u53F8%u8981%u7EDF%u4E00%u5185%u90E8%u7BA1%u7406%u7CFB%u7EDF%u7684%u7528%u6237%u4E0E%u6743%u9650%u63A7%u5236%uFF0C%u4E8E%u662F%u8003%u8651%u5F00%u53D1%u4E00%u4E2A%20SSO%20%u5355%u70B9%u767B%u9646%u7CFB%u7EDF%uFF0C%u8003%u8651%u5230%u5185%u90E8%u7CFB%u7EDF%u90FD%u662F%20web%20%u670D%u52A1%u548C%u5F00%u53D1%u65F6%u95F4%u6709%u9650%uFF0C%u800C%u4E14%u5185%u90E8%u7CFB%u7EDF%u90FD%u662F%20Node.js%20%u5199%u7684%uFF0C%20%u4F7F%u7528%20Koa%20%u6846%u67B6%uFF0C%u6700%u7EC8%u51B3%u5B9A%u4F7F%u7528%u6700%u7B80%u5355%u7684%u89E3%u51B3%u65B9%u6848%u3002%0A%0A%23%23%23%20%u5B9E%u73B0%u65B9%u6848%0A%0A%23%23%23%23%20%u539F%u7406%0Akwt%20+%20cookie%0AJSON%20Web%20Token%uFF08JWT%uFF09%u662F%u4E00%u4E2A%u975E%u5E38%u8F7B%u5DE7%u7684%u89C4%u8303%u3002%u8FD9%u4E2A%u89C4%u8303%u5141%u8BB8%u6211%u4EEC%u4F7F%u7528JWT%u5728%u7528%u6237%u548C%u670D%u52A1%u5668%u4E4B%u95F4%u4F20%u9012%u5B89%u5168%u53EF%u9760%u7684%u4FE1%u606F%uFF0C%u8FD9%u91CC%u5C06%u4F5C%u4E3A%u7528%u6237%u7684%u767B%u9646%u6807%u8BC6%u3002%0A%u7528%u6237%u7684%u767B%u9646%u6D41%u7A0B%u662F%u8FD9%u6837%u7684%uFF1A%0A1.%20%u6253%u5F00%u63A5%u5165%u65B9%u7CFB%u7EDF%uFF0C%u5047%u8BBE%u57DF%u540D%u662F%20aaa.abc.com%0A2.%20%u6821%u9A8C%u767B%u9646%u72B6%u6001%uFF0C%u67E5%u770B%20cookie%20%u91CC%u662F%u5426%u5B58%u5728%20jwt%20%u5E76%u89E3%u5BC6%u6821%u9A8C%uFF0C%u5982%u679C%u672A%u767B%u5F55%uFF0C%u8DF3%u8F6C%u5230%20SSO%20%u767B%u9646%u9875%u9762%uFF0CSSO%20%u57DF%u540D%u662F%20sso.abc.com%0A3.%20%u5728%20SSO%20%u767B%u9646%u9875%u9762%u586B%u5199%u7528%u6237%u540D%u548C%u5BC6%u7801%uFF08%u672A%u6CE8%u518C%u7684%u5148%u6CE8%u518C%uFF09%uFF0C%u767B%u9646%u540E%20SSO%20%u7CFB%u7EDF%u628A%20jwt%20%u5199%u5165%20cookie%uFF0Ccookie%20%u7684%u6709%u6548%u57DF%u540D%u4E3A%20%20abc.com%uFF0C%u7136%u540E%u8DF3%u8DF3%u8F6C%u56DE%u539F%u7CFB%u7EDF%uFF08%u8DF3%u8FC7%u6765%u7684%u65F6%u5019%u5728%20url%20%u91CC%u5E26%u4E0A%u539F%u7CFB%u7EDF%u5730%u5740%uFF09%0A4.%20%u8FD4%u56DE%u539F%u7CFB%u7EDF%uFF0C%u6821%u9A8C%u767B%u9646%u72B6%u6001%uFF0C%u767B%u9646%u5B8C%u6210%0A%0A%23%23%23%23%20sso%20%u7CFB%u7EDF%u5B9E%u73B0%0A%0A%u57FA%u672C%u7684%u7528%u6237%u7BA1%u7406%u529F%u80FD%uFF0C%u6709%uFF1A%0A-%20%u90E8%u95E8%u7BA1%u7406%0A-%20%u6743%u9650%u7BA1%u7406%0A-%20%u6CE8%u518C%u529F%u80FD%0A-%20%u767B%u9646%u529F%u80FD%0A-%20%u627E%u56DE%u5BC6%u7801%0A%0A%u91CD%u70B9%u529F%u80FD%u662F%u767B%u9646%uFF0C%u9700%u8981%u5728%u767B%u9646%u65F6%u5C06%20jwt%20%u5199%u5165%20cookie%uFF0C%u4E0A%u6587%u539F%u7406%u4E2D%u6709%u8981%u6C42%u5404%u4E2A%u7CFB%u7EDF%u8981%u6709%u4E2A%u5171%u540C%u7684%u4E3B%u57DF%u540D%20abc.com%uFF0C%u5404%u4E2A%u7CFB%u7EDF%u4E0D%u540C%u57DF%u7684%u8BDD%uFF0C%u90A3%u5C31%u53EA%u80FD%u628A%20jwt%20%u5728%20url%20%u4E2D%u8FD4%u56DE%u7ED9%u539F%u7CFB%u7EDF%u4E86%uFF0C%u539F%u7CFB%u7EDF%u81EA%u5DF1%u628A%20jwt%20%u5199%u5165%20cookie%uFF0C%u6765%u770B%u770B%u8FD9%u90E8%u5206%u7684%u4EE3%u7801%uFF1A%0A%0A%60%60%60%0Aconst%20jwtdata%20%3D%20%7B%0A%20%20username%3A%20user.username%2C%0A%20%20email%3A%20user.email%2C%0A%20%20role%3A%20user.role%0A%7D%0A//%20%u751F%u6210%20jwt%0Aconst%20token%20%3D%20jwt.sign%28jwtdata%2C%20Const.TOKEN_SECRET%2C%20%7BexpiresIn%3A%20%27365d%27%7D%29%0A//%20%u5199%u5165%20cookie%0Actx.cookies.set%28%0A%20%20%27token%27%2C%0A%20%20token%2C%0A%20%20%7B%0A%20%20%20%20domain%3A%20%27.abc.com%27%2C%20%20%20%20%20%20%20%20//%20%u5199cookie%u6240%u5728%u7684%u57DF%u540D%0A%20%20%20%20path%3A%20%27/%27%2C%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20//%20%u5199cookie%u6240%u5728%u7684%u8DEF%u5F84%0A%20%20%20%20maxAge%3A%2030%20*%2060%20*%201000%2C%20%20%20%20//%20cookie%u6709%u6548%u65F6%u957F%0A%20%20%20%20httpOnly%3A%20false%2C%20%20//%20%u662F%u5426%u53EA%u7528%u4E8Ehttp%u8BF7%u6C42%u4E2D%u83B7%u53D6%0A%20%20%20%20overwrite%3A%20true%20%20//%20%u662F%u5426%u5141%u8BB8%u91CD%u5199%0A%20%20%7D%0A%29%0A%60%60%60%0A%0A%u6CE8%u610F%u7528%u4E8E%u52A0%u5BC6%20jwt%20%u7684%u5BC6%u5319%uFF0C%u5185%u90E8%u7CFB%u7EDF%u7684%u8BDD%u53EF%u4EE5%u76F4%u63A5%u7528%u4E00%u4E2A%u5BC6%u5319%u52A0%u5BC6%uFF0C%u7136%u540E%u63A5%u5165%u65B9%u90FD%u7528%u8FD9%u4E2A%u5BC6%u5319%u89E3%u5BC6%u5C31%u53EF%u4EE5%u4E86%u3002%0A%u5982%u679C%u5B89%u5168%u8981%u6C42%u9AD8%u4E00%u70B9%uFF0C%u90A3%u5C31%u662F%20sso%20%u7CFB%u7EDF%u7528%u516C%u94A5%uFF08%u4FDD%u5BC6%uFF09%u52A0%u5BC6%20jwt%uFF0C%u7136%u540E%u63A5%u5165%u65B9%u4F7F%u7528%u79C1%u94A5%uFF08%u516C%u5F00%uFF09%u89E3%u5BC6%u3002%0A%0A%23%23%23%23%20%u63A5%u5165%u65B9%u5B9E%u73B0%0A%0A%u8003%u8651%u5230%u63A5%u5165%u65B9%u6709%u591A%u4E2A%uFF0C%u6240%u4EE5%u8003%u8651%u76F4%u63A5%u5199%u4E2A%20Koa%20%u4E2D%u95F4%u4EF6%u7ED9%u5404%u4E2A%u63A5%u5165%u65B9%u8C03%u7528%u662F%u6700%u7B80%u5355%u7684%uFF0C%u5C06%u6B64%u4E2D%u95F4%u4EF6%u4F5C%u4E3A%20npm%20%u5305%u53D1%u5E03%uFF0C%u63A5%u5165%u65B9%u4F7F%u7528%u8BE5%u4E2D%u95F4%u4EF6%u76D1%u542C%u6240%u6709%u8BF7%u6C42%uFF0C%u5B8C%u6210%u5BF9%20jwt%20%u7684%u89E3%u6790%u548C%u6821%u9A8C%u3002%0A%0A**%u76D1%u63A7%u8BF7%u6C42**%uFF1A%0A%60%60%60%0Aconst%20Koa%20%3D%20require%28%27koa%27%29%0Aconst%20app%20%3D%20new%20Koa%28%29%0Aconst%20auth%20%3D%20require%28%27sso-auth%27%29%0Aapp.use%28auth.validate%28%7B%0A%20%20unless%3A%20%5B/%5C/register/%2C%20/%5C/login/%2C%20/%5C/message/%5D%2C%0A%20%20errHandle%3A%20async%20function%20%28ctx%29%20%7B%0A%20%20%20%20console.log%28%27%u6388%u6743%u9519%u8BEF%27%29%0A%20%20%20%20//%20%u8DF3%u8F6C%u5230SSO%u7684%u767B%u9646%u9875%u9762%u6216%u8005%20%u8FD4%u56DEurl%u7ED9%u524D%u7AEF%u8DF3%u8F6C%0A%20%20%20%20ctx.body%20%3D%20%7B%0A%20%20%20%20%20%20code%3A%203%2C%0A%20%20%20%20%20%20message%3A%20%27%u6388%u6743%u9519%u8BEF%27%2C%0A%20%20%20%20%20%20url%3A%20%27https%3A//sso.abc.com%27%0A%20%20%20%20%7D%0A%20%20%20%20ctx.status%20%3D%20200%0A%20%20%7D%0A%7D%29%29%0A%60%60%60%0A%0A**%u4E2D%u95F4%u4EF6%20sso-auth%20%u7684%u5185%u90E8%u5B9E%u73B0**%uFF1A%0A%0A%60%60%60%0A//%20%u4ECE%20cookie%20%u53D6%u51FA%20jwt%0A//%20%u6821%u9A8C%20jwt%20%u662F%u5426%u7B26%u5408%0A%60%60%60%0A%0A%u5047%u8BBE%u63A5%u5165%u65B9%u662F%u5176%u4ED6%u7F16%u7A0B%u8BED%u8A00%u7684%u7CFB%u7EDF%uFF0C%u90A3%u5C31%u5BF9%u8BE5%u8BED%u8A00%u5B9E%u73B0%u5BF9%u5E94%u7684%u4E0A%u8FF0%u6821%u9A8C%u903B%u8F91%u5373%u53EF%u3002%0A%0A%23%23%23%20%u603B%u7ED3%0Ajwt%20%u4F5C%u4E3A%20token%20%u53EF%u4EE5%u9644%u5E26%u989D%u5916%u7684%u4FE1%u606F%0A%u4F7F%u7528%20cookie%20%u5B58%u50A8%20token%20%uFF0C%u540C%u57DF%u540D%u7684%u7CFB%u7EDF%u63A5%u5165%u975E%u5E38%u65B9%u4FBF%0A%u4F7F%u7528%u4E2D%u95F4%u4EF6%u65B9%u4FBF%u4E86%u63A5%u5165%u65B9%u6821%u9A8C%20token%0A</center>"
  },
  {
    "title": "Node.js 并发模型",
    "created": "2018-01-16T01:40:45.000Z",
    "updated": "2018-01-28T20:37:58.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=ebfd51ff-4cf4-43cf-b880-0e122fa5f032&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n`我写的东西` `编程相关` `Node` `posts` `编程相关`\n\n### 前言\n\n首先，什么是并发？\n\n并发是指程序可以同时处理多个任务，是一个web 服务必备的能力。\n\n自从 Nodejs 出现后，js 开始涉及后端领域，因为其出色的并发模型，被很多企业用来处理高并发请求，例如淘宝已经大量使用 node 处理中间层业务。\n\n接下来本文就分析一下 js 的并发模型，来理解 node 相对于其他语言的优势以及其最合适的应用场景\n\ntips:并发和并行区别\n\n<en-media longdesc=\"./1513331347635.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"389a05303e26c46a4c4fd7eabd4c1a5d\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### 异步IO\n\n什么是异步IO？  \n异步 IO 具体是如何实现的呢？  \n异步和同步有什么区别呢？  \n异步就不阻塞吗？IO 阻塞又是什么概念呢？  \n带着这些问题，我们慢慢分析。\n\n#### IO 模型\n\n《UNIX网络编程：卷一》第六章——I/O复用。书中向我们提及了5种类UNIX下可用的I/O模型：\n\n*   阻塞式I/O；\n*   非阻塞式I/O；\n*   I/O复用（select，poll，epoll…）；\n*   信号驱动式I/O（SIGIO）；\n*   异步I/O（POSIX的aio_系列函数）；\n\n<en-media longdesc=\"./1516787060510.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"944021e2257d8e986d6f9ddfd22a148c\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n总结一下阻塞，非阻塞，同步，异步\n\n*   阻塞，非阻塞：进程/线程要访问的数据是否就绪，进程/线程是否需要等待；\n*   同步，异步：访问数据的方式，同步需要主动读写数据，在读写数据的过程中还是会阻塞；异步只需要I/O操作完成的通知，并不主动读写数据，由操作系统内核完成数据的读写。\n\n#### 说人话\n\n上面的解释太复杂我看不懂怎么办？我们把上文说到 IO 代入到生活的场景中，考虑到我们公司很多人喜欢买一点点饮料，就以买饮料为例，将四种常见 IO 模型转换为对应的买饮料流程。下面是一下设定：\n\n*   把买一杯一点点的流程简化为两步：下单制作和拿一点点回公司\n*   公司员工 === 线程\n*   下单制作 === 发起IO请求\n*   拿一点点回公司 === 读取数据\n\n<en-media longdesc=\"./1517198107099.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"3f9c0d3711767a2b9e7406a3aaa2700d\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n异步 IO 的特点就是把 IO 处理的事情都交给了操作系统（美团外卖），这样线程就不会被 IO 阻塞，可以继续处理其他请求\n\n#### Node 的异步IO\n\nNode.js 的异步 IO 由 Libuv 这个库提供实现，Libuv 是 Node.js 关键的一个组成部分，它为上层的 Node.js 提供了统一的 API 调用，使其不用考虑平台差距，隐藏了底层实现。\n\n<en-media longdesc=\"./1516177769030.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"bb29ac054a9e959683354bc1d42e36da\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n可以看出，它提供了非阻塞的网络 I/O，异步文件系统访问等功能，而且右下角居然还有个线程池，实际上 Libuv 收到的 IO 请求是同个多线程来实现的, 看来 Node 只是在程序层面单线程而已\n\n### 事件循环\n\n#### 任务队列\n\n先看看 Node.js 结构\n\n<en-media longdesc=\"./1516178753944.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"60c2c2e0a9ede6c853a889504ef90d2a\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n根据上图，Node.js的运行机制如下。\n\n（1）V8引擎解析JavaScript脚本。\n\n（2）解析后的代码，调用Node API。\n\n（3）libuv库负责Node API的执行。它将不同的任务分配给不同的线程，形成一个Event Loop（事件循环），以异步的方式将任务的执行结果返回给V8引擎（callback 处理结果）。\n\n（4）V8引擎再将结果返回给用户。\n\n异步操作都会被压入任务队列，当任务队列为空的时候，程序退出。\n\n#### 示例代码\n\n### 总结\n\nLibuv 使用异步IO + 线程池实现的事件循环处理机制提供的高效的 IO 处理，是 Node 能承担高并发请求的主要原因\n\n### 参考文章与书籍\n\n《深入浅出Node.js》  \n《Unix 网络编程》  \n《七周七并发模型》  \n[并发与并行的区别](https://www.zhihu.com/question/33515481)  \n[JavaScript 运行机制详解：再谈Event Loop](http://www.ruanyifeng.com/blog/2014/10/event-loop.html)  \n[怎样理解阻塞非阻塞与同步异步的区别？ - 大姚的回答 - 知乎](https://www.zhihu.com/question/19732473/answer/26101328)  \n[Node.js 探秘：初识单线程的 Node.js](http://taobaofed.org/blog/2015/10/29/deep-into-node-1/)  \n[Linux IO模式及 select、poll、epoll详解](https://segmentfault.com/a/1190000003063859)\n\nUML\n\n<en-media longdesc=\"./同步异步.puml\" alt=\"Alt text\" title=\"\" type=\"application/octet-stream\" hash=\"0236521f6d029cce1875985db8139fe0\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n<center style=\"display:none\">%0A%23Node.js%20%u5E76%u53D1%u6A21%u578B%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5B%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%2C%20posts%2C%20%u7F16%u7A0B%u76F8%u5173%5D%0A%0A%23%23%23%20%u524D%u8A00%0A%u9996%u5148%uFF0C%u4EC0%u4E48%u662F%u5E76%u53D1%uFF1F%0A%0A%u5E76%u53D1%u662F%u6307%u7A0B%u5E8F%u53EF%u4EE5%u540C%u65F6%u5904%u7406%u591A%u4E2A%u4EFB%u52A1%uFF0C%u662F%u4E00%u4E2Aweb%20%u670D%u52A1%u5FC5%u5907%u7684%u80FD%u529B%u3002%0A%0A%u81EA%u4ECE%20Nodejs%20%u51FA%u73B0%u540E%uFF0Cjs%20%u5F00%u59CB%u6D89%u53CA%u540E%u7AEF%u9886%u57DF%uFF0C%u56E0%u4E3A%u5176%u51FA%u8272%u7684%u5E76%u53D1%u6A21%u578B%uFF0C%u88AB%u5F88%u591A%u4F01%u4E1A%u7528%u6765%u5904%u7406%u9AD8%u5E76%u53D1%u8BF7%u6C42%uFF0C%u4F8B%u5982%u6DD8%u5B9D%u5DF2%u7ECF%u5927%u91CF%u4F7F%u7528%20node%20%u5904%u7406%u4E2D%u95F4%u5C42%u4E1A%u52A1%u3002%0A%0A%u63A5%u4E0B%u6765%u672C%u6587%u5C31%u5206%u6790%u4E00%u4E0B%20js%20%u7684%u5E76%u53D1%u6A21%u578B%uFF0C%u6765%u7406%u89E3%20node%20%u76F8%u5BF9%u4E8E%u5176%u4ED6%u8BED%u8A00%u7684%u4F18%u52BF%u4EE5%u53CA%u5176%u6700%u5408%u9002%u7684%u5E94%u7528%u573A%u666F%0A%0Atips%3A%u5E76%u53D1%u548C%u5E76%u884C%u533A%u522B%0A%21%5BAlt%20text%5D%28./1513331347635.png%29%0A%0A%23%23%23%20%u5F02%u6B65IO%0A%u4EC0%u4E48%u662F%u5F02%u6B65IO%uFF1F%0A%u5F02%u6B65%20IO%20%u5177%u4F53%u662F%u5982%u4F55%u5B9E%u73B0%u7684%u5462%uFF1F%0A%u5F02%u6B65%u548C%u540C%u6B65%u6709%u4EC0%u4E48%u533A%u522B%u5462%uFF1F%0A%u5F02%u6B65%u5C31%u4E0D%u963B%u585E%u5417%uFF1FIO%20%u963B%u585E%u53C8%u662F%u4EC0%u4E48%u6982%u5FF5%u5462%uFF1F%0A%u5E26%u7740%u8FD9%u4E9B%u95EE%u9898%uFF0C%u6211%u4EEC%u6162%u6162%u5206%u6790%u3002%0A%0A%23%23%23%23%20IO%20%u6A21%u578B%0A%u300AUNIX%u7F51%u7EDC%u7F16%u7A0B%uFF1A%u5377%u4E00%u300B%u7B2C%u516D%u7AE0%u2014%u2014I/O%u590D%u7528%u3002%u4E66%u4E2D%u5411%u6211%u4EEC%u63D0%u53CA%u4E865%u79CD%u7C7BUNIX%u4E0B%u53EF%u7528%u7684I/O%u6A21%u578B%uFF1A%0A-%20%u963B%u585E%u5F0FI/O%uFF1B%0A-%20%u975E%u963B%u585E%u5F0FI/O%uFF1B%0A-%20I/O%u590D%u7528%uFF08select%uFF0Cpoll%uFF0Cepoll...%uFF09%uFF1B%0A-%20%u4FE1%u53F7%u9A71%u52A8%u5F0FI/O%uFF08SIGIO%uFF09%uFF1B%0A-%20%u5F02%u6B65I/O%uFF08POSIX%u7684aio_%u7CFB%u5217%u51FD%u6570%uFF09%uFF1B%0A%0A%21%5BAlt%20text%5D%28./1516787060510.png%29%0A%0A%u603B%u7ED3%u4E00%u4E0B%u963B%u585E%uFF0C%u975E%u963B%u585E%uFF0C%u540C%u6B65%uFF0C%u5F02%u6B65%0A-%20%u963B%u585E%uFF0C%u975E%u963B%u585E%uFF1A%u8FDB%u7A0B/%u7EBF%u7A0B%u8981%u8BBF%u95EE%u7684%u6570%u636E%u662F%u5426%u5C31%u7EEA%uFF0C%u8FDB%u7A0B/%u7EBF%u7A0B%u662F%u5426%u9700%u8981%u7B49%u5F85%uFF1B%0A-%20%u540C%u6B65%uFF0C%u5F02%u6B65%uFF1A%u8BBF%u95EE%u6570%u636E%u7684%u65B9%u5F0F%uFF0C%u540C%u6B65%u9700%u8981%u4E3B%u52A8%u8BFB%u5199%u6570%u636E%uFF0C%u5728%u8BFB%u5199%u6570%u636E%u7684%u8FC7%u7A0B%u4E2D%u8FD8%u662F%u4F1A%u963B%u585E%uFF1B%u5F02%u6B65%u53EA%u9700%u8981I/O%u64CD%u4F5C%u5B8C%u6210%u7684%u901A%u77E5%uFF0C%u5E76%u4E0D%u4E3B%u52A8%u8BFB%u5199%u6570%u636E%uFF0C%u7531%u64CD%u4F5C%u7CFB%u7EDF%u5185%u6838%u5B8C%u6210%u6570%u636E%u7684%u8BFB%u5199%u3002%0A%0A%23%23%23%23%20%u8BF4%u4EBA%u8BDD%0A%u4E0A%u9762%u7684%u89E3%u91CA%u592A%u590D%u6742%u6211%u770B%u4E0D%u61C2%u600E%u4E48%u529E%uFF1F%u6211%u4EEC%u628A%u4E0A%u6587%u8BF4%u5230%20IO%20%u4EE3%u5165%u5230%u751F%u6D3B%u7684%u573A%u666F%u4E2D%uFF0C%u8003%u8651%u5230%u6211%u4EEC%u516C%u53F8%u5F88%u591A%u4EBA%u559C%u6B22%u4E70%u4E00%u70B9%u70B9%u996E%u6599%uFF0C%u5C31%u4EE5%u4E70%u996E%u6599%u4E3A%u4F8B%uFF0C%u5C06%u56DB%u79CD%u5E38%u89C1%20IO%20%u6A21%u578B%u8F6C%u6362%u4E3A%u5BF9%u5E94%u7684%u4E70%u996E%u6599%u6D41%u7A0B%u3002%u4E0B%u9762%u662F%u4E00%u4E0B%u8BBE%u5B9A%uFF1A%0A-%20%u628A%u4E70%u4E00%u676F%u4E00%u70B9%u70B9%u7684%u6D41%u7A0B%u7B80%u5316%u4E3A%u4E24%u6B65%uFF1A%u4E0B%u5355%u5236%u4F5C%u548C%u62FF%u4E00%u70B9%u70B9%u56DE%u516C%u53F8%0A-%20%u516C%u53F8%u5458%u5DE5%20%3D%3D%3D%20%u7EBF%u7A0B%0A-%20%u4E0B%u5355%u5236%u4F5C%20%3D%3D%3D%20%u53D1%u8D77IO%u8BF7%u6C42%0A-%20%u62FF%u4E00%u70B9%u70B9%u56DE%u516C%u53F8%20%3D%3D%3D%20%u8BFB%u53D6%u6570%u636E%0A%0A%21%5BAlt%20text%5D%28./1517198107099.png%29%0A%0A%0A%u5F02%u6B65%20IO%20%u7684%u7279%u70B9%u5C31%u662F%u628A%20IO%20%u5904%u7406%u7684%u4E8B%u60C5%u90FD%u4EA4%u7ED9%u4E86%u64CD%u4F5C%u7CFB%u7EDF%uFF08%u7F8E%u56E2%u5916%u5356%uFF09%uFF0C%u8FD9%u6837%u7EBF%u7A0B%u5C31%u4E0D%u4F1A%u88AB%20IO%20%u963B%u585E%uFF0C%u53EF%u4EE5%u7EE7%u7EED%u5904%u7406%u5176%u4ED6%u8BF7%u6C42%0A%0A%23%23%23%23%20Node%20%u7684%u5F02%u6B65IO%0ANode.js%20%u7684%u5F02%u6B65%20IO%20%u7531%20Libuv%20%u8FD9%u4E2A%u5E93%u63D0%u4F9B%u5B9E%u73B0%uFF0CLibuv%20%u662F%20Node.js%20%u5173%u952E%u7684%u4E00%u4E2A%u7EC4%u6210%u90E8%u5206%uFF0C%u5B83%u4E3A%u4E0A%u5C42%u7684%20Node.js%20%u63D0%u4F9B%u4E86%u7EDF%u4E00%u7684%20API%20%u8C03%u7528%uFF0C%u4F7F%u5176%u4E0D%u7528%u8003%u8651%u5E73%u53F0%u5DEE%u8DDD%uFF0C%u9690%u85CF%u4E86%u5E95%u5C42%u5B9E%u73B0%u3002%0A%21%5BAlt%20text%5D%28./1516177769030.png%29%0A%0A%u53EF%u4EE5%u770B%u51FA%uFF0C%u5B83%u63D0%u4F9B%u4E86%u975E%u963B%u585E%u7684%u7F51%u7EDC%20I/O%uFF0C%u5F02%u6B65%u6587%u4EF6%u7CFB%u7EDF%u8BBF%u95EE%u7B49%u529F%u80FD%uFF0C%u800C%u4E14%u53F3%u4E0B%u89D2%u5C45%u7136%u8FD8%u6709%u4E2A%u7EBF%u7A0B%u6C60%uFF0C%u5B9E%u9645%u4E0A%20Libuv%20%u6536%u5230%u7684%20IO%20%u8BF7%u6C42%u662F%u540C%u4E2A%u591A%u7EBF%u7A0B%u6765%u5B9E%u73B0%u7684%2C%20%u770B%u6765%20Node%20%u53EA%u662F%u5728%u7A0B%u5E8F%u5C42%u9762%u5355%u7EBF%u7A0B%u800C%u5DF2%0A%0A%23%23%23%20%u4E8B%u4EF6%u5FAA%u73AF%0A%0A%23%23%23%23%20%u4EFB%u52A1%u961F%u5217%0A%u5148%u770B%u770B%20Node.js%20%u7ED3%u6784%0A%0A%21%5BAlt%20text%5D%28./1516178753944.png%29%0A%0A%u6839%u636E%u4E0A%u56FE%uFF0CNode.js%u7684%u8FD0%u884C%u673A%u5236%u5982%u4E0B%u3002%0A%0A%uFF081%uFF09V8%u5F15%u64CE%u89E3%u6790JavaScript%u811A%u672C%u3002%0A%0A%uFF082%uFF09%u89E3%u6790%u540E%u7684%u4EE3%u7801%uFF0C%u8C03%u7528Node%20API%u3002%0A%0A%uFF083%uFF09libuv%u5E93%u8D1F%u8D23Node%20API%u7684%u6267%u884C%u3002%u5B83%u5C06%u4E0D%u540C%u7684%u4EFB%u52A1%u5206%u914D%u7ED9%u4E0D%u540C%u7684%u7EBF%u7A0B%uFF0C%u5F62%u6210%u4E00%u4E2AEvent%20Loop%uFF08%u4E8B%u4EF6%u5FAA%u73AF%uFF09%uFF0C%u4EE5%u5F02%u6B65%u7684%u65B9%u5F0F%u5C06%u4EFB%u52A1%u7684%u6267%u884C%u7ED3%u679C%u8FD4%u56DE%u7ED9V8%u5F15%u64CE%uFF08callback%20%u5904%u7406%u7ED3%u679C%uFF09%u3002%0A%0A%uFF084%uFF09V8%u5F15%u64CE%u518D%u5C06%u7ED3%u679C%u8FD4%u56DE%u7ED9%u7528%u6237%u3002%0A%0A%u5F02%u6B65%u64CD%u4F5C%u90FD%u4F1A%u88AB%u538B%u5165%u4EFB%u52A1%u961F%u5217%uFF0C%u5F53%u4EFB%u52A1%u961F%u5217%u4E3A%u7A7A%u7684%u65F6%u5019%uFF0C%u7A0B%u5E8F%u9000%u51FA%u3002%0A%0A%23%23%23%23%20%u793A%u4F8B%u4EE3%u7801%0A%0A%0A%0A%23%23%23%20%u603B%u7ED3%0ALibuv%20%u4F7F%u7528%u5F02%u6B65IO%20+%20%u7EBF%u7A0B%u6C60%u5B9E%u73B0%u7684%u4E8B%u4EF6%u5FAA%u73AF%u5904%u7406%u673A%u5236%u63D0%u4F9B%u7684%u9AD8%u6548%u7684%20IO%20%u5904%u7406%uFF0C%u662F%20Node%20%u80FD%u627F%u62C5%u9AD8%u5E76%u53D1%u8BF7%u6C42%u7684%u4E3B%u8981%u539F%u56E0%0A%0A%0A%23%23%23%20%u53C2%u8003%u6587%u7AE0%u4E0E%u4E66%u7C4D%0A%u300A%u6DF1%u5165%u6D45%u51FANode.js%u300B%0A%u300AUnix%20%u7F51%u7EDC%u7F16%u7A0B%u300B%0A%u300A%u4E03%u5468%u4E03%u5E76%u53D1%u6A21%u578B%u300B%0A%5B%u5E76%u53D1%u4E0E%u5E76%u884C%u7684%u533A%u522B%5D%28https%3A//www.zhihu.com/question/33515481%29%20%0A%5BJavaScript%20%u8FD0%u884C%u673A%u5236%u8BE6%u89E3%uFF1A%u518D%u8C08Event%20Loop%5D%28http%3A//www.ruanyifeng.com/blog/2014/10/event-loop.html%29%20%0A%5B%u600E%u6837%u7406%u89E3%u963B%u585E%u975E%u963B%u585E%u4E0E%u540C%u6B65%u5F02%u6B65%u7684%u533A%u522B%uFF1F%20-%20%u5927%u59DA%u7684%u56DE%u7B54%20-%20%u77E5%u4E4E%5D%28https%3A//www.zhihu.com/question/19732473/answer/26101328%29%0A%5BNode.js%20%u63A2%u79D8%uFF1A%u521D%u8BC6%u5355%u7EBF%u7A0B%u7684%20Node.js%5D%28http%3A//taobaofed.org/blog/2015/10/29/deep-into-node-1/%29%0A%5BLinux%20IO%u6A21%u5F0F%u53CA%20select%u3001poll%u3001epoll%u8BE6%u89E3%5D%28https%3A//segmentfault.com/a/1190000003063859%29%20%0A%0AUML%0A%21%5BAlt%20text%5D%28./%u540C%u6B65%u5F02%u6B65.puml%29%0A</center>"
  },
  {
    "title": "Node.js 异步编程",
    "created": "2017-12-18T00:28:06.000Z",
    "updated": "2018-01-20T00:36:21.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=9c986660-9740-4539-be1b-dee6b4172e70&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n`我写的东西` `编程相关` `Node` `posts`\n\n### 异步的最终解决方案\n\n在 2017 年，Node 7.6 终于支持了 Async/Await ，async 函数就是 Generator 函数的语法糖，是 JS 异步编程的最终解决方案。\n\n可以认为：\n\n`async 函数 == co + generator 函数`\n\n比起 co，async 有以下优点\n\n1.  **更好的语义** async 和 await，比起星号和 yield，语义更清楚了。async 表示函数里有异步操作，await 表示紧跟在后面的表达式需要等待结果；\n2.  **更广的适用性**。 co 函数库约定，yield 命令后面只能是 Thunk 函数或 Promise 对象，而 async 函数的 await 命令后面，可以跟 Promise 对象和原始类型的值（数值、字符串和布尔值，但这时等同于同步操作）\n\n在此之前，JS 的异步编程经历了 Callback、Promise、Generator、Async 的进化，接下来我们过一遍异步发展历程\n\n### 回调函数 Callback\n\n在 JS 中，异步编程通过 Callback 完成，将一个函数作为另一个异步函数的参数，用于处理异步结果，一个例子：\n\n    Something.save(function(err) {  if (err) {  //error handling  return; // 没有返回值  }  console.log('success'); }); \n\n过度使用回调函数所会遇到的挑战：\n\n*   如果不能合理的组织代码，非常容易造成回调地狱（callback hell），这会使得你的代码很难被别人所理解。\n*   很容易遗漏错误处理代码。\n*   无法使用return语句返回值，并且也不能使用throw关键字\n\n也正是基于这些原因，在JavaScript世界中，一直都在寻找着能够让异步JavaScript开发变得更简单的可行的方案。\n\n一个可行的解决方案之一是async模块。如果你和回调函数打过很久的交道， 你也许会深刻地感受到，在JavaScript中如果想要让某些事并行执行，或是串行执行，甚至是使用异步函数来映射（mapping） 数组中的元素使用异步函数有多复杂。所以，感谢 Caolan McMahon写了async模块来解决这些问题。\n\n使用async模块，你可以轻松地以下面这种方式编写代码：\n\n    async.map([1, 2, 3], AsyncSquaringLibrary.square,  function(err, result){  // result will be [1, 4, 9] }); \n\nasync模块虽然一定程度上带来了便利，但仍然不够简单，代码也不容易阅读，因此Promise出现了。\n\n### Promise 函数\n\nPromise 的写法：\n\n    Something.save()  .then(function() {  console.log('success');  })  .catch(function() {  //error handling  }) \n\nthen 和 catch 注册的回调函数分别处理下一步处理和异常处理，这样写的优点是可以链式操作：\n\n    saveSomething()  .then(updateOtherthing)  .then(deleteStuff)  .then(logResults); \n\n只是回调函数的另一种写法，把回调函数的横向加载，改成纵向加载，缺点是代码一堆的 then。\n\n### Generator 函数\n\nGenerator 函数是协程在 ES6 的实现，最大特点就是可以交出函数的执行权，注意它不是语法糖。\n\n    第一步，协程A开始执行。  第二步，协程A执行到一半，进入暂停，执行权转移到协程B。  第三步，（一段时间后）协程B交还执行权。  第四步，协程A恢复执行。 \n\n    function* gen(x){  var y = yield x + 2;  return y; } \n\n上面代码就是一个 Generator 函数。它不同于普通函数，是可以暂停执行的，所以函数名之前要加星号，以示区别。\n\n整个 Generator 函数就是一个封装的异步任务，或者说是异步任务的容器。异步操作需要暂停的地方，都用 yield 语句注明。Generator 函数的执行方法如下。\n\n    var g = gen(1); g.next() // { value: 3, done: false } g.next() // { value: undefined, done: true } \n\nGenerator 函数可以暂停执行和恢复执行，这是它能封装异步任务的根本原因。除此之外，它还有两个特性，使它可以作为异步编程的完整解决方案：**函数体内外的数据交换**和**错误处理机制**。\n\n1.  数据交换：`g.next(data);`\n\n2.  错误处理：`g.throw('出错了');`\n\nGenerator 最大的问题是要手动调用 next() 才会执行下一步，因此自动执行器 co 出现了\n\n### co 执行器\n\nco 函数库的用法：\n\n    var co = require('co'); co(gen); \n\nGenerator 自动执行需要一种机制，**当异步操作有了结果，能够自动交回执行权**。  \n两种方法可以做到这一点。\n\n> （1）回调函数。将异步操作包装成 Thunk 函数，在回调函数里面交回执行权。  \n> （2）Promise 对象。将异步操作包装成 Promise对象，用 then 方法交回执行权。\n\nco 函数的具体实现见文末参考文章，这里就不重复了\n\n### 拓展阅读：其他语言的异步编程\n\nC# 也有 async await 关键字，用于异步调用，内部实现基于线程  \n[http://www.cnblogs.com/jesse2013/p/async-and-await.html](http://www.cnblogs.com/jesse2013/p/async-and-await.html)\n\nJava Spring 框架有 @Async 注解，用于异步调用，内部实现基于线程  \n[https://spring.io/guides/gs/async-method/](https://spring.io/guides/gs/async-method/)\n\n### 参考文章\n\n1.  [细说JavaScript异步函数发展历程](http://www.csdn.net/article/2015-09-08/2825643-asynchronous-javascript)\n2.  [async 函数的含义和用法](http://www.ruanyifeng.com/blog/2015/05/async.html)\n3.  [Generator 函数的含义与用法](http://www.ruanyifeng.com/blog/2015/04/generator.html)\n4.  [co 函数库的含义和用法](http://www.ruanyifeng.com/blog/2015/05/co.html)\n\n<center style=\"display:none\">%23%20Node.js%20%u5F02%u6B65%u7F16%u7A0B%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5B%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%2C%20posts%5D%0A%0A%0A%23%23%23%20%u5F02%u6B65%u7684%u6700%u7EC8%u89E3%u51B3%u65B9%u6848%0A%0A%u5728%202017%20%u5E74%uFF0CNode%207.6%20%u7EC8%u4E8E%u652F%u6301%u4E86%20Async/Await%20%uFF0Casync%20%u51FD%u6570%u5C31%u662F%20Generator%20%u51FD%u6570%u7684%u8BED%u6CD5%u7CD6%uFF0C%u662F%20JS%20%u5F02%u6B65%u7F16%u7A0B%u7684%u6700%u7EC8%u89E3%u51B3%u65B9%u6848%u3002%0A%0A%u53EF%u4EE5%u8BA4%u4E3A%uFF1A%0A%0A%60async%20%u51FD%u6570%20%3D%3D%20co%20+%20generator%20%u51FD%u6570%60%0A%0A%u6BD4%u8D77%20co%uFF0Casync%20%u6709%u4EE5%u4E0B%u4F18%u70B9%0A1.%20**%u66F4%u597D%u7684%u8BED%u4E49**%20async%20%u548C%20await%uFF0C%u6BD4%u8D77%u661F%u53F7%u548C%20yield%uFF0C%u8BED%u4E49%u66F4%u6E05%u695A%u4E86%u3002async%20%u8868%u793A%u51FD%u6570%u91CC%u6709%u5F02%u6B65%u64CD%u4F5C%uFF0Cawait%20%u8868%u793A%u7D27%u8DDF%u5728%u540E%u9762%u7684%u8868%u8FBE%u5F0F%u9700%u8981%u7B49%u5F85%u7ED3%u679C%uFF1B%0A2.%20**%u66F4%u5E7F%u7684%u9002%u7528%u6027**%u3002%20co%20%u51FD%u6570%u5E93%u7EA6%u5B9A%uFF0Cyield%20%u547D%u4EE4%u540E%u9762%u53EA%u80FD%u662F%20Thunk%20%u51FD%u6570%u6216%20Promise%20%u5BF9%u8C61%uFF0C%u800C%20async%20%u51FD%u6570%u7684%20await%20%u547D%u4EE4%u540E%u9762%uFF0C%u53EF%u4EE5%u8DDF%20Promise%20%u5BF9%u8C61%u548C%u539F%u59CB%u7C7B%u578B%u7684%u503C%uFF08%u6570%u503C%u3001%u5B57%u7B26%u4E32%u548C%u5E03%u5C14%u503C%uFF0C%u4F46%u8FD9%u65F6%u7B49%u540C%u4E8E%u540C%u6B65%u64CD%u4F5C%uFF09%0A%0A%u5728%u6B64%u4E4B%u524D%uFF0CJS%20%u7684%u5F02%u6B65%u7F16%u7A0B%u7ECF%u5386%u4E86%20Callback%u3001Promise%u3001Generator%u3001Async%20%u7684%u8FDB%u5316%uFF0C%u63A5%u4E0B%u6765%u6211%u4EEC%u8FC7%u4E00%u904D%u5F02%u6B65%u53D1%u5C55%u5386%u7A0B%0A%0A%23%23%23%20%u56DE%u8C03%u51FD%u6570%20Callback%0A%u5728%20JS%20%20%u4E2D%uFF0C%u5F02%u6B65%u7F16%u7A0B%u901A%u8FC7%20Callback%20%u5B8C%u6210%uFF0C%u5C06%u4E00%u4E2A%u51FD%u6570%u4F5C%u4E3A%u53E6%u4E00%u4E2A%u5F02%u6B65%u51FD%u6570%u7684%u53C2%u6570%uFF0C%u7528%u4E8E%u5904%u7406%u5F02%u6B65%u7ED3%u679C%uFF0C%u4E00%u4E2A%u4F8B%u5B50%uFF1A%0A%0A%60%60%60%0ASomething.save%28function%28err%29%20%7B%20%20%0A%20%20if%20%28err%29%20%20%7B%0A%20%20%20%20//error%20handling%0A%20%20%20%20return%3B%20//%20%u6CA1%u6709%u8FD4%u56DE%u503C%0A%20%20%7D%0A%20%20console.log%28%27success%27%29%3B%0A%7D%29%3B%0A%60%60%60%0A%0A%u8FC7%u5EA6%u4F7F%u7528%u56DE%u8C03%u51FD%u6570%u6240%u4F1A%u9047%u5230%u7684%u6311%u6218%uFF1A%0A%0A-%20%u5982%u679C%u4E0D%u80FD%u5408%u7406%u7684%u7EC4%u7EC7%u4EE3%u7801%uFF0C%u975E%u5E38%u5BB9%u6613%u9020%u6210%u56DE%u8C03%u5730%u72F1%uFF08callback%20hell%uFF09%uFF0C%u8FD9%u4F1A%u4F7F%u5F97%u4F60%u7684%u4EE3%u7801%u5F88%u96BE%u88AB%u522B%u4EBA%u6240%u7406%u89E3%u3002%0A-%20%u5F88%u5BB9%u6613%u9057%u6F0F%u9519%u8BEF%u5904%u7406%u4EE3%u7801%u3002%0A-%20%u65E0%u6CD5%u4F7F%u7528return%u8BED%u53E5%u8FD4%u56DE%u503C%uFF0C%u5E76%u4E14%u4E5F%u4E0D%u80FD%u4F7F%u7528throw%u5173%u952E%u5B57%0A%0A%u4E5F%u6B63%u662F%u57FA%u4E8E%u8FD9%u4E9B%u539F%u56E0%uFF0C%u5728JavaScript%u4E16%u754C%u4E2D%uFF0C%u4E00%u76F4%u90FD%u5728%u5BFB%u627E%u7740%u80FD%u591F%u8BA9%u5F02%u6B65JavaScript%u5F00%u53D1%u53D8%u5F97%u66F4%u7B80%u5355%u7684%u53EF%u884C%u7684%u65B9%u6848%u3002%0A%0A%u4E00%u4E2A%u53EF%u884C%u7684%u89E3%u51B3%u65B9%u6848%u4E4B%u4E00%u662Fasync%u6A21%u5757%u3002%u5982%u679C%u4F60%u548C%u56DE%u8C03%u51FD%u6570%u6253%u8FC7%u5F88%u4E45%u7684%u4EA4%u9053%uFF0C%20%u4F60%u4E5F%u8BB8%u4F1A%u6DF1%u523B%u5730%u611F%u53D7%u5230%uFF0C%u5728JavaScript%u4E2D%u5982%u679C%u60F3%u8981%u8BA9%u67D0%u4E9B%u4E8B%u5E76%u884C%u6267%u884C%uFF0C%u6216%u662F%u4E32%u884C%u6267%u884C%uFF0C%u751A%u81F3%u662F%u4F7F%u7528%u5F02%u6B65%u51FD%u6570%u6765%u6620%u5C04%uFF08mapping%uFF09%20%u6570%u7EC4%u4E2D%u7684%u5143%u7D20%u4F7F%u7528%u5F02%u6B65%u51FD%u6570%u6709%u591A%u590D%u6742%u3002%u6240%u4EE5%uFF0C%u611F%u8C22%20Caolan%20McMahon%u5199%u4E86async%u6A21%u5757%u6765%u89E3%u51B3%u8FD9%u4E9B%u95EE%u9898%u3002%0A%0A%u4F7F%u7528async%u6A21%u5757%uFF0C%u4F60%u53EF%u4EE5%u8F7B%u677E%u5730%u4EE5%u4E0B%u9762%u8FD9%u79CD%u65B9%u5F0F%u7F16%u5199%u4EE3%u7801%uFF1A%0A%0A%60%60%60%0Aasync.map%28%5B1%2C%202%2C%203%5D%2C%20AsyncSquaringLibrary.square%2C%20%20%0A%20%20function%28err%2C%20result%29%7B%0A%20%20//%20result%20will%20be%20%5B1%2C%204%2C%209%5D%0A%7D%29%3B%0A%60%60%60%0A%0Aasync%u6A21%u5757%u867D%u7136%u4E00%u5B9A%u7A0B%u5EA6%u4E0A%u5E26%u6765%u4E86%u4FBF%u5229%uFF0C%u4F46%u4ECD%u7136%u4E0D%u591F%u7B80%u5355%uFF0C%u4EE3%u7801%u4E5F%u4E0D%u5BB9%u6613%u9605%u8BFB%uFF0C%u56E0%u6B64Promise%u51FA%u73B0%u4E86%u3002%0A%0A%23%23%23%20Promise%20%u51FD%u6570%0A%0APromise%20%u7684%u5199%u6CD5%uFF1A%0A%60%60%60%0ASomething.save%28%29%20%20%0A%20%20.then%28function%28%29%20%7B%0A%20%20%20%20console.log%28%27success%27%29%3B%0A%20%20%7D%29%0A%20%20.catch%28function%28%29%20%7B%0A%20%20%20%20//error%20handling%0A%20%20%7D%29%0A%60%60%60%0Athen%20%u548C%20catch%20%u6CE8%u518C%u7684%u56DE%u8C03%u51FD%u6570%u5206%u522B%u5904%u7406%u4E0B%u4E00%u6B65%u5904%u7406%u548C%u5F02%u5E38%u5904%u7406%uFF0C%u8FD9%u6837%u5199%u7684%u4F18%u70B9%u662F%u53EF%u4EE5%u94FE%u5F0F%u64CD%u4F5C%uFF1A%0A%0A%60%60%60%0AsaveSomething%28%29%20%20%0A%20%20.then%28updateOtherthing%29%0A%20%20.then%28deleteStuff%29%20%20%0A%20%20.then%28logResults%29%3B%0A%60%60%60%0A%0A%u53EA%u662F%u56DE%u8C03%u51FD%u6570%u7684%u53E6%u4E00%u79CD%u5199%u6CD5%uFF0C%u628A%u56DE%u8C03%u51FD%u6570%u7684%u6A2A%u5411%u52A0%u8F7D%uFF0C%u6539%u6210%u7EB5%u5411%u52A0%u8F7D%uFF0C%u7F3A%u70B9%u662F%u4EE3%u7801%u4E00%u5806%u7684%20then%u3002%0A%0A%23%23%23%20Generator%20%u51FD%u6570%0A%0AGenerator%20%u51FD%u6570%u662F%u534F%u7A0B%u5728%20ES6%20%u7684%u5B9E%u73B0%uFF0C%u6700%u5927%u7279%u70B9%u5C31%u662F%u53EF%u4EE5%u4EA4%u51FA%u51FD%u6570%u7684%u6267%u884C%u6743%uFF0C%u6CE8%u610F%u5B83%u4E0D%u662F%u8BED%u6CD5%u7CD6%u3002%0A%0A%0A%60%60%60%0A%u7B2C%u4E00%u6B65%uFF0C%u534F%u7A0BA%u5F00%u59CB%u6267%u884C%u3002%0A%0A%u7B2C%u4E8C%u6B65%uFF0C%u534F%u7A0BA%u6267%u884C%u5230%u4E00%u534A%uFF0C%u8FDB%u5165%u6682%u505C%uFF0C%u6267%u884C%u6743%u8F6C%u79FB%u5230%u534F%u7A0BB%u3002%0A%0A%u7B2C%u4E09%u6B65%uFF0C%uFF08%u4E00%u6BB5%u65F6%u95F4%u540E%uFF09%u534F%u7A0BB%u4EA4%u8FD8%u6267%u884C%u6743%u3002%0A%0A%u7B2C%u56DB%u6B65%uFF0C%u534F%u7A0BA%u6062%u590D%u6267%u884C%u3002%0A%60%60%60%0A%0A%0A%60%60%60%0Afunction*%20gen%28x%29%7B%0A%20%20var%20y%20%3D%20yield%20x%20+%202%3B%0A%20%20return%20y%3B%0A%7D%0A%60%60%60%0A%u4E0A%u9762%u4EE3%u7801%u5C31%u662F%u4E00%u4E2A%20Generator%20%u51FD%u6570%u3002%u5B83%u4E0D%u540C%u4E8E%u666E%u901A%u51FD%u6570%uFF0C%u662F%u53EF%u4EE5%u6682%u505C%u6267%u884C%u7684%uFF0C%u6240%u4EE5%u51FD%u6570%u540D%u4E4B%u524D%u8981%u52A0%u661F%u53F7%uFF0C%u4EE5%u793A%u533A%u522B%u3002%0A%0A%u6574%u4E2A%20Generator%20%u51FD%u6570%u5C31%u662F%u4E00%u4E2A%u5C01%u88C5%u7684%u5F02%u6B65%u4EFB%u52A1%uFF0C%u6216%u8005%u8BF4%u662F%u5F02%u6B65%u4EFB%u52A1%u7684%u5BB9%u5668%u3002%u5F02%u6B65%u64CD%u4F5C%u9700%u8981%u6682%u505C%u7684%u5730%u65B9%uFF0C%u90FD%u7528%20yield%20%u8BED%u53E5%u6CE8%u660E%u3002Generator%20%u51FD%u6570%u7684%u6267%u884C%u65B9%u6CD5%u5982%u4E0B%u3002%0A%0A%60%60%60%0Avar%20g%20%3D%20gen%281%29%3B%0Ag.next%28%29%20//%20%7B%20value%3A%203%2C%20done%3A%20false%20%7D%0Ag.next%28%29%20//%20%7B%20value%3A%20undefined%2C%20done%3A%20true%20%7D%0A%60%60%60%0A%0AGenerator%20%u51FD%u6570%u53EF%u4EE5%u6682%u505C%u6267%u884C%u548C%u6062%u590D%u6267%u884C%uFF0C%u8FD9%u662F%u5B83%u80FD%u5C01%u88C5%u5F02%u6B65%u4EFB%u52A1%u7684%u6839%u672C%u539F%u56E0%u3002%u9664%u6B64%u4E4B%u5916%uFF0C%u5B83%u8FD8%u6709%u4E24%u4E2A%u7279%u6027%uFF0C%u4F7F%u5B83%u53EF%u4EE5%u4F5C%u4E3A%u5F02%u6B65%u7F16%u7A0B%u7684%u5B8C%u6574%u89E3%u51B3%u65B9%u6848%uFF1A**%u51FD%u6570%u4F53%u5185%u5916%u7684%u6570%u636E%u4EA4%u6362**%u548C**%u9519%u8BEF%u5904%u7406%u673A%u5236**%u3002%0A%0A1.%20%u6570%u636E%u4EA4%u6362%uFF1A%60g.next%28data%29%3B%60%0A%0A2.%20%u9519%u8BEF%u5904%u7406%uFF1A%60g.throw%28%27%u51FA%u9519%u4E86%27%29%3B%60%0A%0AGenerator%20%u6700%u5927%u7684%u95EE%u9898%u662F%u8981%u624B%u52A8%u8C03%u7528%20next%28%29%20%u624D%u4F1A%u6267%u884C%u4E0B%u4E00%u6B65%uFF0C%u56E0%u6B64%u81EA%u52A8%u6267%u884C%u5668%20co%20%u51FA%u73B0%u4E86%0A%0A%23%23%23%20co%20%u6267%u884C%u5668%0Aco%20%u51FD%u6570%u5E93%u7684%u7528%u6CD5%uFF1A%0A%0A%60%60%60%0Avar%20co%20%3D%20require%28%27co%27%29%3B%0Aco%28gen%29%3B%0A%60%60%60%0A%0AGenerator%20%u81EA%u52A8%u6267%u884C%u9700%u8981%u4E00%u79CD%u673A%u5236%uFF0C**%u5F53%u5F02%u6B65%u64CD%u4F5C%u6709%u4E86%u7ED3%u679C%uFF0C%u80FD%u591F%u81EA%u52A8%u4EA4%u56DE%u6267%u884C%u6743**%u3002%0A%u4E24%u79CD%u65B9%u6CD5%u53EF%u4EE5%u505A%u5230%u8FD9%u4E00%u70B9%u3002%0A%0A%3E%20%uFF081%uFF09%u56DE%u8C03%u51FD%u6570%u3002%u5C06%u5F02%u6B65%u64CD%u4F5C%u5305%u88C5%u6210%20Thunk%20%u51FD%u6570%uFF0C%u5728%u56DE%u8C03%u51FD%u6570%u91CC%u9762%u4EA4%u56DE%u6267%u884C%u6743%u3002%0A%3E%20%uFF082%uFF09Promise%20%u5BF9%u8C61%u3002%u5C06%u5F02%u6B65%u64CD%u4F5C%u5305%u88C5%u6210%20Promise%u5BF9%u8C61%uFF0C%u7528%20then%20%u65B9%u6CD5%u4EA4%u56DE%u6267%u884C%u6743%u3002%0A%0Aco%20%u51FD%u6570%u7684%u5177%u4F53%u5B9E%u73B0%u89C1%u6587%u672B%u53C2%u8003%u6587%u7AE0%uFF0C%u8FD9%u91CC%u5C31%u4E0D%u91CD%u590D%u4E86%0A%0A%23%23%23%20%u62D3%u5C55%u9605%u8BFB%uFF1A%u5176%u4ED6%u8BED%u8A00%u7684%u5F02%u6B65%u7F16%u7A0B%0A%0AC%23%20%u4E5F%u6709%20async%20await%20%u5173%u952E%u5B57%uFF0C%u7528%u4E8E%u5F02%u6B65%u8C03%u7528%uFF0C%u5185%u90E8%u5B9E%u73B0%u57FA%u4E8E%u7EBF%u7A0B%20%20%20%20%0Ahttp%3A//www.cnblogs.com/jesse2013/p/async-and-await.html%0A%20%20%20%20%0AJava%20Spring%20%u6846%u67B6%u6709%20@Async%20%u6CE8%u89E3%uFF0C%u7528%u4E8E%u5F02%u6B65%u8C03%u7528%uFF0C%u5185%u90E8%u5B9E%u73B0%u57FA%u4E8E%u7EBF%u7A0B%0A%20%20%20%20https%3A//spring.io/guides/gs/async-method/%0A%0A%23%23%23%20%u53C2%u8003%u6587%u7AE0%0A1.%20%5B%u7EC6%u8BF4JavaScript%u5F02%u6B65%u51FD%u6570%u53D1%u5C55%u5386%u7A0B%5D%28http%3A//www.csdn.net/article/2015-09-08/2825643-asynchronous-javascript%29%0A1.%20%5Basync%20%u51FD%u6570%u7684%u542B%u4E49%u548C%u7528%u6CD5%5D%28http%3A//www.ruanyifeng.com/blog/2015/05/async.html%29%0A2.%20%5BGenerator%20%u51FD%u6570%u7684%u542B%u4E49%u4E0E%u7528%u6CD5%5D%28http%3A//www.ruanyifeng.com/blog/2015/04/generator.html%29%0A3.%20%5Bco%20%u51FD%u6570%u5E93%u7684%u542B%u4E49%u548C%u7528%u6CD5%5D%28http%3A//www.ruanyifeng.com/blog/2015/05/co.html%29%20%0A</center>"
  },
  {
    "title": "Node.js 内存模型",
    "created": "2017-12-17T23:30:10.000Z",
    "updated": "2018-01-18T03:17:24.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=35c1e799-4fc6-4abc-9a8a-1b9476cf6d50&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n`我写的东西` `编程相关` `Node` `posts` `编程相关`\n\n### 前言\n\n本文尝试理清 js 内存模型的相关知识点，鉴于 js 的教程非常丰富，这里就不重复写了，只建立个知识索引就好了，详细知识看文末的参考文章即可\n\n### 栈与堆\n\n基础数据类型存在栈中，对象存储在堆中\n\n1.  基础数据类型\n\n    *   Undefined\n    *   Null\n    *   Boolean\n    *   Number\n    *   String\n2.  引用类型  \n    Object、Function、Array和自定义的对象，可以看做是指针。指针是存在栈中，但是指向的变量在堆中\n\n<en-media longdesc=\"./1514879164698.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"d126b5a64524f6196375680583e2f904\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n下面代码表现了基础类型和引用类型的区别\n\n    // demo01.js var a = 20; var b = a; b = 30; // 这时 a 的值是多少？ // 20 \n\n    // demo02.js var m = { a: 10, b: 20 } var n = m; n.a = 15; // 这时 m.a 的值是多少? // 15 \n\n### 执行上下文\n\n#### 概念\n\n每次当控制器转到ECMAScript可执行代码的时候，就会进入到一个执行上下文。可执行代码的类型包括：\n\n*   全局代码（Global code）  \n    这种类型的代码是在”程序”级处理的：例如加载外部的js文件或者本地标签内的代码。全局代码不包括任何function体内的代码。 这个是默认的代码运行环境，一旦代码被载入，引擎最先进入的就是这个环境。\n*   函数代码（Function code）\n*   Eval代码（Eval code）\n\n执行栈 demo\n\n<en-media longdesc=\"./1514881368043.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"29055dd4c46759c21102778b3064b5ba\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### 建立的细节\n\n1、创建阶段【当函数被调用，但未执行任何其内部代码之前】\n\n*   创建作用域链（Scope Chain）\n\n*   创建变量，函数和参数。\n\n*   求”this“的值\n\n2、执行阶段  \n初始化变量的值和函数的引用，解释/执行代码。\n\n**我们可以将每个执行上下文抽象为一个对象，这个对象具有三个属性**\n\n    ECObj: {  scopeChain: { /* 变量对象（variableObject）+ 所有父级执行上下文的变量对象*/ },  variableObject: { /*函数 arguments/参数，内部变量和函数声明 */ },  this: {} } \n\n#### 变量对象\n\n变量对象（Variable object）是说JS的执行上下文中都有个对象用来存放执行上下文中可被访问但是不能被delete的函数标示符、形参、变量声明等。它们会被挂在这个对象上。\n\n#### 代码示例\n\n    var color = 'blue';  function changeColor() {  var anotherColor = 'red';   function swapColors() {  var tempColor = anotherColor;  anotherColor = color;  color = tempColor;  }   swapColors(); }  changeColor(); \n\n### 闭包概念\n\nMDN 对闭包的定义为：\n\n> 闭包是指那些能够访问自由变量的函数。\n\n那什么是自由变量呢？\n\n> 自由变量是指在函数中使用的，但既不是函数参数也不是函数的局部变量的变量。\n\n由此，我们可以看出闭包共有两部分组成：\n\n> 闭包 = 函数 + 函数能够访问的自由变量\n\n举个例子：\n\n    var a = 1;  function foo() {  console.log(a); }  foo(); \n\nfoo 函数可以访问变量 a，但是 a 既不是 foo 函数的局部变量，也不是 foo 函数的参数，所以 a 就是自由变量。\n\n那么，函数 foo + foo 函数访问的自由变量 a 就构成了一个闭包\n\njs 不会销毁被闭包引用的对象\n\n### GC 垃圾回收\n\nGarbage Collection 垃圾回收是一种自动的内存管理机制。当一个电脑上的动态内存不再需要时，就应该予以释放，以让出内存，这种内存资源管理，称为垃圾回收。\n\n#### 新生代和老生代内存分区\n\n为什么要分区？为了 GC 效率\n\n#### 新生代的 GC 算法\n\nScavenge 算法，它将堆内存一分为二，将存活对象在从空间 1 复制到空间 2，其他对象被回收。特点是速度快。新生代内存的对象过大或者存活时间过长就会去到老生代内存。\n\n#### 老生代的 GC 算法\n\nMark-Sweep 标记清除算法，标记清除回收之后，内存会变得碎片化。  \nMark-Compact 标记整理算法，在整理过程中，将活着的对象往一端移动，移动完成后，直接清理掉边界外的内存。\n\n#### 内存泄露\n\n本质上，内存泄漏可以定义为：应用程序不再需要占用内存的时候，由于某些原因，内存没有被操作系统或可用内存池回收。编程语言管理内存的方式各不相同。只有开发者最清楚哪些内存不需要了，操作系统可以回收。一些编程语言提供了语言特性，可以帮助开发者做此类事情。另一些则寄希望于开发者对内存是否需要清晰明了。\n\n#### 排除方法\n\n1.  抓下内存快照，使用 chrome 分析，使用框架和各种库的时候干扰项非常多\n2.  [alinode](https://alinode.aliyun.com/)\n\n### 参考文章\n\n重要\n\n1.  [深入理解闭包（五）——作用域、作用域链和执行上下文](https://wanghan0.github.io/2017/05/07/closure5/)\n2.  [深入理解JavaScript闭包【译】](http://www.cnblogs.com/zldream1106/p/how-do-javascript-closures-work.html)\n3.  [深入理解JavaScript执行上下文、函数堆栈、提升的概念](https://segmentfault.com/a/1190000009041008)\n4.  [MDN 函数](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Functions#%E9%97%AD%E5%8C%85%28Closures%29)\n5.  [JavaScript深入之闭包](https://github.com/mqyqingfeng/Blog/issues/9)\n6.  [轻松排查线上Node内存泄漏问题](https://cnodejs.org/topic/58eb5d378cda07442731569f)\n7.  [4类 JavaScript 内存泄漏及如何避免](https://jinlong.github.io/2016/05/01/4-Types-of-Memory-Leaks-in-JavaScript-and-How-to-Get-Rid-Of-Them/) 介绍了如何使用 chrome dev tool 排查内存泄露\n\n不重要\n\n1.  [解读 V8 GC Log（二）: 堆内外内存的划分与 GC 算法](http://alinode.aliyun.com/blog/38)  \n\n    1.  [Node 性能优化](https://myfjdthink.com/2016/03/22/node-%E6%80%A7%E8%83%BD%E4%BC%98%E5%8C%96/)\n2.  [解读 V8 GC Log（一）: Node.js 应用背景与 GC 基础知识](http://alinode.aliyun.com/blog/37)\n3.  [NodeJS中被忽略的内存](http://huang-jerryc.com/2016/04/14/NodeJS%E4%B8%AD%E8%A2%AB%E5%BF%BD%E7%95%A5%E7%9A%84%E5%86%85%E5%AD%98/)\n4.  [前端基础进阶（一）：内存空间详细图解](http://leanote.com/blog/post/59128586ab644166f800ab45)\n5.  [前端基础进阶（二）：执行上下文详细图解](http://www.php.cn/js-tutorial-351911.html)\n6.  [JavaScript 内存模型](https://rawbin-.github.io/web%E5%BC%80%E5%8F%91/%E5%89%8D%E7%AB%AF%E5%BC%80%E5%8F%91/javascript/2017/05/08/js-memory-management/)\n\n<center style=\"display:none\">%23%23%23Node.js%20%u5185%u5B58%u6A21%u578B%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5B%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%2C%20posts%2C%20%u7F16%u7A0B%u76F8%u5173%5D%0A%0A%23%23%23%20%u524D%u8A00%0A%u672C%u6587%u5C1D%u8BD5%u7406%u6E05%20js%20%u5185%u5B58%u6A21%u578B%u7684%u76F8%u5173%u77E5%u8BC6%u70B9%uFF0C%u9274%u4E8E%20js%20%u7684%u6559%u7A0B%u975E%u5E38%u4E30%u5BCC%uFF0C%u8FD9%u91CC%u5C31%u4E0D%u91CD%u590D%u5199%u4E86%uFF0C%u53EA%u5EFA%u7ACB%u4E2A%u77E5%u8BC6%u7D22%u5F15%u5C31%u597D%u4E86%uFF0C%u8BE6%u7EC6%u77E5%u8BC6%u770B%u6587%u672B%u7684%u53C2%u8003%u6587%u7AE0%u5373%u53EF%0A%0A%23%23%23%20%u6808%u4E0E%u5806%0A%u57FA%u7840%u6570%u636E%u7C7B%u578B%u5B58%u5728%u6808%u4E2D%uFF0C%u5BF9%u8C61%u5B58%u50A8%u5728%u5806%u4E2D%0A%0A1.%20%u57FA%u7840%u6570%u636E%u7C7B%u578B%0A-%20Undefined%0A-%20Null%0A-%20Boolean%0A-%20Number%0A-%20String%0A%0A2.%20%u5F15%u7528%u7C7B%u578B%0AObject%u3001Function%u3001Array%u548C%u81EA%u5B9A%u4E49%u7684%u5BF9%u8C61%uFF0C%u53EF%u4EE5%u770B%u505A%u662F%u6307%u9488%u3002%u6307%u9488%u662F%u5B58%u5728%u6808%u4E2D%uFF0C%u4F46%u662F%u6307%u5411%u7684%u53D8%u91CF%u5728%u5806%u4E2D%0A%0A%21%5BAlt%20text%5D%28./1514879164698.png%29%0A%0A%u4E0B%u9762%u4EE3%u7801%u8868%u73B0%u4E86%u57FA%u7840%u7C7B%u578B%u548C%u5F15%u7528%u7C7B%u578B%u7684%u533A%u522B%0A%0A%60%60%60%0A//%20demo01.js%0Avar%20a%20%3D%2020%3B%0Avar%20b%20%3D%20a%3B%0Ab%20%3D%2030%3B%0A//%20%u8FD9%u65F6%20a%20%u7684%u503C%u662F%u591A%u5C11%uFF1F%20//%2020%0A%60%60%60%0A%0A%60%60%60%0A//%20demo02.js%0Avar%20m%20%3D%20%7B%20a%3A%2010%2C%20b%3A%2020%20%7D%0Avar%20n%20%3D%20m%3B%0An.a%20%3D%2015%3B%0A//%20%u8FD9%u65F6%20m.a%20%u7684%u503C%u662F%u591A%u5C11%3F%20//%2015%0A%60%60%60%0A%0A%0A%23%23%23%20%u6267%u884C%u4E0A%u4E0B%u6587%0A%23%23%23%23%20%u6982%u5FF5%0A%u6BCF%u6B21%u5F53%u63A7%u5236%u5668%u8F6C%u5230ECMAScript%u53EF%u6267%u884C%u4EE3%u7801%u7684%u65F6%u5019%uFF0C%u5C31%u4F1A%u8FDB%u5165%u5230%u4E00%u4E2A%u6267%u884C%u4E0A%u4E0B%u6587%u3002%u53EF%u6267%u884C%u4EE3%u7801%u7684%u7C7B%u578B%u5305%u62EC%uFF1A%0A-%20%u5168%u5C40%u4EE3%u7801%uFF08Global%20code%uFF09%0A%u8FD9%u79CD%u7C7B%u578B%u7684%u4EE3%u7801%u662F%u5728%22%u7A0B%u5E8F%22%u7EA7%u5904%u7406%u7684%uFF1A%u4F8B%u5982%u52A0%u8F7D%u5916%u90E8%u7684js%u6587%u4EF6%u6216%u8005%u672C%u5730%3Cscript%3E%3C/script%3E%u6807%u7B7E%u5185%u7684%u4EE3%u7801%u3002%u5168%u5C40%u4EE3%u7801%u4E0D%u5305%u62EC%u4EFB%u4F55function%u4F53%u5185%u7684%u4EE3%u7801%u3002%20%u8FD9%u4E2A%u662F%u9ED8%u8BA4%u7684%u4EE3%u7801%u8FD0%u884C%u73AF%u5883%uFF0C%u4E00%u65E6%u4EE3%u7801%u88AB%u8F7D%u5165%uFF0C%u5F15%u64CE%u6700%u5148%u8FDB%u5165%u7684%u5C31%u662F%u8FD9%u4E2A%u73AF%u5883%u3002%0A-%20%u51FD%u6570%u4EE3%u7801%uFF08Function%20code%uFF09%0A-%20Eval%u4EE3%u7801%uFF08Eval%20code%uFF09%0A%0A%u6267%u884C%u6808%20demo%0A%21%5BAlt%20text%5D%28./1514881368043.png%29%0A%0A%0A%23%23%23%23%20%u5EFA%u7ACB%u7684%u7EC6%u8282%0A1%u3001%u521B%u5EFA%u9636%u6BB5%u3010%u5F53%u51FD%u6570%u88AB%u8C03%u7528%uFF0C%u4F46%u672A%u6267%u884C%u4EFB%u4F55%u5176%u5185%u90E8%u4EE3%u7801%u4E4B%u524D%u3011%0A-%20%u521B%u5EFA%u4F5C%u7528%u57DF%u94FE%uFF08Scope%20Chain%uFF09%0A%0A-%20%u521B%u5EFA%u53D8%u91CF%uFF0C%u51FD%u6570%u548C%u53C2%u6570%u3002%0A%0A-%20%u6C42%u201Dthis%u201C%u7684%u503C%0A%0A2%u3001%u6267%u884C%u9636%u6BB5%0A%u521D%u59CB%u5316%u53D8%u91CF%u7684%u503C%u548C%u51FD%u6570%u7684%u5F15%u7528%uFF0C%u89E3%u91CA/%u6267%u884C%u4EE3%u7801%u3002%0A%0A**%u6211%u4EEC%u53EF%u4EE5%u5C06%u6BCF%u4E2A%u6267%u884C%u4E0A%u4E0B%u6587%u62BD%u8C61%u4E3A%u4E00%u4E2A%u5BF9%u8C61%uFF0C%u8FD9%u4E2A%u5BF9%u8C61%u5177%u6709%u4E09%u4E2A%u5C5E%u6027**%0A%0A%60%60%60%0AECObj%3A%20%7B%0A%20%20%20%20scopeChain%3A%20%7B%20/*%20%u53D8%u91CF%u5BF9%u8C61%uFF08variableObject%uFF09+%20%u6240%u6709%u7236%u7EA7%u6267%u884C%u4E0A%u4E0B%u6587%u7684%u53D8%u91CF%u5BF9%u8C61*/%20%7D%2C%20%0A%20%20%20%20variableObject%3A%20%7B%20/*%u51FD%u6570%20arguments/%u53C2%u6570%uFF0C%u5185%u90E8%u53D8%u91CF%u548C%u51FD%u6570%u58F0%u660E%20*/%20%7D%2C%20%0A%20%20%20%20this%3A%20%7B%7D%20%0A%7D%0A%60%60%60%0A%0A%23%23%23%23%20%u53D8%u91CF%u5BF9%u8C61%0A%u53D8%u91CF%u5BF9%u8C61%uFF08Variable%20object%uFF09%u662F%u8BF4JS%u7684%u6267%u884C%u4E0A%u4E0B%u6587%u4E2D%u90FD%u6709%u4E2A%u5BF9%u8C61%u7528%u6765%u5B58%u653E%u6267%u884C%u4E0A%u4E0B%u6587%u4E2D%u53EF%u88AB%u8BBF%u95EE%u4F46%u662F%u4E0D%u80FD%u88ABdelete%u7684%u51FD%u6570%u6807%u793A%u7B26%u3001%u5F62%u53C2%u3001%u53D8%u91CF%u58F0%u660E%u7B49%u3002%u5B83%u4EEC%u4F1A%u88AB%u6302%u5728%u8FD9%u4E2A%u5BF9%u8C61%u4E0A%u3002%0A%0A%23%23%23%23%20%u4EE3%u7801%u793A%u4F8B%0A%60%60%60%0Avar%20color%20%3D%20%27blue%27%3B%0A%20%0Afunction%20changeColor%28%29%20%7B%0A%20%20%20%20var%20anotherColor%20%3D%20%27red%27%3B%0A%20%0A%20%20%20%20function%20swapColors%28%29%20%7B%0A%20%20%20%20%20%20%20%20var%20tempColor%20%3D%20anotherColor%3B%0A%20%20%20%20%20%20%20%20anotherColor%20%3D%20color%3B%0A%20%20%20%20%20%20%20%20color%20%3D%20tempColor%3B%0A%20%20%20%20%7D%0A%20%0A%20%20%20%20swapColors%28%29%3B%0A%7D%0A%20%0AchangeColor%28%29%3B%0A%60%60%60%0A%0A%23%23%23%u95ED%u5305%u6982%u5FF5%0A%0A%0AMDN%20%u5BF9%u95ED%u5305%u7684%u5B9A%u4E49%u4E3A%uFF1A%0A%0A%3E%20%u95ED%u5305%u662F%u6307%u90A3%u4E9B%u80FD%u591F%u8BBF%u95EE%u81EA%u7531%u53D8%u91CF%u7684%u51FD%u6570%u3002%0A%0A%u90A3%u4EC0%u4E48%u662F%u81EA%u7531%u53D8%u91CF%u5462%uFF1F%0A%0A%3E%20%u81EA%u7531%u53D8%u91CF%u662F%u6307%u5728%u51FD%u6570%u4E2D%u4F7F%u7528%u7684%uFF0C%u4F46%u65E2%u4E0D%u662F%u51FD%u6570%u53C2%u6570%u4E5F%u4E0D%u662F%u51FD%u6570%u7684%u5C40%u90E8%u53D8%u91CF%u7684%u53D8%u91CF%u3002%0A%0A%u7531%u6B64%uFF0C%u6211%u4EEC%u53EF%u4EE5%u770B%u51FA%u95ED%u5305%u5171%u6709%u4E24%u90E8%u5206%u7EC4%u6210%uFF1A%0A%0A%3E%20%u95ED%u5305%20%3D%20%u51FD%u6570%20+%20%u51FD%u6570%u80FD%u591F%u8BBF%u95EE%u7684%u81EA%u7531%u53D8%u91CF%0A%0A%u4E3E%u4E2A%u4F8B%u5B50%uFF1A%0A%0A%60%60%60%0Avar%20a%20%3D%201%3B%0A%0Afunction%20foo%28%29%20%7B%0A%20%20%20%20console.log%28a%29%3B%0A%7D%0A%0Afoo%28%29%3B%0A%60%60%60%0A%0Afoo%20%u51FD%u6570%u53EF%u4EE5%u8BBF%u95EE%u53D8%u91CF%20a%uFF0C%u4F46%u662F%20a%20%u65E2%u4E0D%u662F%20foo%20%u51FD%u6570%u7684%u5C40%u90E8%u53D8%u91CF%uFF0C%u4E5F%u4E0D%u662F%20foo%20%u51FD%u6570%u7684%u53C2%u6570%uFF0C%u6240%u4EE5%20a%20%u5C31%u662F%u81EA%u7531%u53D8%u91CF%u3002%0A%0A%u90A3%u4E48%uFF0C%u51FD%u6570%20foo%20+%20foo%20%u51FD%u6570%u8BBF%u95EE%u7684%u81EA%u7531%u53D8%u91CF%20a%20%u5C31%u6784%u6210%u4E86%u4E00%u4E2A%u95ED%u5305%0A%0Ajs%20%u4E0D%u4F1A%u9500%u6BC1%u88AB%u95ED%u5305%u5F15%u7528%u7684%u5BF9%u8C61%0A%0A%23%23%23GC%20%u5783%u573E%u56DE%u6536%0AGarbage%20Collection%20%u5783%u573E%u56DE%u6536%u662F%u4E00%u79CD%u81EA%u52A8%u7684%u5185%u5B58%u7BA1%u7406%u673A%u5236%u3002%u5F53%u4E00%u4E2A%u7535%u8111%u4E0A%u7684%u52A8%u6001%u5185%u5B58%u4E0D%u518D%u9700%u8981%u65F6%uFF0C%u5C31%u5E94%u8BE5%u4E88%u4EE5%u91CA%u653E%uFF0C%u4EE5%u8BA9%u51FA%u5185%u5B58%uFF0C%u8FD9%u79CD%u5185%u5B58%u8D44%u6E90%u7BA1%u7406%uFF0C%u79F0%u4E3A%u5783%u573E%u56DE%u6536%u3002%0A%0A%23%23%23%23%20%u65B0%u751F%u4EE3%u548C%u8001%u751F%u4EE3%u5185%u5B58%u5206%u533A%0A%u4E3A%u4EC0%u4E48%u8981%u5206%u533A%uFF1F%u4E3A%u4E86%20GC%20%u6548%u7387%0A%0A%23%23%23%23%20%u65B0%u751F%u4EE3%u7684%20GC%20%u7B97%u6CD5%0AScavenge%20%u7B97%u6CD5%uFF0C%u5B83%u5C06%u5806%u5185%u5B58%u4E00%u5206%u4E3A%u4E8C%uFF0C%u5C06%u5B58%u6D3B%u5BF9%u8C61%u5728%u4ECE%u7A7A%u95F4%201%20%u590D%u5236%u5230%u7A7A%u95F4%202%uFF0C%u5176%u4ED6%u5BF9%u8C61%u88AB%u56DE%u6536%u3002%u7279%u70B9%u662F%u901F%u5EA6%u5FEB%u3002%u65B0%u751F%u4EE3%u5185%u5B58%u7684%u5BF9%u8C61%u8FC7%u5927%u6216%u8005%u5B58%u6D3B%u65F6%u95F4%u8FC7%u957F%u5C31%u4F1A%u53BB%u5230%u8001%u751F%u4EE3%u5185%u5B58%u3002%0A%0A%23%23%23%23%u8001%u751F%u4EE3%u7684%20GC%20%u7B97%u6CD5%0AMark-Sweep%20%u6807%u8BB0%u6E05%u9664%u7B97%u6CD5%uFF0C%u6807%u8BB0%u6E05%u9664%u56DE%u6536%u4E4B%u540E%uFF0C%u5185%u5B58%u4F1A%u53D8%u5F97%u788E%u7247%u5316%u3002%0AMark-Compact%20%u6807%u8BB0%u6574%u7406%u7B97%u6CD5%uFF0C%u5728%u6574%u7406%u8FC7%u7A0B%u4E2D%uFF0C%u5C06%u6D3B%u7740%u7684%u5BF9%u8C61%u5F80%u4E00%u7AEF%u79FB%u52A8%uFF0C%u79FB%u52A8%u5B8C%u6210%u540E%uFF0C%u76F4%u63A5%u6E05%u7406%u6389%u8FB9%u754C%u5916%u7684%u5185%u5B58%u3002%0A%0A%23%23%23%23%u5185%u5B58%u6CC4%u9732%0A%u672C%u8D28%u4E0A%uFF0C%u5185%u5B58%u6CC4%u6F0F%u53EF%u4EE5%u5B9A%u4E49%u4E3A%uFF1A%u5E94%u7528%u7A0B%u5E8F%u4E0D%u518D%u9700%u8981%u5360%u7528%u5185%u5B58%u7684%u65F6%u5019%uFF0C%u7531%u4E8E%u67D0%u4E9B%u539F%u56E0%uFF0C%u5185%u5B58%u6CA1%u6709%u88AB%u64CD%u4F5C%u7CFB%u7EDF%u6216%u53EF%u7528%u5185%u5B58%u6C60%u56DE%u6536%u3002%u7F16%u7A0B%u8BED%u8A00%u7BA1%u7406%u5185%u5B58%u7684%u65B9%u5F0F%u5404%u4E0D%u76F8%u540C%u3002%u53EA%u6709%u5F00%u53D1%u8005%u6700%u6E05%u695A%u54EA%u4E9B%u5185%u5B58%u4E0D%u9700%u8981%u4E86%uFF0C%u64CD%u4F5C%u7CFB%u7EDF%u53EF%u4EE5%u56DE%u6536%u3002%u4E00%u4E9B%u7F16%u7A0B%u8BED%u8A00%u63D0%u4F9B%u4E86%u8BED%u8A00%u7279%u6027%uFF0C%u53EF%u4EE5%u5E2E%u52A9%u5F00%u53D1%u8005%u505A%u6B64%u7C7B%u4E8B%u60C5%u3002%u53E6%u4E00%u4E9B%u5219%u5BC4%u5E0C%u671B%u4E8E%u5F00%u53D1%u8005%u5BF9%u5185%u5B58%u662F%u5426%u9700%u8981%u6E05%u6670%u660E%u4E86%u3002%0A%0A%23%23%23%23%u6392%u9664%u65B9%u6CD5%0A1.%20%u6293%u4E0B%u5185%u5B58%u5FEB%u7167%uFF0C%u4F7F%u7528%20chrome%20%u5206%u6790%uFF0C%u4F7F%u7528%u6846%u67B6%u548C%u5404%u79CD%u5E93%u7684%u65F6%u5019%u5E72%u6270%u9879%u975E%u5E38%u591A%0A2.%20%5Balinode%5D%28https%3A//alinode.aliyun.com/%29%20%0A%0A%23%23%23%u53C2%u8003%u6587%u7AE0%0A%u91CD%u8981%0A%0A1.%20%5B%u6DF1%u5165%u7406%u89E3%u95ED%u5305%uFF08%u4E94%uFF09%u2014%u2014%u4F5C%u7528%u57DF%u3001%u4F5C%u7528%u57DF%u94FE%u548C%u6267%u884C%u4E0A%u4E0B%u6587%5D%28https%3A//wanghan0.github.io/2017/05/07/closure5/%29%0A8.%20%5B%u6DF1%u5165%u7406%u89E3JavaScript%u95ED%u5305%u3010%u8BD1%u3011%5D%28http%3A//www.cnblogs.com/zldream1106/p/how-do-javascript-closures-work.html%29%0A10.%20%5B%u6DF1%u5165%u7406%u89E3JavaScript%u6267%u884C%u4E0A%u4E0B%u6587%u3001%u51FD%u6570%u5806%u6808%u3001%u63D0%u5347%u7684%u6982%u5FF5%5D%28https%3A//segmentfault.com/a/1190000009041008%29%0A11.%20%5BMDN%20%u51FD%u6570%5D%28https%3A//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Guide/Functions%23%25E9%2597%25AD%25E5%258C%2585%2528Closures%2529%29%0A12.%20%5BJavaScript%u6DF1%u5165%u4E4B%u95ED%u5305%5D%28https%3A//github.com/mqyqingfeng/Blog/issues/9%29%0A13.%20%5B%u8F7B%u677E%u6392%u67E5%u7EBF%u4E0ANode%u5185%u5B58%u6CC4%u6F0F%u95EE%u9898%5D%28https%3A//cnodejs.org/topic/58eb5d378cda07442731569f%29%0A14.%20%5B4%u7C7B%20JavaScript%20%u5185%u5B58%u6CC4%u6F0F%u53CA%u5982%u4F55%u907F%u514D%5D%28https%3A//jinlong.github.io/2016/05/01/4-Types-of-Memory-Leaks-in-JavaScript-and-How-to-Get-Rid-Of-Them/%29%20%20%u4ECB%u7ECD%u4E86%u5982%u4F55%u4F7F%u7528%20chrome%20dev%20tool%20%u6392%u67E5%u5185%u5B58%u6CC4%u9732%0A%0A%u4E0D%u91CD%u8981%0A1.%20%5B%u89E3%u8BFB%20V8%20GC%20Log%uFF08%u4E8C%uFF09%3A%20%u5806%u5185%u5916%u5185%u5B58%u7684%u5212%u5206%u4E0E%20GC%20%u7B97%u6CD5%5D%28http%3A//alinode.aliyun.com/blog/38%29%0A%209.%20%5BNode%20%u6027%u80FD%u4F18%u5316%5D%28https%3A//myfjdthink.com/2016/03/22/node-%25E6%2580%25A7%25E8%2583%25BD%25E4%25BC%2598%25E5%258C%2596/%29%0A2.%20%5B%u89E3%u8BFB%20V8%20GC%20Log%uFF08%u4E00%uFF09%3A%20Node.js%20%u5E94%u7528%u80CC%u666F%u4E0E%20GC%20%u57FA%u7840%u77E5%u8BC6%5D%28http%3A//alinode.aliyun.com/blog/37%29%0A3.%20%5BNodeJS%u4E2D%u88AB%u5FFD%u7565%u7684%u5185%u5B58%5D%28http%3A//huang-jerryc.com/2016/04/14/NodeJS%25E4%25B8%25AD%25E8%25A2%25AB%25E5%25BF%25BD%25E7%2595%25A5%25E7%259A%2584%25E5%2586%2585%25E5%25AD%2598/%29%0A4.%20%5B%u524D%u7AEF%u57FA%u7840%u8FDB%u9636%uFF08%u4E00%uFF09%uFF1A%u5185%u5B58%u7A7A%u95F4%u8BE6%u7EC6%u56FE%u89E3%5D%28http%3A//leanote.com/blog/post/59128586ab644166f800ab45%29%0A5.%20%5B%u524D%u7AEF%u57FA%u7840%u8FDB%u9636%uFF08%u4E8C%uFF09%uFF1A%u6267%u884C%u4E0A%u4E0B%u6587%u8BE6%u7EC6%u56FE%u89E3%5D%28http%3A//www.php.cn/js-tutorial-351911.html%29%0A6.%20%5BJavaScript%20%u5185%u5B58%u6A21%u578B%5D%28https%3A//rawbin-.github.io/web%25E5%25BC%2580%25E5%258F%2591/%25E5%2589%258D%25E7%25AB%25AF%25E5%25BC%2580%25E5%258F%2591/javascript/2017/05/08/js-memory-management/%29</center>"
  },
  {
    "title": "我有哪些提升编程工作效率的方法",
    "created": "2017-12-25T18:21:55.000Z",
    "updated": "2017-12-25T18:21:56.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=ae43378e-8e3b-4461-a76b-8814d1507c0d&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n## 1\\. 列出每日TODO\n\n最简单也是最有效的方法，每天早上整理好今天待办事项，按照紧急和重要两个指标划分四象限，优先处理重要的事情，紧急但不重要的可次之。  \n这个做法的好处是做事会有计划有条理。\n\n## 2\\. 做好工作笔记\n\n使用云笔记记录每个 task 的相关信息，整理素材。云笔记的好处是不怕丢，手机也能方便查询，也方便日后回顾，特别是年终的时候 看着一个个 task 记录，就知道今年做了哪些事情。\n\n## 3\\. 坚决地自动化\n\n如果是重复简单的工作，就尽量使用程序脚本解决，可能第一次做自动化，写脚步的时间比直接做还慢，但是基础的脚本都差不多，需要用到自动化的一般就是那几类，有了积累之后，下次使用就方便很多了。珍惜自己的时间，重视自己的价值，工程师不应该把时间浪费在简单重复的事情上。\n\n## 4\\. 熟练使用工具，节省时间和精力\n\n人一天的精力有限，而且人能连续集中精力时间也不长，番茄工作法认为人平均能集中精力的时长为 25 分钟，并以此为周期，每个周期之间需要休息 5 分钟。所以在编码时，需要熟悉 IDE 的各种快捷功能，提高工作。\n\n举个例子：使用 IDE 提供的 debug 功能，可以在断点处之前查看上下文变量，还可以修改上下文，也可以给短点设置变量，debug 效率非常高。\n\n使用 console.log 来 debug 同样可以找出问题，但需要浪费时间在输入 console.log 和重试上面。即使只有几秒钟，毕竟一个周期也只有 25 分钟，而且我自己感觉一天能高效工作的时间也就 3 小时左右 LOL。\n\n## 5\\. 先思考，再编码，多画图\n\n不要把实现方案想个大概就动工，不然写到一半才发现某些地方没考虑完整，又得推翻部分设计，返工浪费的时间其更多。  \n处理简单的问题，可以脑子里过一遍流程，把可能影响的地方都一一列出来，再整理好 TODO ，编码的时候其实就只需要关注把 TODO 翻译成代码即可。  \n如果问题比较复杂，那就把画出流程图或者时序图，可以帮你有效地整理流程。画图还有另一个好处：当做问题，日后接收的人也轻松。这里推荐使用 plantUML 来画各种流程图，类似 markdown 只需要写好文本，渲染后就是标准的 UML 图了。\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5B%u7F16%u7A0B%u76F8%u5173%2Cposts%2C%20Node%5D%0A%0A%23%u6211%u6709%u54EA%u4E9B%u63D0%u5347%u7F16%u7A0B%u5DE5%u4F5C%u6548%u7387%u7684%u65B9%u6CD5%0A%0A%23%231.%20%u5217%u51FA%u6BCF%u65E5TODO%0A%u6700%u7B80%u5355%u4E5F%u662F%u6700%u6709%u6548%u7684%u65B9%u6CD5%uFF0C%u6BCF%u5929%u65E9%u4E0A%u6574%u7406%u597D%u4ECA%u5929%u5F85%u529E%u4E8B%u9879%uFF0C%u6309%u7167%u7D27%u6025%u548C%u91CD%u8981%u4E24%u4E2A%u6307%u6807%u5212%u5206%u56DB%u8C61%u9650%uFF0C%u4F18%u5148%u5904%u7406%u91CD%u8981%u7684%u4E8B%u60C5%uFF0C%u7D27%u6025%u4F46%u4E0D%u91CD%u8981%u7684%u53EF%u6B21%u4E4B%u3002%0A%u8FD9%u4E2A%u505A%u6CD5%u7684%u597D%u5904%u662F%u505A%u4E8B%u4F1A%u6709%u8BA1%u5212%u6709%u6761%u7406%u3002%0A%0A%23%232.%20%u505A%u597D%u5DE5%u4F5C%u7B14%u8BB0%0A%u4F7F%u7528%u4E91%u7B14%u8BB0%u8BB0%u5F55%u6BCF%u4E2A%20task%20%u7684%u76F8%u5173%u4FE1%u606F%uFF0C%u6574%u7406%u7D20%u6750%u3002%u4E91%u7B14%u8BB0%u7684%u597D%u5904%u662F%u4E0D%u6015%u4E22%uFF0C%u624B%u673A%u4E5F%u80FD%u65B9%u4FBF%u67E5%u8BE2%uFF0C%u4E5F%u65B9%u4FBF%u65E5%u540E%u56DE%u987E%uFF0C%u7279%u522B%u662F%u5E74%u7EC8%u7684%u65F6%u5019%20%u770B%u7740%u4E00%u4E2A%u4E2A%20task%20%u8BB0%u5F55%uFF0C%u5C31%u77E5%u9053%u4ECA%u5E74%u505A%u4E86%u54EA%u4E9B%u4E8B%u60C5%u3002%0A%0A%23%233.%20%u575A%u51B3%u5730%u81EA%u52A8%u5316%0A%u5982%u679C%u662F%u91CD%u590D%u7B80%u5355%u7684%u5DE5%u4F5C%uFF0C%u5C31%u5C3D%u91CF%u4F7F%u7528%u7A0B%u5E8F%u811A%u672C%u89E3%u51B3%uFF0C%u53EF%u80FD%u7B2C%u4E00%u6B21%u505A%u81EA%u52A8%u5316%uFF0C%u5199%u811A%u6B65%u7684%u65F6%u95F4%u6BD4%u76F4%u63A5%u505A%u8FD8%u6162%uFF0C%u4F46%u662F%u57FA%u7840%u7684%u811A%u672C%u90FD%u5DEE%u4E0D%u591A%uFF0C%u9700%u8981%u7528%u5230%u81EA%u52A8%u5316%u7684%u4E00%u822C%u5C31%u662F%u90A3%u51E0%u7C7B%uFF0C%u6709%u4E86%u79EF%u7D2F%u4E4B%u540E%uFF0C%u4E0B%u6B21%u4F7F%u7528%u5C31%u65B9%u4FBF%u5F88%u591A%u4E86%u3002%u73CD%u60DC%u81EA%u5DF1%u7684%u65F6%u95F4%uFF0C%u91CD%u89C6%u81EA%u5DF1%u7684%u4EF7%u503C%uFF0C%u5DE5%u7A0B%u5E08%u4E0D%u5E94%u8BE5%u628A%u65F6%u95F4%u6D6A%u8D39%u5728%u7B80%u5355%u91CD%u590D%u7684%u4E8B%u60C5%u4E0A%u3002%0A%0A%23%234.%20%u719F%u7EC3%u4F7F%u7528%u5DE5%u5177%uFF0C%u8282%u7701%u65F6%u95F4%u548C%u7CBE%u529B%0A%u4EBA%u4E00%u5929%u7684%u7CBE%u529B%u6709%u9650%uFF0C%u800C%u4E14%u4EBA%u80FD%u8FDE%u7EED%u96C6%u4E2D%u7CBE%u529B%u65F6%u95F4%u4E5F%u4E0D%u957F%uFF0C%u756A%u8304%u5DE5%u4F5C%u6CD5%u8BA4%u4E3A%u4EBA%u5E73%u5747%u80FD%u96C6%u4E2D%u7CBE%u529B%u7684%u65F6%u957F%u4E3A%2025%20%u5206%u949F%uFF0C%u5E76%u4EE5%u6B64%u4E3A%u5468%u671F%uFF0C%u6BCF%u4E2A%u5468%u671F%u4E4B%u95F4%u9700%u8981%u4F11%u606F%205%20%u5206%u949F%u3002%u6240%u4EE5%u5728%u7F16%u7801%u65F6%uFF0C%u9700%u8981%u719F%u6089%20IDE%20%u7684%u5404%u79CD%u5FEB%u6377%u529F%u80FD%uFF0C%u63D0%u9AD8%u5DE5%u4F5C%u3002%0A%0A%u4E3E%u4E2A%u4F8B%u5B50%uFF1A%u4F7F%u7528%20IDE%20%u63D0%u4F9B%u7684%20debug%20%u529F%u80FD%uFF0C%u53EF%u4EE5%u5728%u65AD%u70B9%u5904%u4E4B%u524D%u67E5%u770B%u4E0A%u4E0B%u6587%u53D8%u91CF%uFF0C%u8FD8%u53EF%u4EE5%u4FEE%u6539%u4E0A%u4E0B%u6587%uFF0C%u4E5F%u53EF%u4EE5%u7ED9%u77ED%u70B9%u8BBE%u7F6E%u53D8%u91CF%uFF0Cdebug%20%u6548%u7387%u975E%u5E38%u9AD8%u3002%0A%0A%u4F7F%u7528%20console.log%20%u6765%20debug%20%u540C%u6837%u53EF%u4EE5%u627E%u51FA%u95EE%u9898%uFF0C%u4F46%u9700%u8981%u6D6A%u8D39%u65F6%u95F4%u5728%u8F93%u5165%20console.log%20%u548C%u91CD%u8BD5%u4E0A%u9762%u3002%u5373%u4F7F%u53EA%u6709%u51E0%u79D2%u949F%uFF0C%u6BD5%u7ADF%u4E00%u4E2A%u5468%u671F%u4E5F%u53EA%u6709%2025%20%u5206%u949F%uFF0C%u800C%u4E14%u6211%u81EA%u5DF1%u611F%u89C9%u4E00%u5929%u80FD%u9AD8%u6548%u5DE5%u4F5C%u7684%u65F6%u95F4%u4E5F%u5C31%203%20%u5C0F%u65F6%u5DE6%u53F3%20LOL%u3002%0A%0A%23%235.%20%u5148%u601D%u8003%uFF0C%u518D%u7F16%u7801%uFF0C%u591A%u753B%u56FE%0A%u4E0D%u8981%u628A%u5B9E%u73B0%u65B9%u6848%u60F3%u4E2A%u5927%u6982%u5C31%u52A8%u5DE5%uFF0C%u4E0D%u7136%u5199%u5230%u4E00%u534A%u624D%u53D1%u73B0%u67D0%u4E9B%u5730%u65B9%u6CA1%u8003%u8651%u5B8C%u6574%uFF0C%u53C8%u5F97%u63A8%u7FFB%u90E8%u5206%u8BBE%u8BA1%uFF0C%u8FD4%u5DE5%u6D6A%u8D39%u7684%u65F6%u95F4%u5176%u66F4%u591A%u3002%0A%u5904%u7406%u7B80%u5355%u7684%u95EE%u9898%uFF0C%u53EF%u4EE5%u8111%u5B50%u91CC%u8FC7%u4E00%u904D%u6D41%u7A0B%uFF0C%u628A%u53EF%u80FD%u5F71%u54CD%u7684%u5730%u65B9%u90FD%u4E00%u4E00%u5217%u51FA%u6765%uFF0C%u518D%u6574%u7406%u597D%20TODO%20%uFF0C%u7F16%u7801%u7684%u65F6%u5019%u5176%u5B9E%u5C31%u53EA%u9700%u8981%u5173%u6CE8%u628A%20TODO%20%u7FFB%u8BD1%u6210%u4EE3%u7801%u5373%u53EF%u3002%0A%u5982%u679C%u95EE%u9898%u6BD4%u8F83%u590D%u6742%uFF0C%u90A3%u5C31%u628A%u753B%u51FA%u6D41%u7A0B%u56FE%u6216%u8005%u65F6%u5E8F%u56FE%uFF0C%u53EF%u4EE5%u5E2E%u4F60%u6709%u6548%u5730%u6574%u7406%u6D41%u7A0B%u3002%u753B%u56FE%u8FD8%u6709%u53E6%u4E00%u4E2A%u597D%u5904%uFF1A%u5F53%u505A%u95EE%u9898%uFF0C%u65E5%u540E%u63A5%u6536%u7684%u4EBA%u4E5F%u8F7B%u677E%u3002%u8FD9%u91CC%u63A8%u8350%u4F7F%u7528%20plantUML%20%u6765%u753B%u5404%u79CD%u6D41%u7A0B%u56FE%uFF0C%u7C7B%u4F3C%20markdown%20%u53EA%u9700%u8981%u5199%u597D%u6587%u672C%uFF0C%u6E32%u67D3%u540E%u5C31%u662F%u6807%u51C6%u7684%20UML%20%u56FE%u4E86%u3002%0A</center>"
  },
  {
    "title": "Swagger",
    "created": "2017-09-19T03:42:07.000Z",
    "updated": "2017-12-18T00:30:57.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=7970ecc5-8ddd-4d03-8f46-a71085def10e&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n## 什么是 Swagger\n\n官网的解释：\n\n> Swagger is the world’s largest framework of API developer tools for  \n> the OpenAPI Specification(OAS), enabling development across the entire  \n> API lifecycle, from design and documentation, to test and deployment.\n\nSwagger 提供了对 API 的设计、文档、测试、部署等阶段的支持。  \nWeb 开发的本质是 API 开发，Swagger 使用 swagger.json/yaml 文件来定义 API，语法基于 [OpenAPI Specification(OAS) 规范。](https://github.com/OAI/OpenAPI-Specification)\n\nOpenAPI 语法入门：[https://www.gitbook.com/book/huangwenchao/swagger/details](https://www.gitbook.com/book/huangwenchao/swagger/details)\n\n一个在线的 demo： [https://editor.swagger.io//?_ga=2.267808907.403623983.1505817850-1482371638.1504594291#/](https://editor.swagger.io//?_ga=2.267808907.403623983.1505817850-1482371638.1504594291#/)\n\n<en-media longdesc=\"./1505818063239.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"df9b3ae85fe20f98d2b1f3358c6d0cb2\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n## Swagger 可以做什么\n\n围绕这个 API 定义，Swagger 生态提供了以下主要的服务：\n\n1.  API 编辑：Swagger Editor\n2.  API 文档：Swagger UI\n3.  Mock 服务：Easy Mock\n4.  代码生成器：Swagger Codegen\n\n[Swagger Hub](https://app.swaggerhub.com) 全家桶对上述功能提供了整套服务打包。  \n理论上是可用，但是 mock 和 codegen 服务不够灵活。\n\n接下来重点介绍 Mock 和 代码生成器这两个部分的内容。\n\n## Mock 服务\n\n### Swagger Hub 的 Auto Mock\n\nSwagger Hub 提供的 [Mock 服务](https://swaggerhub.com/blog/swaggerhub-feature/the-smartbear-virtserver-integration/)， 只能区分 String 和 Number，不能提供更灵活的 Mock。\n\n### Easy Mock\n\n[Easy Mock](https://www.easy-mock.com/docs) 是一个可视化，并且能快速生成 模拟数据 的持久化服务，支持生成随机的文本、数字、布尔值、日期、邮箱、链接、图片、颜色等，支持扩展更多数据类型，支持自定义函数和正则。\n\n重点是它可以导入 Swagger 配置，\n\n## Codegen\n\n### Swagger Hub 的 Codegen\n\n官方宣称提供几十个 server 端和 client 端的代码生成服务，但是实际上用处非常有限，以 nodejs-server 为例，这个模板使用 connect 框架，使用 express 和 koa 框架的就不适用了，而且编码风格差距也非常大。\n\n*   官方支持的 Codegen 模板：\n\n<en-media longdesc=\"./1505820236121.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"4c847f0f89816d9f96a176d4e1d1b632\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n*   nodejs-server 模板生成的代码：\n\n<en-media longdesc=\"./1505820586365.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"a25b6ae216811c3b3913a28473f55a05\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### 自定义模板\n\n在代码生成器这一块，往往是半自动的工具更加灵活，自定义模板，根据 swagger.json 生成填充值，一键生成重复内容。  \n在 Node 这一块，半自动生成器做得比较好的是 [swagger-js-codegen](https://www.npmjs.com/package/swagger-js-codegen)  \n这个工具使用 [mustache](https://mustache.github.io/) 模板工具，还提供了 gulp 工具。\n\n根据这个思路我们可以自定义好模板，然后一键生成代码。\n\n### npm 上的 Swagger 工具\n\n1.  根据 Swagger 生成 Joi [https://github.com/zaaack/koa-joi-swagger](https://github.com/zaaack/koa-joi-swagger)\n2.  根据 Swagger 生成 Mongoose [https://www.npmjs.com/package/swagger-mongoose](https://www.npmjs.com/package/swagger-mongoose)\n\n## 番外\n\n### apidoc to swagge\n\n使用 apidoc-swagger 把现在的 apidock 转为 swagger  \n[https://www.npmjs.com/package/apidoc-swagger](https://www.npmjs.com/package/apidoc-swagger)\n\n## 参考\n\n[http://blog.just4fun.site/swagger-note.html](http://blog.just4fun.site/swagger-note.html)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%5D%0A%0A%23Swagger%0A%0A%23%23%20%u4EC0%u4E48%u662F%20Swagger%0A%u5B98%u7F51%u7684%u89E3%u91CA%uFF1A%0A%3E%20Swagger%20is%20the%20world%u2019s%20largest%20framework%20of%20API%20developer%20tools%20for%0A%3E%20the%20OpenAPI%20Specification%28OAS%29%2C%20enabling%20development%20across%20the%20entire%0A%3E%20API%20lifecycle%2C%20from%20design%20and%20documentation%2C%20to%20test%20and%20deployment.%0A%0ASwagger%20%u63D0%u4F9B%u4E86%u5BF9%20API%20%u7684%u8BBE%u8BA1%u3001%u6587%u6863%u3001%u6D4B%u8BD5%u3001%u90E8%u7F72%u7B49%u9636%u6BB5%u7684%u652F%u6301%u3002%0AWeb%20%u5F00%u53D1%u7684%u672C%u8D28%u662F%20API%20%u5F00%u53D1%uFF0CSwagger%20%u4F7F%u7528%20swagger.json/yaml%20%u6587%u4EF6%u6765%u5B9A%u4E49%20API%uFF0C%u8BED%u6CD5%u57FA%u4E8E%20%5BOpenAPI%20Specification%28OAS%29%20%20%u89C4%u8303%u3002%5D%28https%3A//github.com/OAI/OpenAPI-Specification%29%0A%0AOpenAPI%20%u8BED%u6CD5%u5165%u95E8%uFF1Ahttps%3A//www.gitbook.com/book/huangwenchao/swagger/details%0A%0A%u4E00%u4E2A%u5728%u7EBF%u7684%20demo%uFF1A%20https%3A//editor.swagger.io//%3F_ga%3D2.267808907.403623983.1505817850-1482371638.1504594291%23/%0A%21%5BAlt%20text%5D%28./1505818063239.png%29%0A%0A%0A%23%23%20Swagger%20%u53EF%u4EE5%u505A%u4EC0%u4E48%0A%u56F4%u7ED5%u8FD9%u4E2A%20API%20%u5B9A%u4E49%uFF0CSwagger%20%u751F%u6001%u63D0%u4F9B%u4E86%u4EE5%u4E0B%u4E3B%u8981%u7684%u670D%u52A1%uFF1A%0A1.%20API%20%u7F16%u8F91%uFF1ASwagger%20Editor%0A2.%20API%20%u6587%u6863%uFF1ASwagger%20UI%0A2.%20Mock%20%u670D%u52A1%uFF1AEasy%20Mock%0A2.%20%u4EE3%u7801%u751F%u6210%u5668%uFF1ASwagger%20%20Codegen%0A%0A%5BSwagger%20Hub%5D%28https%3A//app.swaggerhub.com%29%20%u5168%u5BB6%u6876%u5BF9%u4E0A%u8FF0%u529F%u80FD%u63D0%u4F9B%u4E86%u6574%u5957%u670D%u52A1%u6253%u5305%u3002%0A%u7406%u8BBA%u4E0A%u662F%u53EF%u7528%uFF0C%u4F46%u662F%20mock%20%u548C%20codegen%20%u670D%u52A1%u4E0D%u591F%u7075%u6D3B%u3002%0A%0A%u63A5%u4E0B%u6765%u91CD%u70B9%u4ECB%u7ECD%20Mock%20%u548C%20%u4EE3%u7801%u751F%u6210%u5668%u8FD9%u4E24%u4E2A%u90E8%u5206%u7684%u5185%u5BB9%u3002%0A%0A%23%23%20Mock%20%u670D%u52A1%0A%23%23%23Swagger%20Hub%20%u7684%20Auto%20Mock%0ASwagger%20Hub%20%u63D0%u4F9B%u7684%20%5BMock%20%u670D%u52A1%5D%28https%3A//swaggerhub.com/blog/swaggerhub-feature/the-smartbear-virtserver-integration/%29%uFF0C%20%u53EA%u80FD%u533A%u5206%20String%20%u548C%20Number%uFF0C%u4E0D%u80FD%u63D0%u4F9B%u66F4%u7075%u6D3B%u7684%20Mock%u3002%0A%0A%23%23%23%20Easy%20Mock%0A%5BEasy%20Mock%5D%28https%3A//www.easy-mock.com/docs%29%20%u662F%u4E00%u4E2A%u53EF%u89C6%u5316%uFF0C%u5E76%u4E14%u80FD%u5FEB%u901F%u751F%u6210%20%u6A21%u62DF%u6570%u636E%20%u7684%u6301%u4E45%u5316%u670D%u52A1%uFF0C%u652F%u6301%u751F%u6210%u968F%u673A%u7684%u6587%u672C%u3001%u6570%u5B57%u3001%u5E03%u5C14%u503C%u3001%u65E5%u671F%u3001%u90AE%u7BB1%u3001%u94FE%u63A5%u3001%u56FE%u7247%u3001%u989C%u8272%u7B49%uFF0C%u652F%u6301%u6269%u5C55%u66F4%u591A%u6570%u636E%u7C7B%u578B%uFF0C%u652F%u6301%u81EA%u5B9A%u4E49%u51FD%u6570%u548C%u6B63%u5219%u3002%0A%0A%u91CD%u70B9%u662F%u5B83%u53EF%u4EE5%u5BFC%u5165%20Swagger%20%u914D%u7F6E%uFF0C%0A%0A%23%23%20Codegen%0A%23%23%23Swagger%20Hub%20%u7684%20Codegen%0A%u5B98%u65B9%u5BA3%u79F0%u63D0%u4F9B%u51E0%u5341%u4E2A%20server%20%u7AEF%u548C%20client%20%u7AEF%u7684%u4EE3%u7801%u751F%u6210%u670D%u52A1%uFF0C%u4F46%u662F%u5B9E%u9645%u4E0A%u7528%u5904%u975E%u5E38%u6709%u9650%uFF0C%u4EE5%20nodejs-server%20%u4E3A%u4F8B%uFF0C%u8FD9%u4E2A%u6A21%u677F%u4F7F%u7528%20connect%20%u6846%u67B6%uFF0C%u4F7F%u7528%20express%20%u548C%20koa%20%u6846%u67B6%u7684%u5C31%u4E0D%u9002%u7528%u4E86%uFF0C%u800C%u4E14%u7F16%u7801%u98CE%u683C%u5DEE%u8DDD%u4E5F%u975E%u5E38%u5927%u3002%0A%0A-%20%u5B98%u65B9%u652F%u6301%u7684%20Codegen%20%u6A21%u677F%uFF1A%0A%21%5BAlt%20text%5D%28./1505820236121.png%29%0A%0A-%20nodejs-server%20%u6A21%u677F%u751F%u6210%u7684%u4EE3%u7801%uFF1A%0A%21%5BAlt%20text%5D%28./1505820586365.png%29%0A%0A%23%23%23%u81EA%u5B9A%u4E49%u6A21%u677F%0A%u5728%u4EE3%u7801%u751F%u6210%u5668%u8FD9%u4E00%u5757%uFF0C%u5F80%u5F80%u662F%u534A%u81EA%u52A8%u7684%u5DE5%u5177%u66F4%u52A0%u7075%u6D3B%uFF0C%u81EA%u5B9A%u4E49%u6A21%u677F%uFF0C%u6839%u636E%20swagger.json%20%u751F%u6210%u586B%u5145%u503C%uFF0C%u4E00%u952E%u751F%u6210%u91CD%u590D%u5185%u5BB9%u3002%0A%u5728%20Node%20%u8FD9%u4E00%u5757%uFF0C%u534A%u81EA%u52A8%u751F%u6210%u5668%u505A%u5F97%u6BD4%u8F83%u597D%u7684%u662F%20%5Bswagger-js-codegen%5D%28https%3A//www.npmjs.com/package/swagger-js-codegen%29%0A%u8FD9%u4E2A%u5DE5%u5177%u4F7F%u7528%20%5Bmustache%5D%28https%3A//mustache.github.io/%29%20%u6A21%u677F%u5DE5%u5177%uFF0C%u8FD8%u63D0%u4F9B%u4E86%20gulp%20%u5DE5%u5177%u3002%0A%0A%u6839%u636E%u8FD9%u4E2A%u601D%u8DEF%u6211%u4EEC%u53EF%u4EE5%u81EA%u5B9A%u4E49%u597D%u6A21%u677F%uFF0C%u7136%u540E%u4E00%u952E%u751F%u6210%u4EE3%u7801%u3002%0A%0A%23%23%23npm%20%u4E0A%u7684%20Swagger%20%u5DE5%u5177%0A1.%20%u6839%u636E%20Swagger%20%u751F%u6210%20Joi%20https%3A//github.com/zaaack/koa-joi-swagger%0A2.%20%u6839%u636E%20Swagger%20%u751F%u6210%20Mongoose%20https%3A//www.npmjs.com/package/swagger-mongoose%0A%0A%23%23%20%u756A%u5916%0A%23%23%23%20apidoc%20to%20swagge%0A%u4F7F%u7528%20apidoc-swagger%20%u628A%u73B0%u5728%u7684%20apidock%20%u8F6C%u4E3A%20swagger%0Ahttps%3A//www.npmjs.com/package/apidoc-swagger%0A%0A%23%23%20%u53C2%u8003%0Ahttp%3A//blog.just4fun.site/swagger-note.html%0A%0A</center>"
  },
  {
    "title": "使用 Docker 搭建 WordPress 支持 https",
    "created": "2017-08-28T02:54:03.000Z",
    "updated": "2017-08-28T03:00:25.000Z",
    "tags": [
      "posts",
      "编程相关",
      "docker"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=0f68e6b8-1641-4fec-acb0-65420c878339&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n最近把 WordPress 迁移到了腾讯云，为了配置方便使用了 docker 来运行，这里记录下配置过程\n\n## 准备 compose 文件\n\nWordPress 的 [docker compose 文件](https://docs.docker.com/compose/wordpress/#define-the-project)网上有很多，需要一个 mysql 的镜像，还有 WordPress 的镜像，大概长这样：\n\n    version: '3'services: db: image: mysql:5.7 volumes: - db_data:/var/lib/mysql restart: always environment: MYSQL_ROOT_PASSWORD: somewordpress MYSQL_DATABASE: wordpress MYSQL_USER: wordpress MYSQL_PASSWORD: wordpress wordpress: depends_on: - db image: wordpress:latest ports: - \"8000:80\" restart: always environment: WORDPRESS_DB_HOST: db:3306 WORDPRESS_DB_USER: wordpress WORDPRESS_DB_PASSWORD: wordpressvolumes: db_data:\n\n## 定制 Dockerfile 添加 https 支持\n\n借助于 letsencrypt 这个项目， 给个人网站添加 letsencrypt 变得十分容易，详细见这篇文章：  \n[如何免费的让网站启用HTTPS](https://coolshell.cn/articles/18094.html)\n\n大概流程就是安装一个软件包 letsencrypt ，然后配置你的网站信息即可，但是我们的 WordPress 是安装在 docker 里面，所以我们要想办法把这个软件包打进镜像里面。\n\n接下来我们要对 WordPress 这个镜像进行自定义，参考这篇文章：  \n[docker + wordpress + letsencrypt](https://breeto.id.au/2017/03/docker-wordpress-letsencrypt/)\n\n先定制 Dockerfile，集成 letsencrypt  \n新建文件夹 wordpress_tls 添加 Dockerfile\n\n    FROM wordpress:php7.1RUN echo \"export TERM=xterm LANG=en_US.UTF-8\" >> ~/.bashrc \\ && apt-get update && apt-get -y install git \\ && rm -rf \"/opt/letsencrypt\" \\ && git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt \\ && cd /opt/letsencrypt \\ && ./letsencrypt-auto --version\n\nwordpress 官方镜像使用的 ubuntu 源是国外源，打包镜像的速度会让你怀疑人生。可以把宿主机的 ubuntu 源放进 docker 镜像里。  \n`$cp /etc/apt/sources.list ./`\n\n修改 Dockerfile\n\n    FROM wordpress:php7.1ADD sources.list /etc/apt/sources.listRUN apt-key adv --keyserver keyserver.ubuntu.com --recv-keys \\ && apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 3B4FE6ACC0B21F32 // 改成你的 keyRUN echo \"export TERM=xterm LANG=en_US.UTF-8\" >> ~/.bashrc \\ && apt-get update && apt-get -y install git \\ && rm -rf \"/opt/letsencrypt\" \\ && git clone https://github.com/letsencrypt/letsencrypt /opt/letsencrypt \\ && cd /opt/letsencrypt \\ && ./letsencrypt-auto --version\n\n添加新的源会有认证的问题，可以参考 [http://naveenubuntu.blogspot.com/2011/08/fixing-gpg-keys-in-ubuntu.html](http://naveenubuntu.blogspot.com/2011/08/fixing-gpg-keys-in-ubuntu.html) 解决\n\n## 配置 https\n\n启动容器：\n\n`$docker-compose up -d`\n\n然后配置 https  \n`$docker-compose exec wordpress_tls /opt/letsencrypt/certbot-auto --apache -d your.domain.com --agree-tos -n -m you@your.domain.com`\n\nLet’s Encrypt 的证书90天就过期了，过期后执行\n\n`$ docker-compose exec wordpress_tls /opt/letsencrypt/certbot-auto renew`\n\n来更新，可以把更新脚本写进 crontab  \n`$crontab -e`\n\n    0 0 1 * * docker-compose exec wordpress_tls /opt/letsencrypt/certbot-auto renew\n\n## 完整示例\n\n[https://github.com/myfjdthink/docker-wordpress](https://github.com/myfjdthink/docker-wordpress)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%2C%20docker%5D%0A%0A%23%20%u4F7F%u7528%20Docker%20%u642D%u5EFA%20WordPress%20%u652F%u6301%20https%0A%0A%u6700%u8FD1%u628A%20WordPress%20%u8FC1%u79FB%u5230%u4E86%u817E%u8BAF%u4E91%uFF0C%u4E3A%u4E86%u914D%u7F6E%u65B9%u4FBF%u4F7F%u7528%u4E86%20docker%20%u6765%u8FD0%u884C%uFF0C%u8FD9%u91CC%u8BB0%u5F55%u4E0B%u914D%u7F6E%u8FC7%u7A0B%0A%0A%23%23%20%u51C6%u5907%20compose%20%u6587%u4EF6%0AWordPress%20%u7684%20%5Bdocker%20compose%20%u6587%u4EF6%5D%28https%3A//docs.docker.com/compose/wordpress/%23define-the-project%29%u7F51%u4E0A%u6709%u5F88%u591A%uFF0C%u9700%u8981%u4E00%u4E2A%20mysql%20%u7684%u955C%u50CF%uFF0C%u8FD8%u6709%20WordPress%20%u7684%u955C%u50CF%uFF0C%u5927%u6982%u957F%u8FD9%u6837%uFF1A%0A%0A%60%60%60%0Aversion%3A%20%273%27%0A%0Aservices%3A%0A%20%20%20db%3A%0A%20%20%20%20%20image%3A%20mysql%3A5.7%0A%20%20%20%20%20volumes%3A%0A%20%20%20%20%20%20%20-%20db_data%3A/var/lib/mysql%0A%20%20%20%20%20restart%3A%20always%0A%20%20%20%20%20environment%3A%0A%20%20%20%20%20%20%20MYSQL_ROOT_PASSWORD%3A%20somewordpress%0A%20%20%20%20%20%20%20MYSQL_DATABASE%3A%20wordpress%0A%20%20%20%20%20%20%20MYSQL_USER%3A%20wordpress%0A%20%20%20%20%20%20%20MYSQL_PASSWORD%3A%20wordpress%0A%0A%20%20%20wordpress%3A%0A%20%20%20%20%20depends_on%3A%0A%20%20%20%20%20%20%20-%20db%0A%20%20%20%20%20image%3A%20wordpress%3Alatest%0A%20%20%20%20%20ports%3A%0A%20%20%20%20%20%20%20-%20%228000%3A80%22%0A%20%20%20%20%20restart%3A%20always%0A%20%20%20%20%20environment%3A%0A%20%20%20%20%20%20%20WORDPRESS_DB_HOST%3A%20db%3A3306%0A%20%20%20%20%20%20%20WORDPRESS_DB_USER%3A%20wordpress%0A%20%20%20%20%20%20%20WORDPRESS_DB_PASSWORD%3A%20wordpress%0Avolumes%3A%0A%20%20%20%20db_data%3A%0A%60%60%60%0A%0A%0A%23%23%20%u5B9A%u5236%20Dockerfile%20%u6DFB%u52A0%20https%20%u652F%u6301%0A%u501F%u52A9%u4E8E%20%20letsencrypt%20%20%u8FD9%u4E2A%u9879%u76EE%uFF0C%20%u7ED9%u4E2A%u4EBA%u7F51%u7AD9%u6DFB%u52A0%20letsencrypt%20%u53D8%u5F97%u5341%u5206%u5BB9%u6613%uFF0C%u8BE6%u7EC6%u89C1%u8FD9%u7BC7%u6587%u7AE0%uFF1A%20%0A%5B%u5982%u4F55%u514D%u8D39%u7684%u8BA9%u7F51%u7AD9%u542F%u7528HTTPS%5D%28https%3A//coolshell.cn/articles/18094.html%29%0A%0A%u5927%u6982%u6D41%u7A0B%u5C31%u662F%u5B89%u88C5%u4E00%u4E2A%u8F6F%u4EF6%u5305%20letsencrypt%20%uFF0C%u7136%u540E%u914D%u7F6E%u4F60%u7684%u7F51%u7AD9%u4FE1%u606F%u5373%u53EF%uFF0C%u4F46%u662F%u6211%u4EEC%u7684%20WordPress%20%u662F%u5B89%u88C5%u5728%20docker%20%u91CC%u9762%uFF0C%u6240%u4EE5%u6211%u4EEC%u8981%u60F3%u529E%u6CD5%u628A%u8FD9%u4E2A%u8F6F%u4EF6%u5305%u6253%u8FDB%u955C%u50CF%u91CC%u9762%u3002%0A%0A%u63A5%u4E0B%u6765%u6211%u4EEC%u8981%u5BF9%20WordPress%20%u8FD9%u4E2A%u955C%u50CF%u8FDB%u884C%u81EA%u5B9A%u4E49%uFF0C%u53C2%u8003%u8FD9%u7BC7%u6587%u7AE0%uFF1A%0A%5Bdocker%20+%20wordpress%20+%20letsencrypt%5D%28https%3A//breeto.id.au/2017/03/docker-wordpress-letsencrypt/%29%0A%0A%u5148%u5B9A%u5236%20Dockerfile%uFF0C%u96C6%u6210%20letsencrypt%0A%u65B0%u5EFA%u6587%u4EF6%u5939%20wordpress_tls%20%u6DFB%u52A0%20Dockerfile%0A%0A%60%60%60%0AFROM%20wordpress%3Aphp7.1%0A%0ARUN%20echo%20%22export%20TERM%3Dxterm%20LANG%3Den_US.UTF-8%22%20%3E%3E%20%7E/.bashrc%20%5C%0A%20%20%20%20%26%26%20apt-get%20update%20%26%26%20apt-get%20-y%20install%20git%20%5C%0A%20%20%20%20%26%26%20rm%20-rf%20%22/opt/letsencrypt%22%20%5C%0A%20%20%20%20%26%26%20git%20clone%20https%3A//github.com/letsencrypt/letsencrypt%20/opt/letsencrypt%20%5C%0A%20%20%20%20%26%26%20cd%20/opt/letsencrypt%20%5C%0A%20%20%20%20%26%26%20./letsencrypt-auto%20--version%0A%60%60%60%0A%0Awordpress%20%u5B98%u65B9%u955C%u50CF%u4F7F%u7528%u7684%20ubuntu%20%u6E90%u662F%u56FD%u5916%u6E90%uFF0C%u6253%u5305%u955C%u50CF%u7684%u901F%u5EA6%u4F1A%u8BA9%u4F60%u6000%u7591%u4EBA%u751F%u3002%u53EF%u4EE5%u628A%u5BBF%u4E3B%u673A%u7684%20ubuntu%20%u6E90%u653E%u8FDB%20docker%20%u955C%u50CF%u91CC%u3002%0A%60%24cp%20/etc/apt/sources.list%20./%60%0A%0A%u4FEE%u6539%20Dockerfile%0A%60%60%60%0AFROM%20wordpress%3Aphp7.1%0A%0AADD%20sources.list%20/etc/apt/sources.list%0A%0ARUN%20apt-key%20adv%20--keyserver%20keyserver.ubuntu.com%20--recv-keys%20%5C%0A%20%20%20%20%26%26%20apt-key%20adv%20--keyserver%20keyserver.ubuntu.com%20--recv-keys%203B4FE6ACC0B21F32%20//%20%u6539%u6210%u4F60%u7684%20key%0A%0ARUN%20echo%20%22export%20TERM%3Dxterm%20LANG%3Den_US.UTF-8%22%20%3E%3E%20%7E/.bashrc%20%5C%0A%20%20%20%20%26%26%20apt-get%20update%20%26%26%20apt-get%20-y%20install%20git%20%5C%0A%20%20%20%20%26%26%20rm%20-rf%20%22/opt/letsencrypt%22%20%5C%0A%20%20%20%20%26%26%20git%20clone%20https%3A//github.com/letsencrypt/letsencrypt%20/opt/letsencrypt%20%5C%0A%20%20%20%20%26%26%20cd%20/opt/letsencrypt%20%5C%0A%20%20%20%20%26%26%20./letsencrypt-auto%20--version%0A%60%60%60%0A%u6DFB%u52A0%u65B0%u7684%u6E90%u4F1A%u6709%u8BA4%u8BC1%u7684%u95EE%u9898%uFF0C%u53EF%u4EE5%u53C2%u8003%20http%3A//naveenubuntu.blogspot.com/2011/08/fixing-gpg-keys-in-ubuntu.html%20%u89E3%u51B3%0A%0A%23%23%20%u914D%u7F6E%20https%0A%u542F%u52A8%u5BB9%u5668%uFF1A%0A%0A%60%24docker-compose%20up%20-d%60%0A%0A%u7136%u540E%u914D%u7F6E%20https%20%0A%60%24docker-compose%20exec%20wordpress_tls%20/opt/letsencrypt/certbot-auto%20--apache%20-d%20your.domain.com%20--agree-tos%20-n%20-m%20you@your.domain.com%60%0A%0ALet%u2019s%20Encrypt%20%u7684%u8BC1%u4E6690%u5929%u5C31%u8FC7%u671F%u4E86%uFF0C%u8FC7%u671F%u540E%u6267%u884C%0A%0A%60%24%20docker-compose%20exec%20wordpress_tls%20/opt/letsencrypt/certbot-auto%20renew%60%0A%0A%u6765%u66F4%u65B0%uFF0C%u53EF%u4EE5%u628A%u66F4%u65B0%u811A%u672C%u5199%u8FDB%20crontab%0A%60%24crontab%20-e%20%60%0A%0A%60%60%60%0A0%200%201%20*%20*%20docker-compose%20exec%20wordpress_tls%20/opt/letsencrypt/certbot-auto%20renew%0A%60%60%60%0A%0A%23%23%u5B8C%u6574%u793A%u4F8B%0Ahttps%3A//github.com/myfjdthink/docker-wordpress</center>"
  },
  {
    "title": "使用 typescript 做后端应用开发",
    "created": "2017-02-07T22:48:45.000Z",
    "updated": "2017-05-26T22:32:00.000Z",
    "tags": [
      "编程相关",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=643139af-949b-4aaf-bf9a-eb69b78cc5e9&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n最近开始了一个新的小项目，所以打算使用 typescript，感受一下有类型系统的 js。\n\n## 技术选型\n\ntypescript+express+mongoose  \n因为 typescript 已经提供了 async await 语法的支持，所以就不考虑使用 koa 了，因为 express 的中间件会更丰富一些。\n\n数据库部分则使用 mongoose 来连接。\n\ntest.\n\n## 好玩的点\n\n1.  ES6语法全支持\n2.  async + await 带了了同步代码的编写体验\n3.  decorator 装饰器\n4.  编译期的错误提示\n\n下面是一个 Controller 的代码 Demo。\n\n    /** * Created by nick on 16/5/20. */import e = require('express');import BaseController from './common/BaseController';import Logger from '../../Logger';import {router} from '../decorators/Web';import {User} from '../models/User';class UserController extends BaseController { @router('post /user/create') async create(req: e.Request, res: e.Response) { const user = req.body console.log('UserAccountController', 'create ', user); const cUser = await User.create(user) console.log('UserAccountController', 'create result', cUser); res.send(cUser); } @router() async findOne(req: e.Request, res) { const ud = req.query.ud Logger.info('ud ', ud) let result = await User.findById(ud); res.send(result); }}export default UserController\n\n## 项目代码\n\n项目代码已经放在了 github 上。  \n[https://github.com/myfjdthink/typescript-express-mongoose](https://github.com/myfjdthink/typescript-express-mongoose)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%5D%0A%23%u4F7F%u7528%20typescript%20%u505A%u540E%u7AEF%u5E94%u7528%u5F00%u53D1%0A%u6700%u8FD1%u5F00%u59CB%u4E86%u4E00%u4E2A%u65B0%u7684%u5C0F%u9879%u76EE%uFF0C%u6240%u4EE5%u6253%u7B97%u4F7F%u7528%20typescript%uFF0C%u611F%u53D7%u4E00%u4E0B%u6709%u7C7B%u578B%u7CFB%u7EDF%u7684%20js%u3002%0A%0A%23%23%20%u6280%u672F%u9009%u578B%0Atypescript+express+mongoose%0A%u56E0%u4E3A%20typescript%20%u5DF2%u7ECF%u63D0%u4F9B%u4E86%20async%20await%20%u8BED%u6CD5%u7684%u652F%u6301%uFF0C%u6240%u4EE5%u5C31%u4E0D%u8003%u8651%u4F7F%u7528%20koa%20%u4E86%uFF0C%u56E0%u4E3A%20express%20%u7684%u4E2D%u95F4%u4EF6%u4F1A%u66F4%u4E30%u5BCC%u4E00%u4E9B%u3002%0A%0A%u6570%u636E%u5E93%u90E8%u5206%u5219%u4F7F%u7528%20mongoose%20%u6765%u8FDE%u63A5%u3002%0A%0Atest.%0A%0A%23%23%20%u597D%u73A9%u7684%u70B9%0A1.%20ES6%u8BED%u6CD5%u5168%u652F%u6301%0A2.%20async%20+%20await%20%u5E26%u4E86%u4E86%u540C%u6B65%u4EE3%u7801%u7684%u7F16%u5199%u4F53%u9A8C%0A3.%20decorator%20%u88C5%u9970%u5668%0A4.%20%u7F16%u8BD1%u671F%u7684%u9519%u8BEF%u63D0%u793A%0A%0A%u4E0B%u9762%u662F%u4E00%u4E2A%20Controller%20%u7684%u4EE3%u7801%20Demo%u3002%0A%60%60%60%0A/**%0A%20*%20Created%20by%20nick%20on%2016/5/20.%0A%20*/%0Aimport%20e%20%3D%20require%28%27express%27%29%3B%0Aimport%20BaseController%20from%20%27./common/BaseController%27%3B%0Aimport%20Logger%20from%20%27../../Logger%27%3B%0Aimport%20%7Brouter%7D%20from%20%27../decorators/Web%27%3B%0Aimport%20%7BUser%7D%20from%20%27../models/User%27%3B%0A%0Aclass%20UserController%20extends%20BaseController%20%7B%0A%20%20@router%28%27post%20/user/create%27%29%0A%20%20async%20create%28req%3A%20e.Request%2C%20res%3A%20e.Response%29%20%7B%0A%20%20%20%20const%20user%20%3D%20req.body%0A%20%20%20%20console.log%28%27UserAccountController%27%2C%20%27create%20%27%2C%20user%29%3B%0A%20%20%20%20const%20cUser%20%3D%20await%20User.create%28user%29%0A%20%20%20%20console.log%28%27UserAccountController%27%2C%20%27create%20result%27%2C%20cUser%29%3B%0A%20%20%20%20res.send%28cUser%29%3B%0A%20%20%7D%0A%0A%20%20@router%28%29%0A%20%20async%20findOne%28req%3A%20e.Request%2C%20res%29%20%7B%0A%20%20%20%20const%20ud%20%3D%20req.query.ud%0A%20%20%20%20Logger.info%28%27ud%20%27%2C%20ud%29%0A%20%20%20%20let%20result%20%3D%20await%20User.findById%28ud%29%3B%0A%20%20%20%20res.send%28result%29%3B%0A%20%20%7D%0A%7D%0Aexport%20default%20UserController%0A%60%60%60%0A%0A%23%23%20%u9879%u76EE%u4EE3%u7801%0A%u9879%u76EE%u4EE3%u7801%u5DF2%u7ECF%u653E%u5728%u4E86%20github%20%u4E0A%u3002%0Ahttps%3A//github.com/myfjdthink/typescript-express-mongoose%0A%0A</center>"
  },
  {
    "title": "Node 后端开发的几种测试方式",
    "created": "2017-05-22T21:12:58.000Z",
    "updated": "2017-05-26T22:30:25.000Z",
    "tags": [
      "Node",
      "技巧",
      "编程相关",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=b7a625fe-ca3f-407b-ae8b-acb04d7dd33d&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n后端开发中，只需要针对接口（无 GUI）做自动化测试，还是比较容易实现的，所以在开发过程中尽量写好测试。在这里总结下我在工作中用到的测试方法。这里以 Nodejs 的后端开发为例。\n\n## 单元测试\n\n单元测试的重要性不言而喻，算是业界共识了。  \n在有完善的单元测试的基础上，可以很方便地做到持续集成。  \n提到单元测试，大家很容易想到 TDD，我个人认为 TDD 并不是一件很容易做到的事情，特别是小团队需求多变的时候，往往会追求先出功能后补测试。\n\n## 集成测试\n\n考拉里的集成测试一般是通过一个接口对 N 个方法进行集成，这个接口会调用 N 个方法。这种集成测试是对单元测试的一种补充。  \n因为集成测试的粒度比较大，在做测试的时候往往会碰到个很麻烦的问题：怎么准备测试数据？\n\n### 准备测试数据\n\n测试数据存储位置  \n使用 js 来存储数据，相对于 json 来说 js 可以编程，例如需要定义一个日期是昨天，json 是做不到的。\n\n<en-media longdesc=\"./1483070616309.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"d4b02d6ffd8d5adcd857646a012da213\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n在测试开始前载入测试数据\n\n<en-media longdesc=\"./1483070671543.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"e5da0e3f4b72ee6ba3265554dc7c5e51\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n准备测试数据是件比较繁琐的事情，建议直接从生产环境拉取用户数据。脱敏后作为测试数据用。\n\n<en-media longdesc=\"./1483070703460.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"8bb655640939dbd24e67cead6b4de8b3\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n写个脚本去线上拉取数据\n\n<en-media longdesc=\"./1483070766987.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"d9e2ef050a6f588d2b8861349244eaa4\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\nGenTextUserData.test.js  \n关键点：  \nmongodump with query  \ntosource\n\n## 平行测试\n\n重构用，新写一个方法，新旧方法一起执行，判断结果是否一致。把不一致的结果收集起来。  \n效果卓群，可以发现很多意想不到的 BUG。  \n但是比较使用范围有限，只能测试只读的方法。\n\n<en-media longdesc=\"./1483071012064.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"baa7651d8a56a01522e40d22acb56a99\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n## 灰度测试\n\n最实用，成本很低的方案。  \n灰度发布，只有部分人可以使用新功能，观察一段时间。\n\n## 全量覆盖测试\n\n使用大量真实数据来测试，真实数据可以提供足够的样本。  \n例如开发一个新功能，把所有用户的数据 load 进来，模拟使用这个新功能，看看是否有报错。  \n但是这个做法成本毕竟高，只有重要的功能才需要这样做。  \n而且用户数据大于百万级别时，整个测试耗时将非常漫长，可以考虑过滤部分用户把量控制在10万以内。\n\n<en-media longdesc=\"./1483071074886.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"487f9ca84f29f977a6c0df23ed317a07\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n## 人工测试\n\n在测试环境，作为用户，体验一遍此次开发的功能，看看前面的测试是否有遗漏。  \n辅助工具  \nHDC  \nPOSTMAN\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%2C%20%u6280%u5DE7%5D%0A%23Node%20%u540E%u7AEF%u5F00%u53D1%u7684%u51E0%u79CD%u6D4B%u8BD5%u65B9%u5F0F%0A%0A%u540E%u7AEF%u5F00%u53D1%u4E2D%uFF0C%u53EA%u9700%u8981%u9488%u5BF9%u63A5%u53E3%uFF08%u65E0%20GUI%uFF09%u505A%u81EA%u52A8%u5316%u6D4B%u8BD5%uFF0C%u8FD8%u662F%u6BD4%u8F83%u5BB9%u6613%u5B9E%u73B0%u7684%uFF0C%u6240%u4EE5%u5728%u5F00%u53D1%u8FC7%u7A0B%u4E2D%u5C3D%u91CF%u5199%u597D%u6D4B%u8BD5%u3002%u5728%u8FD9%u91CC%u603B%u7ED3%u4E0B%u6211%u5728%u5DE5%u4F5C%u4E2D%u7528%u5230%u7684%u6D4B%u8BD5%u65B9%u6CD5%u3002%u8FD9%u91CC%u4EE5%20Nodejs%20%u7684%u540E%u7AEF%u5F00%u53D1%u4E3A%u4F8B%u3002%0A%0A%23%23%u5355%u5143%u6D4B%u8BD5%0A%u5355%u5143%u6D4B%u8BD5%u7684%u91CD%u8981%u6027%u4E0D%u8A00%u800C%u55BB%uFF0C%u7B97%u662F%u4E1A%u754C%u5171%u8BC6%u4E86%u3002%0A%u5728%u6709%u5B8C%u5584%u7684%u5355%u5143%u6D4B%u8BD5%u7684%u57FA%u7840%u4E0A%uFF0C%u53EF%u4EE5%u5F88%u65B9%u4FBF%u5730%u505A%u5230%u6301%u7EED%u96C6%u6210%u3002%0A%u63D0%u5230%u5355%u5143%u6D4B%u8BD5%uFF0C%u5927%u5BB6%u5F88%u5BB9%u6613%u60F3%u5230%20TDD%uFF0C%u6211%u4E2A%u4EBA%u8BA4%u4E3A%20TDD%20%u5E76%u4E0D%u662F%u4E00%u4EF6%u5F88%u5BB9%u6613%u505A%u5230%u7684%u4E8B%u60C5%uFF0C%u7279%u522B%u662F%u5C0F%u56E2%u961F%u9700%u6C42%u591A%u53D8%u7684%u65F6%u5019%uFF0C%u5F80%u5F80%u4F1A%u8FFD%u6C42%u5148%u51FA%u529F%u80FD%u540E%u8865%u6D4B%u8BD5%u3002%0A%0A%23%23%u96C6%u6210%u6D4B%u8BD5%0A%u8003%u62C9%u91CC%u7684%u96C6%u6210%u6D4B%u8BD5%u4E00%u822C%u662F%u901A%u8FC7%u4E00%u4E2A%u63A5%u53E3%u5BF9%20N%20%u4E2A%u65B9%u6CD5%u8FDB%u884C%u96C6%u6210%uFF0C%u8FD9%u4E2A%u63A5%u53E3%u4F1A%u8C03%u7528%20N%20%u4E2A%u65B9%u6CD5%u3002%u8FD9%u79CD%u96C6%u6210%u6D4B%u8BD5%u662F%u5BF9%u5355%u5143%u6D4B%u8BD5%u7684%u4E00%u79CD%u8865%u5145%u3002%0A%u56E0%u4E3A%u96C6%u6210%u6D4B%u8BD5%u7684%u7C92%u5EA6%u6BD4%u8F83%u5927%uFF0C%u5728%u505A%u6D4B%u8BD5%u7684%u65F6%u5019%u5F80%u5F80%u4F1A%u78B0%u5230%u4E2A%u5F88%u9EBB%u70E6%u7684%u95EE%u9898%uFF1A%u600E%u4E48%u51C6%u5907%u6D4B%u8BD5%u6570%u636E%uFF1F%0A%0A%23%23%23%u51C6%u5907%u6D4B%u8BD5%u6570%u636E%0A%u6D4B%u8BD5%u6570%u636E%u5B58%u50A8%u4F4D%u7F6E%0A%u4F7F%u7528%20js%20%u6765%u5B58%u50A8%u6570%u636E%uFF0C%u76F8%u5BF9%u4E8E%20json%20%u6765%u8BF4%20%20js%20%u53EF%u4EE5%u7F16%u7A0B%uFF0C%u4F8B%u5982%u9700%u8981%u5B9A%u4E49%u4E00%u4E2A%u65E5%u671F%u662F%u6628%u5929%uFF0Cjson%20%u662F%u505A%u4E0D%u5230%u7684%u3002%0A%21%5BAlt%20text%5D%28./1483070616309.png%29%0A%0A%u5728%u6D4B%u8BD5%u5F00%u59CB%u524D%u8F7D%u5165%u6D4B%u8BD5%u6570%u636E%0A%21%5BAlt%20text%5D%28./1483070671543.png%29%0A%0A%0A%u51C6%u5907%u6D4B%u8BD5%u6570%u636E%u662F%u4EF6%u6BD4%u8F83%u7E41%u7410%u7684%u4E8B%u60C5%uFF0C%u5EFA%u8BAE%u76F4%u63A5%u4ECE%u751F%u4EA7%u73AF%u5883%u62C9%u53D6%u7528%u6237%u6570%u636E%u3002%u8131%u654F%u540E%u4F5C%u4E3A%u6D4B%u8BD5%u6570%u636E%u7528%u3002%0A%21%5BAlt%20text%5D%28./1483070703460.png%29%0A%0A%u5199%u4E2A%u811A%u672C%u53BB%u7EBF%u4E0A%u62C9%u53D6%u6570%u636E%0A%21%5BAlt%20text%5D%28./1483070766987.png%29%0A%0AGenTextUserData.test.js%0A%u5173%u952E%u70B9%uFF1A%0Amongodump%20with%20query%0Atosource%0A%0A%23%23%u5E73%u884C%u6D4B%u8BD5%0A%u91CD%u6784%u7528%uFF0C%u65B0%u5199%u4E00%u4E2A%u65B9%u6CD5%uFF0C%u65B0%u65E7%u65B9%u6CD5%u4E00%u8D77%u6267%u884C%uFF0C%u5224%u65AD%u7ED3%u679C%u662F%u5426%u4E00%u81F4%u3002%u628A%u4E0D%u4E00%u81F4%u7684%u7ED3%u679C%u6536%u96C6%u8D77%u6765%u3002%0A%u6548%u679C%u5353%u7FA4%uFF0C%u53EF%u4EE5%u53D1%u73B0%u5F88%u591A%u610F%u60F3%u4E0D%u5230%u7684%20BUG%u3002%0A%u4F46%u662F%u6BD4%u8F83%u4F7F%u7528%u8303%u56F4%u6709%u9650%uFF0C%u53EA%u80FD%u6D4B%u8BD5%u53EA%u8BFB%u7684%u65B9%u6CD5%u3002%0A%0A%21%5BAlt%20text%5D%28./1483071012064.png%29%0A%0A%0A%23%23%u7070%u5EA6%u6D4B%u8BD5%0A%u6700%u5B9E%u7528%uFF0C%u6210%u672C%u5F88%u4F4E%u7684%u65B9%u6848%u3002%0A%u7070%u5EA6%u53D1%u5E03%uFF0C%u53EA%u6709%u90E8%u5206%u4EBA%u53EF%u4EE5%u4F7F%u7528%u65B0%u529F%u80FD%uFF0C%u89C2%u5BDF%u4E00%u6BB5%u65F6%u95F4%u3002%0A%0A%23%23%u5168%u91CF%u8986%u76D6%u6D4B%u8BD5%0A%u4F7F%u7528%u5927%u91CF%u771F%u5B9E%u6570%u636E%u6765%u6D4B%u8BD5%uFF0C%u771F%u5B9E%u6570%u636E%u53EF%u4EE5%u63D0%u4F9B%u8DB3%u591F%u7684%u6837%u672C%u3002%0A%u4F8B%u5982%u5F00%u53D1%u4E00%u4E2A%u65B0%u529F%u80FD%uFF0C%u628A%u6240%u6709%u7528%u6237%u7684%u6570%u636E%20load%20%u8FDB%u6765%uFF0C%u6A21%u62DF%u4F7F%u7528%u8FD9%u4E2A%u65B0%u529F%u80FD%uFF0C%u770B%u770B%u662F%u5426%u6709%u62A5%u9519%u3002%0A%u4F46%u662F%u8FD9%u4E2A%u505A%u6CD5%u6210%u672C%u6BD5%u7ADF%u9AD8%uFF0C%u53EA%u6709%u91CD%u8981%u7684%u529F%u80FD%u624D%u9700%u8981%u8FD9%u6837%u505A%u3002%0A%u800C%u4E14%u7528%u6237%u6570%u636E%u5927%u4E8E%u767E%u4E07%u7EA7%u522B%u65F6%uFF0C%u6574%u4E2A%u6D4B%u8BD5%u8017%u65F6%u5C06%u975E%u5E38%u6F2B%u957F%uFF0C%u53EF%u4EE5%u8003%u8651%u8FC7%u6EE4%u90E8%u5206%u7528%u6237%u628A%u91CF%u63A7%u5236%u572810%u4E07%u4EE5%u5185%u3002%0A%21%5BAlt%20text%5D%28./1483071074886.png%29%0A%0A%23%23%u4EBA%u5DE5%u6D4B%u8BD5%0A%u5728%u6D4B%u8BD5%u73AF%u5883%uFF0C%u4F5C%u4E3A%u7528%u6237%uFF0C%u4F53%u9A8C%u4E00%u904D%u6B64%u6B21%u5F00%u53D1%u7684%u529F%u80FD%uFF0C%u770B%u770B%u524D%u9762%u7684%u6D4B%u8BD5%u662F%u5426%u6709%u9057%u6F0F%u3002%0A%u8F85%u52A9%u5DE5%u5177%20%0AHDC%0APOSTMAN</center>"
  },
  {
    "title": "flow type 体验",
    "created": "2017-05-17T03:25:33.000Z",
    "updated": "2017-05-19T01:27:33.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "flow type 是由 Facebook 出品的类型检查工具。\n\n最近在一个新的后端项目上体验flow，也在内部做了分享，在这里再次总结下 flow 的优缺点。\n\n优点：\n\n*   类型检验，能提前发现一些问题\n*   相对于 typescript ，flow 像 babel 一样提供了一个 runtime，可以直接运行flow 代码\n\n还欠缺的地方：\n\n*   webstorm 对 flow 支持并不完善，不能做到像 typescript 那样做到代码补全，而且 webstorm 执行 flow 检查会卡顿\n*   和 mongoose 无法有效配合，目前 flow 对第三方库的支持甚少\n*   对 commonjs 支持太差，require 第三方包会报错，暂时未找到解决方案，估计是我没用对。"
  },
  {
    "title": "NodeJS 中基于 Redis 的分布式锁解决方案。",
    "created": "2016-11-28T18:55:36.000Z",
    "updated": "2017-02-08T20:16:23.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=c11e2ae8-282b-4d6c-b0fc-2d534e6505fd&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# NodeJS 中基于 Redis 的分布式锁解决方案。\n\n## 前言0\n\n在分布式系统中，会经常碰到两个问题：\n\n*   互斥性问题。\n*   幂等性问题。\n\n## 分布式锁\n\n互斥性问题的解决方案是 – 分布式锁；  \n幂等性问题，分布式环境中，有些接口是天然保证幂等性的，如查询操作。其他情况下，所有涉及对数据的修改、状态的变更就都有必要防止重复性操作的发生。通过间接的实现接口的幂等性来防止重复操作所带来的影响，成为了一种有效的解决方案。这个间接方案也可以使用分布式锁来实现。\n\n### 分布式锁条件\n\n基本的条件：\n\n*   需要有存储锁的空间，并且锁的空间是可以访问到的。\n*   锁需要被唯一标识。\n*   锁要有至少两种状态。\n\n使用 Redis 完全可以满足上述条件。\n\n## 解决方案\n\n### 简单的解决方案\n\n通常在 Node 中一个简单的基于 Redis 的解决方案是这样的：  \n发送 SETNX lock.orderid 尝试获得锁。  \n如果锁不存在，则 set 并获得锁。  \n如果锁存在，则跳过此次操作或者等待一下再重试。\n\nSETNX 是一个原子操作，可以保证只有一个节点会拿到锁。\n\n### Redis 推荐的方案\n\n上述的方案中，还是有点问题，在 Redis 出现单点故障，例如 master 节点宕机了，而 Redis 的复制是异步的，可能出现以下情况：\n\n1.  客户端 A 在 master 节点拿到了锁。\n2.  master 节点在把 A 创建的 key 写入 slave 之前宕机了。\n3.  slave 变成了 master 节点 4.B 也得到了和 A 还持有的相同的锁（因为原来的 slave 里还没有 A 持有锁的信息）\n\n所以为了避免上述问题，Redis 官方给出了更加可靠的实现 [Distributed locks with Redis](https://redis.io/topics/distlock)，  \n中译文版本 [用 Redis 构建分布式锁](http://ifeve.com/redis-lock/)，这个方案提出了一个Redlock 算法，文章里有详细解析，这里就不赘述了。\n\n### Redlock 的实现\n\nRedlock 有针对不同语言的实现，NodeJS 的实现是[node-redlock](https://github.com/mike-marcacci/node-redlock)  \n官网给出的一个例子：\n\n    // the string identifier for the resource you want to lockvar resource = 'locks:account:322456';// the maximum amount of time you want the resource locked,// keeping in mind that you can extend the lock up until// the point when it expiresvar ttl = 1000;redlock.lock(resource, ttl, function(err, lock) { // we failed to lock the resource if(err) { // ... } // we have the lock else { // ...do something here... // unlock your resource when you are done lock.unlock(function(err) { // we weren't able to reach redis; your lock will eventually // expire, but you probably want to log this error console.error(err); }); }});\n\n使用起来还是比较简单的，在操作开始之前 lock 并设置 ttl，操作完成后 unlock 即可。\n\n### 包装一下 redlock\n\n如果要给某些个接口或者 function 添加一个 lock 的话，直接修改接口是件很麻烦的事情，所以我们可以把 redlock 稍微封装一下。\n\n    /** * 锁操作 * @param user_id * @param operate * @param process * @param callback * @param options */lockProcess: function (user_id, operate, process, callback, options) { var lock = null Thenjs(function (cont) { var ttl = options ? options.ttl : null; self.lock(user_id, operate, ttl, function (err, clock) { // 加锁失败直接退出 if (err) return callback(err); lock = clock cont() }); }).then(function (cont) { // 实际的业务逻辑 process(cont); }).then(function (cont, result) { self.unlock(lock, function (err) { cont(err, result) }); }).then(function (cont, result) { callback(null, result) }).fail(function (cont, err) { // 操作失败记得解锁 self.unlock(lock, function (unlockErr) { callback(err || unlockErr) }); });}\n\n这样我们可以直接把之前的代码包装一下就能用，就不需要侵入之前的业务逻辑了。\n\n    LockService.lockProcess(order.user_id, 'dsPurchase', function (innerCb) { self.dsPurchase(order, innerCb); // 业务逻辑}, function (err, result) { callback(err, result);});\n\n假设你要针对一个接口加锁的话，还可以新建一个过滤器，然后给接口配置了过滤器就自动加上锁啦。如果是使用 express 的话，可以参考[如何修改sails 的 response](http://myfjdthink.applinzi.com/?p=873)来设计过滤器，在 response 的时候解锁即可。\n\n## 参考\n\n[node-redlock](https://github.com/mike-marcacci/node-redlock)  \n[Distributed locks with Redis](https://redis.io/topics/distlock)，  \n[用 Redis 构建分布式锁](http://ifeve.com/redis-lock/)  \n[分布式系统互斥性与幂等性问题的分析与解决](https://zhuanlan.zhihu.com/p/22820761)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%5D%0A%23NodeJS%20%u4E2D%u57FA%u4E8E%20Redis%20%u7684%u5206%u5E03%u5F0F%u9501%u89E3%u51B3%u65B9%u6848%u3002%0A%0A%23%23%u524D%u8A000%0A%u5728%u5206%u5E03%u5F0F%u7CFB%u7EDF%u4E2D%uFF0C%u4F1A%u7ECF%u5E38%u78B0%u5230%u4E24%u4E2A%u95EE%u9898%uFF1A%0A-%20%u4E92%u65A5%u6027%u95EE%u9898%u3002%0A-%20%u5E42%u7B49%u6027%u95EE%u9898%u3002%0A%0A%23%23%u5206%u5E03%u5F0F%u9501%0A%u4E92%u65A5%u6027%u95EE%u9898%u7684%u89E3%u51B3%u65B9%u6848%u662F%20--%20%u5206%u5E03%u5F0F%u9501%uFF1B%0A%u5E42%u7B49%u6027%u95EE%u9898%uFF0C%u5206%u5E03%u5F0F%u73AF%u5883%u4E2D%uFF0C%u6709%u4E9B%u63A5%u53E3%u662F%u5929%u7136%u4FDD%u8BC1%u5E42%u7B49%u6027%u7684%uFF0C%u5982%u67E5%u8BE2%u64CD%u4F5C%u3002%u5176%u4ED6%u60C5%u51B5%u4E0B%uFF0C%u6240%u6709%u6D89%u53CA%u5BF9%u6570%u636E%u7684%u4FEE%u6539%u3001%u72B6%u6001%u7684%u53D8%u66F4%u5C31%u90FD%u6709%u5FC5%u8981%u9632%u6B62%u91CD%u590D%u6027%u64CD%u4F5C%u7684%u53D1%u751F%u3002%u901A%u8FC7%u95F4%u63A5%u7684%u5B9E%u73B0%u63A5%u53E3%u7684%u5E42%u7B49%u6027%u6765%u9632%u6B62%u91CD%u590D%u64CD%u4F5C%u6240%u5E26%u6765%u7684%u5F71%u54CD%uFF0C%u6210%u4E3A%u4E86%u4E00%u79CD%u6709%u6548%u7684%u89E3%u51B3%u65B9%u6848%u3002%u8FD9%u4E2A%u95F4%u63A5%u65B9%u6848%u4E5F%u53EF%u4EE5%u4F7F%u7528%u5206%u5E03%u5F0F%u9501%u6765%u5B9E%u73B0%u3002%0A%0A%23%23%23%u5206%u5E03%u5F0F%u9501%u6761%u4EF6%0A%u57FA%u672C%u7684%u6761%u4EF6%uFF1A%0A%0A-%20%u9700%u8981%u6709%u5B58%u50A8%u9501%u7684%u7A7A%u95F4%uFF0C%u5E76%u4E14%u9501%u7684%u7A7A%u95F4%u662F%u53EF%u4EE5%u8BBF%u95EE%u5230%u7684%u3002%0A-%20%u9501%u9700%u8981%u88AB%u552F%u4E00%u6807%u8BC6%u3002%0A-%20%u9501%u8981%u6709%u81F3%u5C11%u4E24%u79CD%u72B6%u6001%u3002%0A%0A%u4F7F%u7528%20Redis%20%u5B8C%u5168%u53EF%u4EE5%u6EE1%u8DB3%u4E0A%u8FF0%u6761%u4EF6%u3002%0A%0A%23%23%u89E3%u51B3%u65B9%u6848%0A%23%23%23%u7B80%u5355%u7684%u89E3%u51B3%u65B9%u6848%0A%u901A%u5E38%u5728%20Node%20%u4E2D%u4E00%u4E2A%u7B80%u5355%u7684%u57FA%u4E8E%20Redis%20%u7684%u89E3%u51B3%u65B9%u6848%u662F%u8FD9%u6837%u7684%uFF1A%0A%u53D1%u9001%20SETNX%20lock.orderid%20%u5C1D%u8BD5%u83B7%u5F97%u9501%u3002%0A%u5982%u679C%u9501%u4E0D%u5B58%u5728%uFF0C%u5219%20set%20%u5E76%u83B7%u5F97%u9501%u3002%0A%u5982%u679C%u9501%u5B58%u5728%uFF0C%u5219%u8DF3%u8FC7%u6B64%u6B21%u64CD%u4F5C%u6216%u8005%u7B49%u5F85%u4E00%u4E0B%u518D%u91CD%u8BD5%u3002%0A%0ASETNX%20%u662F%u4E00%u4E2A%u539F%u5B50%u64CD%u4F5C%uFF0C%u53EF%u4EE5%u4FDD%u8BC1%u53EA%u6709%u4E00%u4E2A%u8282%u70B9%u4F1A%u62FF%u5230%u9501%u3002%0A%0A%23%23%23Redis%20%u63A8%u8350%u7684%u65B9%u6848%0A%u4E0A%u8FF0%u7684%u65B9%u6848%u4E2D%uFF0C%u8FD8%u662F%u6709%u70B9%u95EE%u9898%uFF0C%u5728%20Redis%20%u51FA%u73B0%u5355%u70B9%u6545%u969C%uFF0C%u4F8B%u5982%20master%20%u8282%u70B9%u5B95%u673A%u4E86%uFF0C%u800C%20Redis%20%u7684%u590D%u5236%u662F%u5F02%u6B65%u7684%uFF0C%u53EF%u80FD%u51FA%u73B0%u4EE5%u4E0B%u60C5%u51B5%uFF1A%0A1.%20%u5BA2%u6237%u7AEF%20A%20%u5728%20master%20%u8282%u70B9%u62FF%u5230%u4E86%u9501%u3002%0A2.%20master%20%u8282%u70B9%u5728%u628A%20A%20%u521B%u5EFA%u7684%20key%20%u5199%u5165%20slave%20%u4E4B%u524D%u5B95%u673A%u4E86%u3002%0A3.%20slave%20%u53D8%u6210%u4E86%20master%20%u8282%u70B9%204.B%20%u4E5F%u5F97%u5230%u4E86%u548C%20A%20%u8FD8%u6301%u6709%u7684%u76F8%u540C%u7684%u9501%uFF08%u56E0%u4E3A%u539F%u6765%u7684%20slave%20%u91CC%u8FD8%u6CA1%u6709%20A%20%u6301%u6709%u9501%u7684%u4FE1%u606F%uFF09%0A%0A%u6240%u4EE5%u4E3A%u4E86%u907F%u514D%u4E0A%u8FF0%u95EE%u9898%uFF0CRedis%20%u5B98%u65B9%u7ED9%u51FA%u4E86%u66F4%u52A0%u53EF%u9760%u7684%u5B9E%u73B0%20%5BDistributed%20locks%20with%20Redis%5D%28https%3A//redis.io/topics/distlock%29%uFF0C%0A%u4E2D%u8BD1%u6587%u7248%u672C%20%5B%u7528%20Redis%20%u6784%u5EFA%u5206%u5E03%u5F0F%u9501%5D%28http%3A//ifeve.com/redis-lock/%29%uFF0C%u8FD9%u4E2A%u65B9%u6848%u63D0%u51FA%u4E86%u4E00%u4E2ARedlock%20%u7B97%u6CD5%uFF0C%u6587%u7AE0%u91CC%u6709%u8BE6%u7EC6%u89E3%u6790%uFF0C%u8FD9%u91CC%u5C31%u4E0D%u8D58%u8FF0%u4E86%u3002%0A%0A%23%23%23Redlock%20%u7684%u5B9E%u73B0%0ARedlock%20%u6709%u9488%u5BF9%u4E0D%u540C%u8BED%u8A00%u7684%u5B9E%u73B0%uFF0CNodeJS%20%u7684%u5B9E%u73B0%u662F%5Bnode-redlock%5D%28https%3A//github.com/mike-marcacci/node-redlock%29%0A%20%u5B98%u7F51%u7ED9%u51FA%u7684%u4E00%u4E2A%u4F8B%u5B50%uFF1A%0A%20%0A%0A%60%60%60%0A//%20the%20string%20identifier%20for%20the%20resource%20you%20want%20to%20lock%0Avar%20resource%20%3D%20%27locks%3Aaccount%3A322456%27%3B%0A%0A//%20the%20maximum%20amount%20of%20time%20you%20want%20the%20resource%20locked%2C%0A//%20keeping%20in%20mind%20that%20you%20can%20extend%20the%20lock%20up%20until%0A//%20the%20point%20when%20it%20expires%0Avar%20ttl%20%3D%201000%3B%0Aredlock.lock%28resource%2C%20ttl%2C%20function%28err%2C%20lock%29%20%7B%0A%20%20%20%20//%20we%20failed%20to%20lock%20the%20resource%0A%20%20%20%20if%28err%29%20%7B%0A%20%20%20%20%20%20%20%20//%20...%0A%20%20%20%20%7D%0A%20%20%20%20//%20we%20have%20the%20lock%0A%20%20%20%20else%20%7B%0A%20%20%20%20%20%20%20%20//%20...do%20something%20here...%0A%20%20%20%20%20%20%20%20//%20unlock%20your%20resource%20when%20you%20are%20done%0A%20%20%20%20%20%20%20%20lock.unlock%28function%28err%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20//%20we%20weren%27t%20able%20to%20reach%20redis%3B%20your%20lock%20will%20eventually%0A%20%20%20%20%20%20%20%20%20%20%20%20//%20expire%2C%20but%20you%20probably%20want%20to%20log%20this%20error%0A%20%20%20%20%20%20%20%20%20%20%20%20console.error%28err%29%3B%0A%20%20%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%7D%0A%7D%29%3B%0A%60%60%60%0A%0A%u4F7F%u7528%u8D77%u6765%u8FD8%u662F%u6BD4%u8F83%u7B80%u5355%u7684%uFF0C%u5728%u64CD%u4F5C%u5F00%u59CB%u4E4B%u524D%20lock%20%u5E76%u8BBE%u7F6E%20ttl%uFF0C%u64CD%u4F5C%u5B8C%u6210%u540E%20unlock%20%u5373%u53EF%u3002%0A%0A%23%23%23%20%u5305%u88C5%u4E00%u4E0B%20redlock%0A%u5982%u679C%u8981%u7ED9%u67D0%u4E9B%u4E2A%u63A5%u53E3%u6216%u8005%20function%20%u6DFB%u52A0%u4E00%u4E2A%20lock%20%u7684%u8BDD%uFF0C%u76F4%u63A5%u4FEE%u6539%u63A5%u53E3%u662F%u4EF6%u5F88%u9EBB%u70E6%u7684%u4E8B%u60C5%uFF0C%u6240%u4EE5%u6211%u4EEC%u53EF%u4EE5%u628A%20redlock%20%u7A0D%u5FAE%u5C01%u88C5%u4E00%u4E0B%u3002%0A%0A%60%60%60%0A/**%0A%20*%20%u9501%u64CD%u4F5C%0A%20*%20@param%20user_id%0A%20*%20@param%20operate%0A%20*%20@param%20process%0A%20*%20@param%20callback%0A%20*%20@param%20options%0A%20*/%0AlockProcess%3A%20function%20%28user_id%2C%20operate%2C%20process%2C%20callback%2C%20options%29%20%7B%0A%20%20var%20lock%20%3D%20null%0A%20%20Thenjs%28function%20%28cont%29%20%7B%0A%20%20%20%20var%20ttl%20%3D%20options%20%3F%20options.ttl%20%3A%20null%3B%0A%20%20%20%20self.lock%28user_id%2C%20operate%2C%20ttl%2C%20function%20%28err%2C%20clock%29%20%7B%0A%20%20%20%20%20%20//%20%u52A0%u9501%u5931%u8D25%u76F4%u63A5%u9000%u51FA%0A%20%20%20%20%20%20if%20%28err%29%20return%20callback%28err%29%3B%0A%20%20%20%20%20%20lock%20%3D%20clock%0A%20%20%20%20%20%20cont%28%29%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%29.then%28function%20%28cont%29%20%7B%0A%20%20%20%20//%20%u5B9E%u9645%u7684%u4E1A%u52A1%u903B%u8F91%0A%20%20%20%20process%28cont%29%3B%0A%20%20%7D%29.then%28function%20%28cont%2C%20result%29%20%7B%0A%20%20%20%20self.unlock%28lock%2C%20function%20%28err%29%20%7B%0A%20%20%20%20%20%20cont%28err%2C%20result%29%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%29.then%28function%20%28cont%2C%20result%29%20%7B%0A%20%20%20%20callback%28null%2C%20result%29%0A%20%20%7D%29.fail%28function%20%28cont%2C%20err%29%20%7B%0A%20%20%20%20//%20%u64CD%u4F5C%u5931%u8D25%u8BB0%u5F97%u89E3%u9501%0A%20%20%20%20self.unlock%28lock%2C%20function%20%28unlockErr%29%20%7B%0A%20%20%20%20%20%20callback%28err%20%7C%7C%20unlockErr%29%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%29%3B%0A%7D%0A%60%60%60%0A%0A%u8FD9%u6837%u6211%u4EEC%u53EF%u4EE5%u76F4%u63A5%u628A%u4E4B%u524D%u7684%u4EE3%u7801%u5305%u88C5%u4E00%u4E0B%u5C31%u80FD%u7528%uFF0C%u5C31%u4E0D%u9700%u8981%u4FB5%u5165%u4E4B%u524D%u7684%u4E1A%u52A1%u903B%u8F91%u4E86%u3002%0A%0A%60%60%60%0ALockService.lockProcess%28order.user_id%2C%20%27dsPurchase%27%2C%20function%20%28innerCb%29%20%7B%0A%20%20self.dsPurchase%28order%2C%20innerCb%29%3B%20//%20%u4E1A%u52A1%u903B%u8F91%0A%7D%2C%20function%20%28err%2C%20result%29%20%7B%0A%20%20callback%28err%2C%20result%29%3B%0A%7D%29%3B%0A%60%60%60%0A%0A%u5047%u8BBE%u4F60%u8981%u9488%u5BF9%u4E00%u4E2A%u63A5%u53E3%u52A0%u9501%u7684%u8BDD%uFF0C%u8FD8%u53EF%u4EE5%u65B0%u5EFA%u4E00%u4E2A%u8FC7%u6EE4%u5668%uFF0C%u7136%u540E%u7ED9%u63A5%u53E3%u914D%u7F6E%u4E86%u8FC7%u6EE4%u5668%u5C31%u81EA%u52A8%u52A0%u4E0A%u9501%u5566%u3002%u5982%u679C%u662F%u4F7F%u7528%20express%20%u7684%u8BDD%uFF0C%u53EF%u4EE5%u53C2%u8003%5B%u5982%u4F55%u4FEE%u6539sails%20%u7684%20response%5D%28http%3A//myfjdthink.applinzi.com/%3Fp%3D873%29%u6765%u8BBE%u8BA1%u8FC7%u6EE4%u5668%uFF0C%u5728%20response%20%u7684%u65F6%u5019%u89E3%u9501%u5373%u53EF%u3002%0A%0A%23%23%u53C2%u8003%0A%5Bnode-redlock%5D%28https%3A//github.com/mike-marcacci/node-redlock%29%0A%5BDistributed%20locks%20with%20Redis%5D%28https%3A//redis.io/topics/distlock%29%uFF0C%0A%5B%u7528%20Redis%20%u6784%u5EFA%u5206%u5E03%u5F0F%u9501%5D%28http%3A//ifeve.com/redis-lock/%29%0A%5B%u5206%u5E03%u5F0F%u7CFB%u7EDF%u4E92%u65A5%u6027%u4E0E%u5E42%u7B49%u6027%u95EE%u9898%u7684%u5206%u6790%u4E0E%u89E3%u51B3%5D%28https%3A//zhuanlan.zhihu.com/p/22820761%29%0A</center>"
  },
  {
    "title": "在 Node 里使用使用 this 的问题",
    "created": "2016-11-01T23:07:38.000Z",
    "updated": "2016-12-04T18:31:06.000Z",
    "tags": [
      "编程相关",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=72efa71c-0115-4bae-9ce4-f913d394d091&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# 在 Node 里使用使用 this 的问题\n\n## this 指向不正确\n\nNode 在 ES2016 里引入了 Class，终于不用使用 function 来模拟 class 了，最近在使用 Class 的时候碰到个关于 this 指向的小问题，记录下。  \n来看一段代码，两个文件：  \ntest_a.js\n\n    const test_b = require('./test_b')const funcs = { func_a: test_b.func_a}funcs.func_a()\n\ntest_b.js\n\n    'use strict';class B { func_a() { console.log(\"I'm func_a\"); this.func_b() } func_b() { console.log(\"I'm func_b\"); }}module.exports = new B()\n\n执行 test_a,js，会报错\n\n> /usr/local/bin/node test_a.js I’m func_a  \n> /Users/nick/nodePro/fin_base/api/models/test_b.js:5  \n> this.func_b()  \n> ^\n> \n> TypeError: this.func_b is not a function  \n> at Object.func_a (/Users/nick/nodePro/fin_base/api/models/test_b.js:5:10)  \n> at Object. (/Users/nick/nodePro/fin_base/api/models/test_a.js:6:7)  \n> at Module._compile (module.js:409:26)\n\n## 原因分析\n\n因为在把 func_a 赋值给 funcs 后，func_a 里的 this 指向的的是 test_a 文件里的 **funcs** 对象，而不是我们要预期的执行 test_b 文件里的 class B 实例。\n\n所以我们把赋值的代码稍微改一下：\n\n    func_a: function () { return test_b.func_a()}\n\n这样就可以了，如果要要传递参数，可以写成这样：\n\n    func_a: function () { return test_b.func_a.apply(test_b, arguments)}\n\n<center style=\"display:none\">%0A%23%u5728%20%20Node%20%u91CC%u4F7F%u7528%u4F7F%u7528%20this%20%u7684%u95EE%u9898%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%5D%0A%0A%0A%23%23this%20%u6307%u5411%u4E0D%u6B63%u786E%0ANode%20%u5728%20ES2016%20%u91CC%u5F15%u5165%u4E86%20Class%uFF0C%u7EC8%u4E8E%u4E0D%u7528%u4F7F%u7528%20function%20%u6765%u6A21%u62DF%20class%20%u4E86%uFF0C%u6700%u8FD1%u5728%u4F7F%u7528%20Class%20%u7684%u65F6%u5019%u78B0%u5230%u4E2A%u5173%u4E8E%20this%20%u6307%u5411%u7684%u5C0F%u95EE%u9898%uFF0C%u8BB0%u5F55%u4E0B%u3002%0A%u6765%u770B%u4E00%u6BB5%u4EE3%u7801%uFF0C%u4E24%u4E2A%u6587%u4EF6%uFF1A%0Atest_a.js%0A%0A%60%60%60%0Aconst%20test_b%20%3D%20require%28%27./test_b%27%29%0Aconst%20funcs%20%3D%20%7B%0A%20%20func_a%3A%20test_b.func_a%0A%7D%0Afuncs.func_a%28%29%0A%60%60%60%0A%0Atest_b.js%0A%0A%60%60%60%0A%27use%20strict%27%3B%0Aclass%20B%20%7B%0A%20%20func_a%28%29%20%7B%0A%20%20%20%20console.log%28%22I%27m%20func_a%22%29%3B%0A%20%20%20%20this.func_b%28%29%0A%20%20%7D%0A%0A%20%20func_b%28%29%20%7B%0A%20%20%20%20console.log%28%22I%27m%20func_b%22%29%3B%0A%20%20%7D%0A%7D%0Amodule.exports%20%3D%20new%20B%28%29%0A%60%60%60%0A%0A%u6267%u884C%20test_a%2Cjs%uFF0C%u4F1A%u62A5%u9519%0A%0A%3E%20/usr/local/bin/node%20test_a.js%20I%27m%20func_a%0A%3E%20/Users/nick/nodePro/fin_base/api/models/test_b.js%3A5%0A%3E%20%20%20%20%20this.func_b%28%29%0A%3E%20%20%20%20%20%20%20%20%20%20%5E%0A%3E%20%0A%3E%20TypeError%3A%20this.func_b%20is%20not%20a%20function%0A%3E%20%20%20%20%20at%20Object.func_a%20%28/Users/nick/nodePro/fin_base/api/models/test_b.js%3A5%3A10%29%0A%3E%20%20%20%20%20at%20Object.%3Canonymous%3E%20%28/Users/nick/nodePro/fin_base/api/models/test_a.js%3A6%3A7%29%0A%3E%20%20%20%20%20at%20Module._compile%20%28module.js%3A409%3A26%29%0A%0A%23%23%u539F%u56E0%u5206%u6790%0A%u56E0%u4E3A%u5728%u628A%20func_a%20%u8D4B%u503C%u7ED9%20funcs%20%u540E%uFF0Cfunc_a%20%u91CC%u7684%20this%20%u6307%u5411%u7684%u7684%u662F%20test_a%20%u6587%u4EF6%u91CC%u7684%20**funcs**%20%u5BF9%u8C61%uFF0C%u800C%u4E0D%u662F%u6211%u4EEC%u8981%u9884%u671F%u7684%u6267%u884C%20test_b%20%20%u6587%u4EF6%u91CC%u7684%20class%20B%20%u5B9E%u4F8B%u3002%0A%0A%u6240%u4EE5%u6211%u4EEC%u628A%u8D4B%u503C%u7684%u4EE3%u7801%u7A0D%u5FAE%u6539%u4E00%u4E0B%uFF1A%0A%0A%60%60%60%0Afunc_a%3A%20function%20%28%29%20%7B%0A%20%20return%20test_b.func_a%28%29%0A%7D%0A%60%60%60%0A%0A%u8FD9%u6837%u5C31%u53EF%u4EE5%u4E86%uFF0C%u5982%u679C%u8981%u8981%u4F20%u9012%u53C2%u6570%uFF0C%u53EF%u4EE5%u5199%u6210%u8FD9%u6837%uFF1A%0A%0A%60%60%60%0Afunc_a%3A%20function%20%28%29%20%7B%0A%20%20return%20test_b.func_a.apply%28test_b%2C%20arguments%29%0A%7D%0A%60%60%60</center>"
  },
  {
    "title": "写个自动寻路的贪吃蛇",
    "created": "2016-08-18T19:46:55.000Z",
    "updated": "2016-12-04T18:29:04.000Z",
    "tags": [
      "编程相关",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=68769495-3732-4b9e-84cc-8387063b111c&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# 写个自动寻路的贪吃蛇\n\n## 前言\n\n偶尔看到两年前写的贪吃蛇，当时没把自动寻路的算法写好，蛇容易挂，周末找了个时间把当年的坑填上，写了个不会挂的贪吃蛇。\n\n[两年前的版本_点击查看](http://runjs.cn/detail/q0w7il3b)\n\n<en-media longdesc=\"./1471578859676.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"f8f47ae5e47edd337d33132bce16932b\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n[这次更新的版本_点击查看](https://myfjdthink.github.io/snake/snakeAuto.html)\n\n<en-media longdesc=\"./1471578872510.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"0b92df7c3b0534f912f4350df11abc9f\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n代码比较简单，抛开 A* 算法的实现，整个 html 代码在 300 行以内~  \n源码 ：  \n[https://github.com/myfjdthink/myfjdthink.github.io/blob/master/snake/snakeAuto.html](https://github.com/myfjdthink/myfjdthink.github.io/blob/master/snake/snakeAuto.html)\n\n## 原理说明\n\n### 不死的方法\n\n首先要找出一个模式可以保持蛇不挂，这个模式就是  \n“跟着尾巴跑”\n\n如果蛇头和蛇尾是可以连通的，那么就不会挂。  \n所以只要保证任意时刻蛇头和蛇尾能连通即可。  \n寻路的伪代码如下：\n\n    if(head to flood){ // 蛇头能连通食物 模拟蛇吃到食物后的状态 if(newHead to tail){ // 吃到食物后还能连接尾巴 安全 eat flood } else { // 吃到食物后无法连接尾巴 放弃 flow tail }} else { flow tail // 跟着尾巴跑}\n\n在吃食物之前，需要模拟吃到食物后蛇的状态，判断此时蛇是否还能连接尾巴，由此决定是否吃掉食物。\n\n### 如何找到最短路径\n\n使用 A* 算法可以快速找到俩点之间的最短路径，网上找了个实现，就直接扒下来使用啦。  \n[http://devpro.it/examples/astar/index2.html](http://devpro.it/examples/astar/index2.html)\n\n### TODO\n\n目前只是实现了不死，在某些条件下，程序还是会陷入一个循环，这个有空在改进吧，欢迎提 PR。\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%5D%0A%23%u5199%u4E2A%u81EA%u52A8%u5BFB%u8DEF%u7684%u8D2A%u5403%u86C7%0A%0A%23%23%u524D%u8A00%0A%u5076%u5C14%u770B%u5230%u4E24%u5E74%u524D%u5199%u7684%u8D2A%u5403%u86C7%uFF0C%u5F53%u65F6%u6CA1%u628A%u81EA%u52A8%u5BFB%u8DEF%u7684%u7B97%u6CD5%u5199%u597D%uFF0C%u86C7%u5BB9%u6613%u6302%uFF0C%u5468%u672B%u627E%u4E86%u4E2A%u65F6%u95F4%u628A%u5F53%u5E74%u7684%u5751%u586B%u4E0A%uFF0C%u5199%u4E86%u4E2A%u4E0D%u4F1A%u6302%u7684%u8D2A%u5403%u86C7%u3002%0A%0A%5B%u4E24%u5E74%u524D%u7684%u7248%u672C_%u70B9%u51FB%u67E5%u770B%5D%28http%3A//runjs.cn/detail/q0w7il3b%29%0A%21%5BAlt%20text%5D%28./1471578859676.png%29%0A%0A%5B%u8FD9%u6B21%u66F4%u65B0%u7684%u7248%u672C_%u70B9%u51FB%u67E5%u770B%5D%28https%3A//myfjdthink.github.io/snake/snakeAuto.html%29%0A%21%5BAlt%20text%5D%28./1471578872510.png%29%0A%0A%u4EE3%u7801%u6BD4%u8F83%u7B80%u5355%uFF0C%u629B%u5F00%20A*%20%u7B97%u6CD5%u7684%u5B9E%u73B0%uFF0C%u6574%u4E2A%20html%20%u4EE3%u7801%u5728%20300%20%u884C%u4EE5%u5185%7E%0A%u6E90%u7801%20%uFF1A%0Ahttps%3A//github.com/myfjdthink/myfjdthink.github.io/blob/master/snake/snakeAuto.html%0A%0A%23%23%u539F%u7406%u8BF4%u660E%0A%23%23%23%20%u4E0D%u6B7B%u7684%u65B9%u6CD5%0A%u9996%u5148%u8981%u627E%u51FA%u4E00%u4E2A%u6A21%u5F0F%u53EF%u4EE5%u4FDD%u6301%u86C7%u4E0D%u6302%uFF0C%u8FD9%u4E2A%u6A21%u5F0F%u5C31%u662F%0A%u201C%u8DDF%u7740%u5C3E%u5DF4%u8DD1%u201D%0A%0A%u5982%u679C%u86C7%u5934%u548C%u86C7%u5C3E%u662F%u53EF%u4EE5%u8FDE%u901A%u7684%uFF0C%u90A3%u4E48%u5C31%u4E0D%u4F1A%u6302%u3002%0A%u6240%u4EE5%u53EA%u8981%u4FDD%u8BC1%u4EFB%u610F%u65F6%u523B%u86C7%u5934%u548C%u86C7%u5C3E%u80FD%u8FDE%u901A%u5373%u53EF%u3002%0A%u5BFB%u8DEF%u7684%u4F2A%u4EE3%u7801%u5982%u4E0B%uFF1A%0A%0A%0A%60%60%60%0Aif%28head%20to%20%20flood%29%7B%20//%20%u86C7%u5934%u80FD%u8FDE%u901A%u98DF%u7269%0A%20%20%20%20%u6A21%u62DF%u86C7%u5403%u5230%u98DF%u7269%u540E%u7684%u72B6%u6001%0A%20%20%20%20if%28newHead%20to%20tail%29%7B%20%20%20//%20%u5403%u5230%u98DF%u7269%u540E%u8FD8%u80FD%u8FDE%u63A5%u5C3E%u5DF4%20%u5B89%u5168%0A%20%20%20%20%20%20%20%20eat%20flood%0A%20%20%20%20%7D%20%20else%20%7B%0A%20%20%20%20%20%20%20%20//%20%u5403%u5230%u98DF%u7269%u540E%u65E0%u6CD5%u8FDE%u63A5%u5C3E%u5DF4%20%u653E%u5F03%0A%20%20%20%20%20%20%20%20flow%20tail%0A%20%20%20%20%7D%0A%7D%20else%20%7B%0A%20%20%20%20flow%20tail%20%20%20//%20%u8DDF%u7740%u5C3E%u5DF4%u8DD1%0A%7D%0A%60%60%60%0A%0A%u5728%u5403%u98DF%u7269%u4E4B%u524D%uFF0C%u9700%u8981%u6A21%u62DF%u5403%u5230%u98DF%u7269%u540E%u86C7%u7684%u72B6%u6001%uFF0C%u5224%u65AD%u6B64%u65F6%u86C7%u662F%u5426%u8FD8%u80FD%u8FDE%u63A5%u5C3E%u5DF4%uFF0C%u7531%u6B64%u51B3%u5B9A%u662F%u5426%u5403%u6389%u98DF%u7269%u3002%0A%0A%23%23%23%20%u5982%u4F55%u627E%u5230%u6700%u77ED%u8DEF%u5F84%0A%u4F7F%u7528%20A*%20%u7B97%u6CD5%u53EF%u4EE5%u5FEB%u901F%u627E%u5230%u4FE9%u70B9%u4E4B%u95F4%u7684%u6700%u77ED%u8DEF%u5F84%uFF0C%u7F51%u4E0A%u627E%u4E86%u4E2A%u5B9E%u73B0%uFF0C%u5C31%u76F4%u63A5%u6252%u4E0B%u6765%u4F7F%u7528%u5566%u3002%0Ahttp%3A//devpro.it/examples/astar/index2.html%0A%0A%23%23%23%20TODO%0A%u76EE%u524D%u53EA%u662F%u5B9E%u73B0%u4E86%u4E0D%u6B7B%uFF0C%u5728%u67D0%u4E9B%u6761%u4EF6%u4E0B%uFF0C%u7A0B%u5E8F%u8FD8%u662F%u4F1A%u9677%u5165%u4E00%u4E2A%u5FAA%u73AF%uFF0C%u8FD9%u4E2A%u6709%u7A7A%u5728%u6539%u8FDB%u5427%uFF0C%u6B22%u8FCE%u63D0%20PR%u3002</center>"
  },
  {
    "title": "JS 里怎么给数组填充默认值？",
    "created": "2016-11-03T22:27:22.000Z",
    "updated": "2016-12-04T18:28:55.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=a5e735d7-8180-4074-9296-e647f9592b9a&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n### JS 里怎么给数组填充默认值？\n\n今天看到一段代码：\n\n    Array.apply(null, Array(30)).map(() => 4)\n\n这代码的写法无法让人一下理解它的意图。  \nGoogle 之后知道它的作用是构造一个长度为 30 的数组，默认值是 4。\n\n#### 解析\n\n但是为什么要写得这么别扭呢？我们来分解下它每一步在做什么：\n\n    Array.apply(null, Array(30)) \n\n这一段代码生成一个长度为30的数组，里面的值都是 **undefined**。  \n之后的 `.map(() => 4)` ：负责填充默认值\n\n但是为什么构造一个空值数组需要这么麻烦呢？还要用上 apply 方法，尝试用 `Array(30).map(() => 4)` 来生成数组的话，你会得到这样的一个结果，根本就没有值。\n\n> [ , , , , , , , , , , , , , , , , , , , , , , , , , , , , , ]\n\n查看[文档](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array) 可以看到 Array 的构造函数语法，可以得知 Array 支持两种构造方式。使用参数形式给定 N 个数组元素，或者给定一个数组长度。\n\n <en-media longdesc=\"./1477050257372.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"ba5f0c34f4e6f543235ad8927bfa13c9\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">不过比较重要的一点文档里没提到，使用 `new Array(arrayLength)` 方式构造的数组是一个**稀疏数组**，里面是没有任何值的，只有长度。所以这个方式构造出来的数组是无法遍历的，也就无法用 map 遍历填充值了。</en-media>\n\n知道了上述的原因，我们就能理解：\n\n`Array.apply(null, Array(30))`  \n其实等于  \n`Array.apply(null, [, , , , , , , , , , , , , , , , , , , , , , , , , , , , ,]))`\n\n然后我们要继续了解 apply 方法，在这里可以看 apply 的作用 [文档解释](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply)， 这里不作介绍。apply 方法会把生成的稀疏数组展开并当做参数再次传给 Array 的构造函数，就是这样子：\n\n`Array(null,null,null......))`\n\n这样最终就会得到一个数组，这样就不是稀疏数组了，里面是有值的，虽然是 undefined。\n\n> [ undefined, undefined, undefined ……]\n\n#### 结语\n\n总结下，其实就是 js 的 Array 的默认构造函数生成的是稀疏数组，是无法用 map 遍历填充的。所以才写得这么绕。\n\n不过，说了这么多，要实现原本的需求，其实有更简单的方法啦：\n\n    Array(30).fill(4)\n\nfill 方法的[说明](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/fill)\n\n<center style=\"display:none\">%23%23%23%20JS%20%u91CC%u600E%u4E48%u7ED9%u6570%u7EC4%u586B%u5145%u9ED8%u8BA4%u503C%uFF1F%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%5D%0A%0A%u4ECA%u5929%u770B%u5230%u4E00%u6BB5%u4EE3%u7801%uFF1A%0A%60%60%60%0AArray.apply%28null%2C%20Array%2830%29%29.map%28%28%29%20%3D%3E%204%29%0A%60%60%60%0A%u8FD9%u4EE3%u7801%u7684%u5199%u6CD5%u65E0%u6CD5%u8BA9%u4EBA%u4E00%u4E0B%u7406%u89E3%u5B83%u7684%u610F%u56FE%u3002%0AGoogle%20%u4E4B%u540E%u77E5%u9053%u5B83%u7684%u4F5C%u7528%u662F%u6784%u9020%u4E00%u4E2A%u957F%u5EA6%u4E3A%2030%20%u7684%u6570%u7EC4%uFF0C%u9ED8%u8BA4%u503C%u662F%204%u3002%0A%0A%23%23%23%23%20%u89E3%u6790%0A%u4F46%u662F%u4E3A%u4EC0%u4E48%u8981%u5199%u5F97%u8FD9%u4E48%u522B%u626D%u5462%uFF1F%u6211%u4EEC%u6765%u5206%u89E3%u4E0B%u5B83%u6BCF%u4E00%u6B65%u5728%u505A%u4EC0%u4E48%uFF1A%0A%0A%60%60%60%0AArray.apply%28null%2C%20Array%2830%29%29%20%0A%60%60%60%0A%0A%u8FD9%u4E00%u6BB5%u4EE3%u7801%u751F%u6210%u4E00%u4E2A%u957F%u5EA6%u4E3A30%u7684%u6570%u7EC4%uFF0C%u91CC%u9762%u7684%u503C%u90FD%u662F%20**undefined**%u3002%0A%u4E4B%u540E%u7684%20%60.map%28%28%29%20%3D%3E%204%29%60%20%uFF1A%u8D1F%u8D23%u586B%u5145%u9ED8%u8BA4%u503C%0A%0A%u4F46%u662F%u4E3A%u4EC0%u4E48%u6784%u9020%u4E00%u4E2A%u7A7A%u503C%u6570%u7EC4%u9700%u8981%u8FD9%u4E48%u9EBB%u70E6%u5462%uFF1F%u8FD8%u8981%u7528%u4E0A%20apply%20%u65B9%u6CD5%uFF0C%u5C1D%u8BD5%u7528%20%60Array%2830%29.map%28%28%29%20%3D%3E%204%29%60%20%u6765%u751F%u6210%u6570%u7EC4%u7684%u8BDD%uFF0C%u4F60%u4F1A%u5F97%u5230%u8FD9%u6837%u7684%u4E00%u4E2A%u7ED3%u679C%uFF0C%u6839%u672C%u5C31%u6CA1%u6709%u503C%u3002%0A%0A%3E%20%5B%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%20%5D%0A%0A%u67E5%u770B%5B%u6587%u6863%5D%28https%3A//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array%29%20%u53EF%u4EE5%u770B%u5230%20Array%20%u7684%u6784%u9020%u51FD%u6570%u8BED%u6CD5%uFF0C%u53EF%u4EE5%u5F97%u77E5%20Array%20%u652F%u6301%u4E24%u79CD%u6784%u9020%u65B9%u5F0F%u3002%u4F7F%u7528%u53C2%u6570%u5F62%u5F0F%u7ED9%u5B9A%20N%20%u4E2A%u6570%u7EC4%u5143%u7D20%uFF0C%u6216%u8005%u7ED9%u5B9A%u4E00%u4E2A%u6570%u7EC4%u957F%u5EA6%u3002%0A%21%5BAlt%20text%5D%28./1477050257372.png%29%0A%u4E0D%u8FC7%u6BD4%u8F83%u91CD%u8981%u7684%u4E00%u70B9%u6587%u6863%u91CC%u6CA1%u63D0%u5230%uFF0C%u4F7F%u7528%20%60new%20Array%28arrayLength%29%60%20%u65B9%u5F0F%u6784%u9020%u7684%u6570%u7EC4%u662F%u4E00%u4E2A**%u7A00%u758F%u6570%u7EC4**%uFF0C%u91CC%u9762%u662F%u6CA1%u6709%u4EFB%u4F55%u503C%u7684%uFF0C%u53EA%u6709%u957F%u5EA6%u3002%u6240%u4EE5%u8FD9%u4E2A%u65B9%u5F0F%u6784%u9020%u51FA%u6765%u7684%u6570%u7EC4%u662F%u65E0%u6CD5%u904D%u5386%u7684%uFF0C%u4E5F%u5C31%u65E0%u6CD5%u7528%20map%20%u904D%u5386%u586B%u5145%u503C%u4E86%u3002%0A%0A%u77E5%u9053%u4E86%u4E0A%u8FF0%u7684%u539F%u56E0%uFF0C%u6211%u4EEC%u5C31%u80FD%u7406%u89E3%uFF1A%0A%0A%60Array.apply%28null%2C%20Array%2830%29%29%60%20%0A%u5176%u5B9E%u7B49%u4E8E%0A%20%60Array.apply%28null%2C%20%5B%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%20%2C%5D%29%29%60%0A%20%0A%u7136%u540E%u6211%u4EEC%u8981%u7EE7%u7EED%u4E86%u89E3%20apply%20%u65B9%u6CD5%uFF0C%u5728%u8FD9%u91CC%u53EF%u4EE5%u770B%20apply%20%u7684%u4F5C%u7528%20%5B%u6587%u6863%u89E3%u91CA%5D%28https%3A//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply%29%uFF0C%20%u8FD9%u91CC%u4E0D%u4F5C%u4ECB%u7ECD%u3002apply%20%u65B9%u6CD5%u4F1A%u628A%u751F%u6210%u7684%u7A00%u758F%u6570%u7EC4%u5C55%u5F00%u5E76%u5F53%u505A%u53C2%u6570%u518D%u6B21%u4F20%u7ED9%20Array%20%u7684%u6784%u9020%u51FD%u6570%uFF0C%u5C31%u662F%u8FD9%u6837%u5B50%uFF1A%0A%0A%60Array%28null%2Cnull%2Cnull......%29%29%60%20%0A%0A%u8FD9%u6837%u6700%u7EC8%u5C31%u4F1A%u5F97%u5230%u4E00%u4E2A%u6570%u7EC4%uFF0C%u8FD9%u6837%u5C31%u4E0D%u662F%u7A00%u758F%u6570%u7EC4%u4E86%uFF0C%u91CC%u9762%u662F%u6709%u503C%u7684%uFF0C%u867D%u7136%u662F%20undefined%u3002%0A%0A%3E%20%5B%20undefined%2C%20undefined%2C%20undefined%20......%5D%0A%0A%23%23%23%23%u7ED3%u8BED%0A%u603B%u7ED3%u4E0B%uFF0C%u5176%u5B9E%u5C31%u662F%20js%20%u7684%20Array%20%u7684%u9ED8%u8BA4%u6784%u9020%u51FD%u6570%u751F%u6210%u7684%u662F%u7A00%u758F%u6570%u7EC4%uFF0C%u662F%u65E0%u6CD5%u7528%20map%20%u904D%u5386%u586B%u5145%u7684%u3002%u6240%u4EE5%u624D%u5199%u5F97%u8FD9%u4E48%u7ED5%u3002%0A%0A%u4E0D%u8FC7%uFF0C%u8BF4%u4E86%u8FD9%u4E48%u591A%uFF0C%u8981%u5B9E%u73B0%u539F%u672C%u7684%u9700%u6C42%uFF0C%u5176%u5B9E%u6709%u66F4%u7B80%u5355%u7684%u65B9%u6CD5%u5566%uFF1A%0A%0A%60%60%60%0AArray%2830%29.fill%284%29%0A%60%60%60%0A%0Afill%20%u65B9%u6CD5%u7684%5B%u8BF4%u660E%5D%28https%3A//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Array/fill%29</center>"
  },
  {
    "title": "使用 Winston 处理 Node 应用 Log",
    "created": "2016-11-16T02:17:30.000Z",
    "updated": "2016-12-01T02:29:20.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=8cfc0d28-232e-400c-aa37-6131c45f1341&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# 使用 Winston 处理 Node 应用 Log\n\n## 问题\n\n随着 Node 应用节点增多，应用部署在多台机器上，查询 Node 的 log 变得非常麻烦。业内通常的解决方案是使用 ELK 套件来收集并处理 log，可以方便地查询。关于 ELK，可以看看这篇文章：[https://www.ibm.com/developerworks/cn/opensource/os-cn-elk/](https://www.ibm.com/developerworks/cn/opensource/os-cn-elk/)，本文不作介绍~。  \n在推动使用 ELK 的过程中碰到一些问题：\n\n1.  之前的代码中很多地方直接是使用 console.log 输出 log 的。这些 log 之前是依赖于 pm2 处理并写入到文件中。\n2.  如果 log 一个 object 对象的话，默认的输出效果是多行的，ELK 在收集会比较麻烦。\n\n> amount: 23, products: [ { product_id: ‘55c31e936f227ed922c508aa’,  \n> num: 23,  \n> rebuyType: 1,  \n> price: 1 } ],\n\n## 初步的解决方案\n\n问题1：全局搜索并替换 console.log 的内容，使用新的 log 工具是可以的。  \n问题2：ELK 中的 Logstash 提供了一个多行文件的过滤器，[https://www.elastic.co/guide/en/logstash/5.0/plugins-filters-multiline.html](https://www.elastic.co/guide/en/logstash/5.0/plugins-filters-multiline.html) ，这个过滤器可以把多行 log 合并为一条记录，但是它要求使用正则来判断哪些多行 log 是属于一行的内容，这是个难点。\n\n## 最终解决方案\n\n上述的方案实施起来都不怎么好看，可以考虑使用 [Winston](https://github.com/winstonjs/winston#using-the-default-logger) 这个Node 的 log 库。\n\n### 引入 Winston\n\nWinstonLog.js\n\n    var winston = require('winston');var customLogger = new winston.Logger();// A console transport logging debug and above.customLogger.add(winston.transports.Console, { timestamp: function() { return Date.now(); }, level: 'verbose', colorize: true});// A file based transport logging only errors formatted as json.customLogger.add(winston.transports.File, { level: 'verbose', filename: 'winston.log', json: true});module.exports = customLogger\n\n这是个 Winston 配置的 demo，要找到合适你项目的 Winston 的配置方式可以查看 Winston 文档。\n\n回到这个配置文件，重点在 winston.transports.File 的配置：  \n`json: true`  \n这样写入 log 文件里的内容都是 json 对象了，winston.log 的部分内容是这样的：\n\n> {“level”:”info”,”message”:”getRateMap”,”timestamp”:”2016-11-16T04:31:55.882Z”}  \n> {“level”:”info”,”message”:”defaultRateUp get  \n> map”,”timestamp”:”2016-11-16T04:31:55.883Z”}  \n> {“level”:”info”,”message”:”each products { quota: 20000,\\n name:  \n> ”,\\n term: 1,\\n type: 2,\\n description: ”,\\n id:  \n> ‘549922452238c54e98b750bc’,\\n rate_year: null,\\n product_id:  \n> ‘549922452238c54e98b750bc’,\\n _id: ‘549922452238c54e98b750bc’,\\n  \n> rate: null,\\n rate_up: 0 }”,”timestamp”:”2016-11-16T04:31:55.884Z”}\n\n可以看到，每一行都是一个 json，结构是：\n\n    {“level” : “”，“message” ： “****”}\n\n这样ELK 在收集 log 就会很方便了。\n\n而配置中 winston.transports.Console 里是没有 json: true 的配置项的，所以我们在命令行里看到的 log 还是换行的，比较适合阅读。\n\n### 替换项目中的 log\n\n#### console.log\n\n搞定了log 文件格式的问题，我们还需要把项目里的 console.log 替换为 Winston 的 log。\n\n可以在应用的启动位置 app.js 添加如下内容：\n\n    var winston = require('./api/lib/WinstonLog')console.log = winston.infoconsole.error = winston.error\n\n这样就把 console.log 的实现替换了。\n\n#### web 框架默认的 log\n\n因为这边使用的是 sails 这个 web 框架，所以这里讲一下 sails 里如何替换 log 的实现。  \nsails 默认集成的 log 库是 [captains-log](https://github.com/balderdashy/captains-log) ，那如何替换成 Winston 呢？sails 的官方文档其实已经给了方法了~~~， 见[http://sailsjs.org/documentation/reference/configuration/sails-config-log](http://sailsjs.org/documentation/reference/configuration/sails-config-log)\n\n修改 log 配置\n\n    // config/log.jsvar customLogger = require('../api/lib/WinstonLog')module.exports.log = { // Pass in our custom logger, and pass all log levels through. custom: customLogger, level: 'verbose', // Disable captain's log so it doesn't prefix or stringify our meta data. inspect: false};\n\n用刚刚引入的 Winston 对象注入到 sails 的 log 配置里就可以啦。\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%5D%0A%0A%23%u4F7F%u7528%20Winston%20%u5904%u7406%20Node%20%u5E94%u7528%20Log%0A%0A%23%23%20%u95EE%u9898%0A%u968F%u7740%20Node%20%u5E94%u7528%u8282%u70B9%u589E%u591A%uFF0C%u5E94%u7528%u90E8%u7F72%u5728%u591A%u53F0%u673A%u5668%u4E0A%uFF0C%u67E5%u8BE2%20Node%20%u7684%20log%20%u53D8%u5F97%u975E%u5E38%u9EBB%u70E6%u3002%u4E1A%u5185%u901A%u5E38%u7684%u89E3%u51B3%u65B9%u6848%u662F%u4F7F%u7528%20ELK%20%u5957%u4EF6%u6765%u6536%u96C6%u5E76%u5904%u7406%20log%uFF0C%u53EF%u4EE5%u65B9%u4FBF%u5730%u67E5%u8BE2%u3002%u5173%u4E8E%20ELK%uFF0C%u53EF%u4EE5%u770B%u770B%u8FD9%u7BC7%u6587%u7AE0%uFF1Ahttps%3A//www.ibm.com/developerworks/cn/opensource/os-cn-elk/%uFF0C%u672C%u6587%u4E0D%u4F5C%u4ECB%u7ECD%7E%u3002%0A%u5728%u63A8%u52A8%u4F7F%u7528%20ELK%20%u7684%u8FC7%u7A0B%u4E2D%u78B0%u5230%u4E00%u4E9B%u95EE%u9898%uFF1A%0A1.%20%u4E4B%u524D%u7684%u4EE3%u7801%u4E2D%u5F88%u591A%u5730%u65B9%u76F4%u63A5%u662F%u4F7F%u7528%20console.log%20%u8F93%u51FA%20log%20%u7684%u3002%u8FD9%u4E9B%20log%20%u4E4B%u524D%u662F%u4F9D%u8D56%u4E8E%20pm2%20%u5904%u7406%u5E76%u5199%u5165%u5230%u6587%u4EF6%u4E2D%u3002%0A2.%20%u5982%u679C%20log%20%u4E00%u4E2A%20object%20%u5BF9%u8C61%u7684%u8BDD%uFF0C%u9ED8%u8BA4%u7684%u8F93%u51FA%u6548%u679C%u662F%u591A%u884C%u7684%uFF0CELK%20%u5728%u6536%u96C6%u4F1A%u6BD4%u8F83%u9EBB%u70E6%u3002%0A%0A%3E%20amount%3A%2023%2C%20%20%20products%3A%20%20%20%20%20%5B%20%7B%20product_id%3A%20%2755c31e936f227ed922c508aa%27%2C%0A%3E%20%20%20%20%20%20%20%20num%3A%2023%2C%0A%3E%20%20%20%20%20%20%20%20rebuyType%3A%201%2C%0A%3E%20%20%20%20%20%20%20%20price%3A%201%20%7D%20%5D%2C%0A%0A%23%23%u521D%u6B65%u7684%u89E3%u51B3%u65B9%u6848%0A%u95EE%u98981%uFF1A%u5168%u5C40%u641C%u7D22%u5E76%u66FF%u6362%20console.log%20%u7684%u5185%u5BB9%uFF0C%u4F7F%u7528%u65B0%u7684%20log%20%u5DE5%u5177%u662F%u53EF%u4EE5%u7684%u3002%0A%u95EE%u98982%uFF1AELK%20%u4E2D%u7684%20Logstash%20%u63D0%u4F9B%u4E86%u4E00%u4E2A%u591A%u884C%u6587%u4EF6%u7684%u8FC7%u6EE4%u5668%uFF0Chttps%3A//www.elastic.co/guide/en/logstash/5.0/plugins-filters-multiline.html%20%uFF0C%u8FD9%u4E2A%u8FC7%u6EE4%u5668%u53EF%u4EE5%u628A%u591A%u884C%20log%20%u5408%u5E76%u4E3A%u4E00%u6761%u8BB0%u5F55%uFF0C%u4F46%u662F%u5B83%u8981%u6C42%u4F7F%u7528%u6B63%u5219%u6765%u5224%u65AD%u54EA%u4E9B%u591A%u884C%20log%20%u662F%u5C5E%u4E8E%u4E00%u884C%u7684%u5185%u5BB9%uFF0C%u8FD9%u662F%u4E2A%u96BE%u70B9%u3002%0A%0A%23%23%u6700%u7EC8%u89E3%u51B3%u65B9%u6848%0A%u4E0A%u8FF0%u7684%u65B9%u6848%u5B9E%u65BD%u8D77%u6765%u90FD%u4E0D%u600E%u4E48%u597D%u770B%uFF0C%u53EF%u4EE5%u8003%u8651%u4F7F%u7528%20%5BWinston%5D%28https%3A//github.com/winstonjs/winston%23using-the-default-logger%29%20%20%u8FD9%u4E2ANode%20%u7684%20log%20%u5E93%u3002%0A%0A%23%23%23%20%u5F15%u5165%20Winston%20%20%0AWinstonLog.js%0A%0A%60%60%60%0A%0Avar%20winston%20%3D%20require%28%27winston%27%29%3B%0Avar%20customLogger%20%3D%20new%20winston.Logger%28%29%3B%0A%0A//%20A%20console%20transport%20logging%20debug%20and%20above.%0AcustomLogger.add%28winston.transports.Console%2C%20%7B%0A%20%20timestamp%3A%20function%28%29%20%7B%0A%20%20%20%20return%20Date.now%28%29%3B%0A%20%20%7D%2C%0A%20%20level%3A%20%27verbose%27%2C%0A%20%20colorize%3A%20true%0A%7D%29%3B%0A%0A//%20A%20file%20based%20transport%20logging%20only%20errors%20formatted%20as%20json.%0AcustomLogger.add%28winston.transports.File%2C%20%7B%0A%20%20level%3A%20%27verbose%27%2C%0A%20%20filename%3A%20%27winston.log%27%2C%0A%20%20json%3A%20true%0A%7D%29%3B%0Amodule.exports%20%3D%20customLogger%0A%60%60%60%0A%u8FD9%u662F%u4E2A%20Winston%20%u914D%u7F6E%u7684%20demo%uFF0C%u8981%u627E%u5230%u5408%u9002%u4F60%u9879%u76EE%u7684%20Winston%20%u7684%u914D%u7F6E%u65B9%u5F0F%u53EF%u4EE5%u67E5%u770B%20Winston%20%u6587%u6863%u3002%0A%0A%u56DE%u5230%u8FD9%u4E2A%u914D%u7F6E%u6587%u4EF6%uFF0C%u91CD%u70B9%u5728%20winston.transports.File%20%u7684%u914D%u7F6E%uFF1A%0A%60json%3A%20true%60%0A%u8FD9%u6837%u5199%u5165%20log%20%u6587%u4EF6%u91CC%u7684%u5185%u5BB9%u90FD%u662F%20json%20%u5BF9%u8C61%u4E86%uFF0Cwinston.log%20%u7684%u90E8%u5206%u5185%u5BB9%u662F%u8FD9%u6837%u7684%uFF1A%0A%0A%3E%20%7B%22level%22%3A%22info%22%2C%22message%22%3A%22getRateMap%22%2C%22timestamp%22%3A%222016-11-16T04%3A31%3A55.882Z%22%7D%0A%3E%20%7B%22level%22%3A%22info%22%2C%22message%22%3A%22defaultRateUp%20get%0A%3E%20map%22%2C%22timestamp%22%3A%222016-11-16T04%3A31%3A55.883Z%22%7D%0A%3E%20%7B%22level%22%3A%22info%22%2C%22message%22%3A%22each%20products%20%7B%20quota%3A%2020000%2C%5Cn%20%20name%3A%0A%3E%20%27%27%2C%5Cn%20%20term%3A%201%2C%5Cn%20%20type%3A%202%2C%5Cn%20%20description%3A%20%27%27%2C%5Cn%20%20id%3A%0A%3E%20%27549922452238c54e98b750bc%27%2C%5Cn%20%20rate_year%3A%20null%2C%5Cn%20%20product_id%3A%0A%3E%20%27549922452238c54e98b750bc%27%2C%5Cn%20%20_id%3A%20%27549922452238c54e98b750bc%27%2C%5Cn%20%0A%3E%20rate%3A%20null%2C%5Cn%20%20rate_up%3A%200%20%7D%22%2C%22timestamp%22%3A%222016-11-16T04%3A31%3A55.884Z%22%7D%0A%0A%u53EF%u4EE5%u770B%u5230%uFF0C%u6BCF%u4E00%u884C%u90FD%u662F%u4E00%u4E2A%20json%uFF0C%u7ED3%u6784%u662F%uFF1A%0A%0A%60%60%60%0A%7B%0A%u201Clevel%u201D%20%3A%20%u201C%u201D%uFF0C%0A%u201Cmessage%u201D%20%uFF1A%20%u201C****%u201D%0A%7D%0A%60%60%60%0A%u8FD9%u6837ELK%20%u5728%u6536%u96C6%20log%20%u5C31%u4F1A%u5F88%u65B9%u4FBF%u4E86%u3002%0A%0A%u800C%u914D%u7F6E%u4E2D%20winston.transports.Console%20%u91CC%u662F%u6CA1%u6709%20json%3A%20true%20%u7684%u914D%u7F6E%u9879%u7684%uFF0C%u6240%u4EE5%u6211%u4EEC%u5728%u547D%u4EE4%u884C%u91CC%u770B%u5230%u7684%20log%20%u8FD8%u662F%u6362%u884C%u7684%uFF0C%u6BD4%u8F83%u9002%u5408%u9605%u8BFB%u3002%0A%0A%23%23%23%20%u66FF%u6362%u9879%u76EE%u4E2D%u7684%20log%0A%23%23%23%23%20console.log%0A%u641E%u5B9A%u4E86log%20%u6587%u4EF6%u683C%u5F0F%u7684%u95EE%u9898%uFF0C%u6211%u4EEC%u8FD8%u9700%u8981%u628A%u9879%u76EE%u91CC%u7684%20%20console.log%20%u66FF%u6362%u4E3A%20Winston%20%u7684%20log%u3002%0A%0A%u53EF%u4EE5%u5728%u5E94%u7528%u7684%u542F%u52A8%u4F4D%u7F6E%20app.js%20%u6DFB%u52A0%u5982%u4E0B%u5185%u5BB9%uFF1A%0A%0A%60%60%60%0Avar%20winston%20%3D%20require%28%27./api/lib/WinstonLog%27%29%0Aconsole.log%20%3D%20winston.info%0Aconsole.error%20%3D%20winston.error%0A%60%60%60%0A%0A%u8FD9%u6837%u5C31%u628A%20console.log%20%u7684%u5B9E%u73B0%u66FF%u6362%u4E86%u3002%0A%0A%23%23%23%23%20web%20%u6846%u67B6%u9ED8%u8BA4%u7684%20log%0A%u56E0%u4E3A%u8FD9%u8FB9%u4F7F%u7528%u7684%u662F%20sails%20%u8FD9%u4E2A%20web%20%u6846%u67B6%uFF0C%u6240%u4EE5%u8FD9%u91CC%u8BB2%u4E00%u4E0B%20sails%20%u91CC%u5982%u4F55%u66FF%u6362%20log%20%u7684%u5B9E%u73B0%u3002%0Asails%20%u9ED8%u8BA4%u96C6%u6210%u7684%20log%20%u5E93%u662F%20%5Bcaptains-log%5D%28https%3A//github.com/balderdashy/captains-log%29%20%uFF0C%u90A3%u5982%u4F55%u66FF%u6362%u6210%20Winston%20%u5462%uFF1Fsails%20%u7684%u5B98%u65B9%u6587%u6863%u5176%u5B9E%u5DF2%u7ECF%u7ED9%u4E86%u65B9%u6CD5%u4E86%7E%7E%7E%uFF0C%20%u89C1http%3A//sailsjs.org/documentation/reference/configuration/sails-config-log%0A%0A%u4FEE%u6539%20log%20%u914D%u7F6E%0A%60%60%60%0A//%20config/log.js%0Avar%20customLogger%20%3D%20require%28%27../api/lib/WinstonLog%27%29%0Amodule.exports.log%20%3D%20%7B%0A%20%20//%20Pass%20in%20our%20custom%20logger%2C%20and%20pass%20all%20log%20levels%20through.%0A%20%20custom%3A%20customLogger%2C%0A%20%20level%3A%20%27verbose%27%2C%0A%0A%20%20//%20Disable%20captain%27s%20log%20so%20it%20doesn%27t%20prefix%20or%20stringify%20our%20meta%20data.%0A%20%20inspect%3A%20false%0A%7D%3B%0A%60%60%60%0A%0A%u7528%u521A%u521A%u5F15%u5165%u7684%20Winston%20%u5BF9%u8C61%u6CE8%u5165%u5230%20sails%20%u7684%20log%20%u914D%u7F6E%u91CC%u5C31%u53EF%u4EE5%u5566%u3002%0A%0A%0A%20</center>"
  },
  {
    "title": "Node 性能优化",
    "created": "2016-03-22T02:27:21.000Z",
    "updated": "2016-11-27T19:54:40.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=9df123eb-8df7-44f4-9041-b97d973310ef&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n## Node 性能优化\n\n### 前言\n\n没有 profile 谈优化都是耍流氓，性能优化的大前提是 profile ，有数据才能找出程序慢在哪里了。  \n本篇文章主要介绍 Node 后端的性能优化，前端的同学可以看看 Chrome 的 devtools [https://github.com/CN-Chrome-DevTools/CN-Chrome-DevTools](https://github.com/CN-Chrome-DevTools/CN-Chrome-DevTools)\n\n### 一、Web 应用优化\n\n性能的瓶颈往往在 IO\n\n#### IO 层优化\n\n##### 磁盘 IO 为什么慢\n\n计算机里的常见 IO 有 ：\n\n*   CPU 一二级缓存\n*   内存\n*   硬盘\n*   网络\n\n硬盘的 IO 开销是非常昂贵的，硬盘 IO 花费的 CPU 时钟周期是内存的 41000000/250 = 164000 倍。\n\n所有在一般应用中，优化要首先考虑数磁盘 IO , 通常也就是数据层的优化，说到数据库优化，很多人第一时间会想到加索引，但是什么加了索引查询会变快呢？索引要怎么加才合适呢？\n\n##### 为什么索引快\n\n关于索引的原理可以看看这篇文章，[索引原理](http://tech.meituan.com/mysql-index.html)。索引快主要的原因是：\n\n*   索引占用空间更小，可以有效减少磁盘 IO 次数。\n*   索引可以使用方便快速查询的数据结构，如**b+树**。\n\n##### 索引怎么加\n\n回到我们的主题，**没有 profile 谈优化都是耍流氓**  \n以 mongo 为例，mongo 是带有慢查询功能的。  \n[MongoDB 查询优化分析](http://www.cnblogs.com/zhoujinyi/p/3566773.html) 这篇文章介绍了如何开启和使用 mongo 的慢查询功能。  \n开启慢查询收集功能后，使用 db.system.profile.find().pretty() 语句可以查询到哪些语句的查询比较慢。以下面这个查询语句为例：\n\n    query new_koala.llbrandomredpackage query: { user_id: \"56ddb33e23db696f89fdae2a\", status: { $ne: 1 } }\n\n查询条件是 user_id、status 两个，所以给这两个字段加上索引可以提高查询速度。  \n当然，如果 mongo 没有是先开启慢查询，扫描一下 mongo.log 也是个办法。\n\n    grep '[0-9][0-9][0-9]ms' /var/log/mongodb/mongodb.log\n\n这样就可以找出所有查询耗时大于100 ms 的记录。然后再对症下药即可。\n\n##### 缓存大法好，有选择地用。\n\n上文有说到，内存 IO 比磁盘 IO 快非常多，所以使用内存缓存数据是有效的优化方法。常用的工具如 redis、memcached 等。  \n缓存效果显著，所以很多时候一谈到优化，很多人就会想到加缓存，但是使用缓存是有代价的，你需要维护缓存的更新和失效，这是个**繁琐**的事情，用上了缓存后你会经常碰到缓存没有及时更新带来的问题。  \n重要的事情说多几遍：  \n**缓存有副作用**  \n**缓存有副作用**  \n**缓存有副作用**\n\n并不是所有数据都需要缓存，**访问频率高，生成代价比较高**的才考虑是否缓存，也就是说影响你性能瓶颈的考虑去缓存。\n\n而且缓存还有 **缓存雪崩**、**缓存穿透** 等问题要解决。见 [缓存穿透与缓存雪崩](http://www.cnblogs.com/fidelQuan/p/4543387.html)\n\n##### 静态文件缓存\n\n静态文件如图片、js 文件等具有不变性，是非常适合做缓存的。  \n常见的静态文件缓存服务有 nginx、vanish 等。\n\n#### 代码层面优化。\n\n##### 合并查询\n\n在代码这一块，常做的事情是将多次的查询合并为一次，消灭 for 循环，实际上还是减少数据库查询。例如\n\n    for user_id in userIds  var account = user_account.findOne(user_id)\n\n这类代码实际上可以改写成：\n\n    var user_account_map = {} // 注意这个对象将会消耗大量内存。user_account.find(user_id in user_ids).forEach(account){ user_account_map[account.user_id] = account}for user_id in userIds  var account = user_account_map[user_id]\n\n这样就把 N 次的查询合并为一次。  \n实际上还是为了减少 IO。\n\n#### 关于过早优化\n\n性能优化的工作做多了以后，往往会陷入一个什么都想着去优化的状态，这样就可能陷入过早优化的深坑中。  \n这里引用一下其他人的观点  \n[https://www.zhihu.com/question/24282796](https://www.zhihu.com/question/24282796)\n\n<en-media longdesc=\"./1460603225863.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"e603afaf28c751376c79b3c11e8950c0\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### 二、内存泄露排查\n\nNode 是基于 V8 这个 js 引擎的，这里我们了解下 V8 里的内存相关的知识。\n\n#### V8 的 GC 垃圾回收机制\n\n##### V8 的内存分代\n\n在 V8 中，主要将内存分为新生代和老生代两代。新生代的对象为存活时间比较短的对象，老生代中的对象为存活时间较长的或常驻内存的对象。\n\n+—+—+—+—————————-+  \n| 新生代 | 。。。。。。老生代 |  \n+—+—+—+—————————-+\n\n默认情况下，新生代的内存最大值在 64 位系统和 32 位系统上分别为 32 MB 和 16 MB。V8 对内存的最大值在 64 位系统和 32 位系统上分别为 1464 MB 和 732 MB。\n\n为什么这样分两代呢？是为了最优的 GC 算法。新生代的 GC 算法 Scavenge 速度快，但是不合适大数据量；老生代针使用 Mark-Sweep（标记清除） & Mark-Compact（标记整理） 算法，合适大数据量，但是速度较慢。分别对新旧两代使用更适合他们的算法来优化 GC 速度。\n\n详情参见《深入浅出 nodejs》5.1 V8 的垃圾回收机制与内存限制\n\n#### V8 的 GC log\n\n在启动程序的时候添加 –trace_gc 参数，V8 在进行垃圾回收的时候，会将垃圾回收的信息打印出来：\n\n    ➜ $ node --trace_gc aa.js...[94036] 68 ms: Scavenge 8.4 (42.5) -> 8.2 (43.5) MB, 2.4 ms [allocation failure].[94036] 74 ms: Scavenge 8.9 (43.5) -> 8.9 (46.5) MB, 5.1 ms [allocation failure].[94036] Increasing marking speed to 3 due to high promotion rate[94036] 85 ms: Scavenge 16.1 (46.5) -> 15.7 (47.5) MB, 3.8 ms (+ 5.0 ms in 106 steps since last GC) [allocation failure].[94036] 95 ms: Scavenge 16.7 (47.5) -> 16.6 (54.5) MB, 7.2 ms (+ 1.3 ms in 14 steps since last GC) [allocation failure].[94036] 111 ms: Mark-sweep 23.6 (54.5) -> 23.2 (54.5) MB, 6.2 ms (+ 15.3 ms in 222 steps since start of marking, biggest step 0.3 ms) [GC interrupt] [GC in old space requested]....\n\nV8 提供了很多程序启动选项：\n\n<table style=\"border-collapse: collapse; border-spacing: 0; margin-bottom: 20px; line-height: 1.6;\">\n\n<thead style=\"line-height: 1.6;\">\n\n<tr style=\"line-height: 1.6;\">\n\n<th align=\"left\" style=\"font-weight: bold; vertical-align: bottom; padding: .5em; border-top: 0; border: 1px solid #ddd; line-height: 1.6;\">启动项</th>\n\n<th align=\"right\" style=\"font-weight: bold; vertical-align: bottom; padding: .5em; border-top: 0; border: 1px solid #ddd; line-height: 1.6; text-align: right;\">含义</th>\n\n</tr>\n\n</thead>\n\n<tbody style=\"line-height: 1.6;\">\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">–max-stack-size</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">设置栈大小</td>\n\n</tr>\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">–v8-options</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">打印 V8 相关命令</td>\n\n</tr>\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">–trace-bailout</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">查找不能被优化的函数，重写</td>\n\n</tr>\n\n<tr style=\"line-height: 1.6;\">\n\n<td align=\"left\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">–trace-deopt</td>\n\n<td align=\"right\" style=\"padding: .5em; vertical-align: top; border-top: 1px solid #ddd; border: 1px solid #ddd; line-height: 1.6;\">查找不能优化的函数</td>\n\n</tr>\n\n</tbody>\n\n</table>\n\n#### 使用 memwatch 模块来检测内存泄露\n\nnpm模块 memwatch 是一个非常好的内存泄漏检查工具，让我们先将这个模块安装到我们的app中去，执行以下命令：\n\n    npm install --save memwatch\n\n然后，在我们的代码中，添加：\n\n    var memwatch = require('memwatch');\n\n然后监听 leak 事件\n\n    memwatch.on('leak', function(info) { console.error('Memory leak detected: ', info);});\n\n这样当我们执行我们的测试代码，我们会看到下面的信息：\n\n    { start: Fri Jan 02 2015 10:38:49 GMT+0000 (GMT), end: Fri Jan 02 2015 10:38:50 GMT+0000 (GMT), growth: 7620560, reason: 'heap growth over 5 consecutive GCs (1s) - -2147483648 bytes/hr'}mem\n\nmemwatch 发现了内存泄漏！memwatch 判定内存泄漏事件发生的规则如下：\n\n**当你的堆内存在5个连续的垃圾回收周期内保持持续增长，那么一个内存泄漏事件被派发**\n\n了解更加详细的内容，查看 [memwatch](https://www.npmjs.com/package/memwatch)\n\n#### 使用 heapdump dump 出 Node 应用内存快照\n\n检测到了内存泄露的时候，我们需要查看当时内存的状态，heapdump 可以抓下当时内存的快照。\n\n    memwatch.on('leak', function(info) { console.error(info); var file = '/tmp/myapp-' + process.pid + '-' + Date.now() + '.heapsnapshot'; heapdump.writeSnapshot(file, function(err){ if (err) console.error(err); else console.error('Wrote snapshot: ' + file); });});\n\n运行我们的代码，磁盘上会产生一些 .heapsnapshot 的文件到/tmp目录下。\n\n#### 使用 Chrome 的开发者工具分析内存消耗\n\nheapdump 提供的内存快照是可以用 Chrome 的开发者工具来查看的。把 .heapsnapshot 文件导入到 Chrome Developer Tools\n\n<en-media longdesc=\"./1461553851743.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"576c50513fa2ffff1268ac6e5cb17478\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n<en-media longdesc=\"./1461553811915.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"0f6a3bbdbc7e9be80de0514f91d40f19\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n怎么使用内存分析工具呢？  \n[Chrome开发者工具之JavaScript内存分析](http://www.open-open.com/lib/view/open1421734578984.html#_label13)  \n这篇文件详细介绍了如何使用开发者工具来分析内存的使用情况。可以参考，这里就不细说了。\n\n摘取个例子，使用对比视图。  \n[对比视图 demo](https://developer.chrome.com/devtools/docs/heap-profiling-comparison)  \n这个例子展示了通过对比前后的内存变化来找出内存泄露的原因，看起来还是很简单方便的。\n\n但是，理想很美好，现实很残酷。下面展示下日常开发中 dump 下的数据。  \n使用对比视图：\n\n <en-media longdesc=\"./1461553765122.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"09befe50b36e6f61279a081e5599ed46\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">可以看出 array 是内存增长的主要元凶，但也只能得到这个线索，那具体是那些 array 消耗了内存呢？  \n点开 array 查看详细信息：</en-media>\n\n <en-media longdesc=\"./1461554196807.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"081c75666cbe8c61a9d89a9e52dc47bf\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">一大堆的匿名数组，无法准确查到具体那些 array 消耗了内存。  \n主要原因是后端使用了 sails 这个 web 框架，框架里的代码量比较多，干扰项太多，无法准确地判断是哪些 function 出现了问题。</en-media>\n\n#### 内存泄露原因\n\n通常，造成内存泄露的原因有如下几个。\n\n*   慎用内存当缓存，非用的话控制好缓存的大小和过期时间，防止出现永远无法释放的问题\n*   队列消费不及时，数组、回调，生产者的速度比消费者速度快，堆积了大量生产者导致无法释放作用域或变量\n*   作用域未释放，无法立即回收的内存有全局变量和闭包，尽量使用变量赋值为 null|undefined 来触发回收\n\n这部分的详细解释请参考《深入浅出 nodejs》5.4 内存泄露。\n\n### 三、优化应用 CPU 瓶颈\n\n上面介绍了 IO 优化，内存优化，使用 Node 做后端的话还会经常碰到 CPU 瓶颈。总所周知，Node 是单线程的，所以对 CPU 密集的运算不是太胜任，所以应该避免使用 Node 来进行 CPU 密集的运算。  \n那么如果出现了 CPU 类的问题要怎么处理呢？\n\n#### V8log:\n\n加入 –prof 参数可以在应用结束是收集 log，执行命令之后，会在该目录下产生一个 *-v8.log 的日志文件，我们可以安装一个日志分析工具 tick\n\n#### tick 工具分析 log\n\n可以分析每个 function 的处理时间。\n\n    ➜ $ sudo npm install tick -g➜ $ node-tick-processor *-v8.log[Top down (heavy) profile]: Note: callees occupying less than 0.1% are not shown. inclusive self name ticks total ticks total 426 36.7% 0 0.0% Function: ~<anonymous> node.js:27:10 426 36.7% 0 0.0% LazyCompile: ~startup node.js:30:19 410 35.3% 0 0.0% LazyCompile: ~Module.runMain module.js:499:26 409 35.2% 0 0.0% LazyCompile: Module._load module.js:273:24 407 35.1% 0 0.0% LazyCompile: ~Module.load module.js:345:33 406 35.0% 0 0.0% LazyCompile: ~Module._extensions..js module.js:476:37 405 34.9% 0 0.0% LazyCompile: ~Module._compile module.js:378:37...\n\n前端的同学可以直接在 chrome 里收集 cpu profile 用于分析。\n\n### 使用第三方平台\n\n[alinode](https://alinode.aliyun.com/)，基于 Node 运行时的应用性能管理解决方案，笔者没有体验过，不预评价。\n\n### 总结\n\n文章主要介绍的还是后端开发中如何做性能优化的几种方式：\n\n*   添加索引\n*   接口缓存\n*   静态文件缓存\n*   合并查询  \n    这几种方法的目的其实都是为了减少 IO。看来 IO 过高是 Node 应用反应慢的主要原因。\n\n此外，文章也介绍了如何排查处理内存泄露和 CPU 过高的问题。这两类问题是也是影响 Node 性能的一大原因。\n\n### 参考：\n\n《深入浅出 nodejs》朴灵著  \n[MySQL索引原理及慢查询优化](http://tech.meituan.com/mysql-index.html)  \n[MongoDB 查询优化分析](http://www.cnblogs.com/zhoujinyi/p/3566773.html)  \n[如何用redis/memcache做Mysql缓存层?](https://www.zhihu.com/question/27738066)  \n[缓存穿透与缓存雪崩](http://www.cnblogs.com/fidelQuan/p/4543387.html)  \n[http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line/](http://www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line/)  \n[http://www.w3ctech.com/topic/842](http://www.w3ctech.com/topic/842)  \n[https://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/](https://addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/)  \n[http://m.oschina.net/blog/270248](http://m.oschina.net/blog/270248)  \n[http://www.cnblogs.com/constantince/p/4607497.html](http://www.cnblogs.com/constantince/p/4607497.html)  \n[http://www.open-open.com/lib/view/open1421734578984.html#_label13](http://www.open-open.com/lib/view/open1421734578984.html#_label13)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%0A%23%23Node%20%u6027%u80FD%u4F18%u5316%0A%0A%23%23%23%20%u524D%u8A00%20%0A%u6CA1%u6709%20profile%20%u8C08%u4F18%u5316%u90FD%u662F%u800D%u6D41%u6C13%uFF0C%u6027%u80FD%u4F18%u5316%u7684%u5927%u524D%u63D0%u662F%20profile%20%uFF0C%u6709%u6570%u636E%u624D%u80FD%u627E%u51FA%u7A0B%u5E8F%u6162%u5728%u54EA%u91CC%u4E86%u3002%0A%u672C%u7BC7%u6587%u7AE0%u4E3B%u8981%u4ECB%u7ECD%20Node%20%u540E%u7AEF%u7684%u6027%u80FD%u4F18%u5316%uFF0C%u524D%u7AEF%u7684%u540C%u5B66%u53EF%u4EE5%u770B%u770B%20Chrome%20%u7684%20devtools%20%20https%3A//github.com/CN-Chrome-DevTools/CN-Chrome-DevTools%0A%0A%23%23%23%u4E00%u3001Web%20%u5E94%u7528%u4F18%u5316%20%20%20%20%0A%u6027%u80FD%u7684%u74F6%u9888%u5F80%u5F80%u5728%20IO%0A%23%23%23%23IO%20%u5C42%u4F18%u5316%0A%23%23%23%23%23%u78C1%u76D8%20IO%20%u4E3A%u4EC0%u4E48%u6162%0A%u8BA1%u7B97%u673A%u91CC%u7684%u5E38%u89C1%20IO%20%u6709%20%uFF1A%0A-%20CPU%20%u4E00%u4E8C%u7EA7%u7F13%u5B58%0A-%20%u5185%u5B58%0A-%20%u786C%u76D8%0A-%20%u7F51%u7EDC%0A%0A%u786C%u76D8%u7684%20IO%20%u5F00%u9500%u662F%u975E%u5E38%u6602%u8D35%u7684%uFF0C%u786C%u76D8%20IO%20%u82B1%u8D39%u7684%20CPU%20%u65F6%u949F%u5468%u671F%u662F%u5185%u5B58%u7684%2041000000/250%20%3D%20164000%20%u500D%u3002%0A%0A%u6240%u6709%u5728%u4E00%u822C%u5E94%u7528%u4E2D%uFF0C%u4F18%u5316%u8981%u9996%u5148%u8003%u8651%u6570%u78C1%u76D8%20IO%20%2C%20%20%u901A%u5E38%u4E5F%u5C31%u662F%u6570%u636E%u5C42%u7684%u4F18%u5316%uFF0C%u8BF4%u5230%u6570%u636E%u5E93%u4F18%u5316%uFF0C%u5F88%u591A%u4EBA%u7B2C%u4E00%u65F6%u95F4%u4F1A%u60F3%u5230%u52A0%u7D22%u5F15%uFF0C%u4F46%u662F%u4EC0%u4E48%u52A0%u4E86%u7D22%u5F15%u67E5%u8BE2%u4F1A%u53D8%u5FEB%u5462%uFF1F%u7D22%u5F15%u8981%u600E%u4E48%u52A0%u624D%u5408%u9002%u5462%uFF1F%0A%23%23%23%23%23%u4E3A%u4EC0%u4E48%u7D22%u5F15%u5FEB%0A%u5173%u4E8E%u7D22%u5F15%u7684%u539F%u7406%u53EF%u4EE5%u770B%u770B%u8FD9%u7BC7%u6587%u7AE0%uFF0C%5B%u7D22%u5F15%u539F%u7406%5D%28http%3A//tech.meituan.com/mysql-index.html%29%u3002%u7D22%u5F15%u5FEB%u4E3B%u8981%u7684%u539F%u56E0%u662F%uFF1A%0A-%20%u7D22%u5F15%u5360%u7528%u7A7A%u95F4%u66F4%u5C0F%uFF0C%u53EF%u4EE5%u6709%u6548%u51CF%u5C11%u78C1%u76D8%20IO%20%u6B21%u6570%u3002%0A-%20%u7D22%u5F15%u53EF%u4EE5%u4F7F%u7528%u65B9%u4FBF%u5FEB%u901F%u67E5%u8BE2%u7684%u6570%u636E%u7ED3%u6784%uFF0C%u5982**b+%u6811**%u3002%0A%0A%23%23%23%23%23%u7D22%u5F15%u600E%u4E48%u52A0%0A%u56DE%u5230%u6211%u4EEC%u7684%u4E3B%u9898%uFF0C**%u6CA1%u6709%20profile%20%u8C08%u4F18%u5316%u90FD%u662F%u800D%u6D41%u6C13**%0A%u4EE5%20mongo%20%u4E3A%u4F8B%uFF0Cmongo%20%u662F%u5E26%u6709%u6162%u67E5%u8BE2%u529F%u80FD%u7684%u3002%0A%20%5BMongoDB%20%u67E5%u8BE2%u4F18%u5316%u5206%u6790%5D%28http%3A//www.cnblogs.com/zhoujinyi/p/3566773.html%29%20%u8FD9%u7BC7%u6587%u7AE0%u4ECB%u7ECD%u4E86%u5982%u4F55%u5F00%u542F%u548C%u4F7F%u7528%20mongo%20%u7684%u6162%u67E5%u8BE2%u529F%u80FD%u3002%0A%u5F00%u542F%u6162%u67E5%u8BE2%u6536%u96C6%u529F%u80FD%u540E%uFF0C%u4F7F%u7528%20db.system.profile.find%28%29.pretty%28%29%20%u8BED%u53E5%u53EF%u4EE5%u67E5%u8BE2%u5230%u54EA%u4E9B%u8BED%u53E5%u7684%u67E5%u8BE2%u6BD4%u8F83%u6162%u3002%u4EE5%u4E0B%u9762%u8FD9%u4E2A%u67E5%u8BE2%u8BED%u53E5%u4E3A%u4F8B%uFF1A%0A%0A%60%60%60%0Aquery%20new_koala.llbrandomredpackage%20query%3A%20%7B%20user_id%3A%20%2256ddb33e23db696f89fdae2a%22%2C%20status%3A%20%7B%20%24ne%3A%201%20%7D%20%7D%0A%60%60%60%0A%u67E5%u8BE2%u6761%u4EF6%u662F%20user_id%u3001status%20%u4E24%u4E2A%uFF0C%u6240%u4EE5%u7ED9%u8FD9%u4E24%u4E2A%u5B57%u6BB5%u52A0%u4E0A%u7D22%u5F15%u53EF%u4EE5%u63D0%u9AD8%u67E5%u8BE2%u901F%u5EA6%u3002%0A%u5F53%u7136%uFF0C%u5982%u679C%20mongo%20%u6CA1%u6709%u662F%u5148%u5F00%u542F%u6162%u67E5%u8BE2%uFF0C%u626B%u63CF%u4E00%u4E0B%20mongo.log%20%u4E5F%u662F%u4E2A%u529E%u6CD5%u3002%0A%0A%60%60%60%0Agrep%20%27%5B0-9%5D%5B0-9%5D%5B0-9%5Dms%27%20/var/log/mongodb/mongodb.log%0A%60%60%60%0A%u8FD9%u6837%u5C31%u53EF%u4EE5%u627E%u51FA%u6240%u6709%u67E5%u8BE2%u8017%u65F6%u5927%u4E8E100%20ms%20%u7684%u8BB0%u5F55%u3002%u7136%u540E%u518D%u5BF9%u75C7%u4E0B%u836F%u5373%u53EF%u3002%0A%0A%23%23%23%23%23%u7F13%u5B58%u5927%u6CD5%u597D%uFF0C%u6709%u9009%u62E9%u5730%u7528%u3002%0A%u4E0A%u6587%u6709%u8BF4%u5230%uFF0C%u5185%u5B58%20IO%20%u6BD4%u78C1%u76D8%20IO%20%u5FEB%u975E%u5E38%u591A%uFF0C%u6240%u4EE5%u4F7F%u7528%u5185%u5B58%u7F13%u5B58%u6570%u636E%u662F%u6709%u6548%u7684%u4F18%u5316%u65B9%u6CD5%u3002%u5E38%u7528%u7684%u5DE5%u5177%u5982%20redis%u3001memcached%20%u7B49%u3002%0A%u7F13%u5B58%u6548%u679C%u663E%u8457%uFF0C%u6240%u4EE5%u5F88%u591A%u65F6%u5019%u4E00%u8C08%u5230%u4F18%u5316%uFF0C%u5F88%u591A%u4EBA%u5C31%u4F1A%u60F3%u5230%u52A0%u7F13%u5B58%uFF0C%u4F46%u662F%u4F7F%u7528%u7F13%u5B58%u662F%u6709%u4EE3%u4EF7%u7684%uFF0C%u4F60%u9700%u8981%u7EF4%u62A4%u7F13%u5B58%u7684%u66F4%u65B0%u548C%u5931%u6548%uFF0C%u8FD9%u662F%u4E2A**%u7E41%u7410**%u7684%u4E8B%u60C5%uFF0C%u7528%u4E0A%u4E86%u7F13%u5B58%u540E%u4F60%u4F1A%u7ECF%u5E38%u78B0%u5230%u7F13%u5B58%u6CA1%u6709%u53CA%u65F6%u66F4%u65B0%u5E26%u6765%u7684%u95EE%u9898%u3002%0A%u91CD%u8981%u7684%u4E8B%u60C5%u8BF4%u591A%u51E0%u904D%uFF1A%0A**%u7F13%u5B58%u6709%u526F%u4F5C%u7528**%0A**%u7F13%u5B58%u6709%u526F%u4F5C%u7528**%0A**%u7F13%u5B58%u6709%u526F%u4F5C%u7528**%0A%0A%0A%u5E76%u4E0D%u662F%u6240%u6709%u6570%u636E%u90FD%u9700%u8981%u7F13%u5B58%uFF0C**%u8BBF%u95EE%u9891%u7387%u9AD8%uFF0C%u751F%u6210%u4EE3%u4EF7%u6BD4%u8F83%u9AD8**%u7684%u624D%u8003%u8651%u662F%u5426%u7F13%u5B58%uFF0C%u4E5F%u5C31%u662F%u8BF4%u5F71%u54CD%u4F60%u6027%u80FD%u74F6%u9888%u7684%u8003%u8651%u53BB%u7F13%u5B58%u3002%0A%0A%u800C%u4E14%u7F13%u5B58%u8FD8%u6709%20**%u7F13%u5B58%u96EA%u5D29**%u3001**%u7F13%u5B58%u7A7F%u900F**%20%u7B49%u95EE%u9898%u8981%u89E3%u51B3%u3002%u89C1%20%20%5B%u7F13%u5B58%u7A7F%u900F%u4E0E%u7F13%u5B58%u96EA%u5D29%5D%28http%3A//www.cnblogs.com/fidelQuan/p/4543387.html%29%0A%0A%23%23%23%23%23%u9759%u6001%u6587%u4EF6%u7F13%u5B58%0A%u9759%u6001%u6587%u4EF6%u5982%u56FE%u7247%u3001js%20%u6587%u4EF6%u7B49%u5177%u6709%u4E0D%u53D8%u6027%uFF0C%u662F%u975E%u5E38%u9002%u5408%u505A%u7F13%u5B58%u7684%u3002%0A%u5E38%u89C1%u7684%u9759%u6001%u6587%u4EF6%u7F13%u5B58%u670D%u52A1%u6709%20nginx%u3001vanish%20%u7B49%u3002%0A%0A%23%23%23%23%u4EE3%u7801%u5C42%u9762%u4F18%u5316%u3002%0A%23%23%23%23%23%u5408%u5E76%u67E5%u8BE2%0A%u5728%u4EE3%u7801%u8FD9%u4E00%u5757%uFF0C%u5E38%u505A%u7684%u4E8B%u60C5%u662F%u5C06%u591A%u6B21%u7684%u67E5%u8BE2%u5408%u5E76%u4E3A%u4E00%u6B21%uFF0C%u6D88%u706D%20for%20%u5FAA%u73AF%uFF0C%u5B9E%u9645%u4E0A%u8FD8%u662F%u51CF%u5C11%u6570%u636E%u5E93%u67E5%u8BE2%u3002%u4F8B%u5982%0A%0A%60%60%60%0Afor%20user_id%20in%20userIds%20%0A%09%20var%20account%20%3D%20user_account.findOne%28user_id%29%0A%09%20%0A%60%60%60%0A%u8FD9%u7C7B%u4EE3%u7801%u5B9E%u9645%u4E0A%u53EF%u4EE5%u6539%u5199%u6210%uFF1A%0A%0A%60%60%60%0Avar%20user_account_map%20%3D%20%7B%7D%20%20%20//%20%u6CE8%u610F%u8FD9%u4E2A%u5BF9%u8C61%u5C06%u4F1A%u6D88%u8017%u5927%u91CF%u5185%u5B58%u3002%0Auser_account.find%28user_id%20in%20user_ids%29.forEach%28account%29%7B%0A%09user_account_map%5Baccount.user_id%5D%20%3D%20%20account%0A%7D%0Afor%20user_id%20in%20userIds%20%0A%09var%20account%20%3D%20user_account_map%5Buser_id%5D%0A%60%60%60%0A%0A%u8FD9%u6837%u5C31%u628A%20N%20%u6B21%u7684%u67E5%u8BE2%u5408%u5E76%u4E3A%u4E00%u6B21%u3002%0A%u5B9E%u9645%u4E0A%u8FD8%u662F%u4E3A%u4E86%u51CF%u5C11%20IO%u3002%0A%0A%23%23%23%23%u5173%u4E8E%u8FC7%u65E9%u4F18%u5316%0A%u6027%u80FD%u4F18%u5316%u7684%u5DE5%u4F5C%u505A%u591A%u4E86%u4EE5%u540E%uFF0C%u5F80%u5F80%u4F1A%u9677%u5165%u4E00%u4E2A%u4EC0%u4E48%u90FD%u60F3%u7740%u53BB%u4F18%u5316%u7684%u72B6%u6001%uFF0C%u8FD9%u6837%u5C31%u53EF%u80FD%u9677%u5165%u8FC7%u65E9%u4F18%u5316%u7684%u6DF1%u5751%u4E2D%u3002%0A%u8FD9%u91CC%u5F15%u7528%u4E00%u4E0B%u5176%u4ED6%u4EBA%u7684%u89C2%u70B9%0Ahttps%3A//www.zhihu.com/question/24282796%0A%21%5BAlt%20text%5D%28./1460603225863.png%29%0A%0A%0A%0A%23%23%23%u4E8C%u3001%u5185%u5B58%u6CC4%u9732%u6392%u67E5%0ANode%20%u662F%u57FA%u4E8E%20V8%20%u8FD9%u4E2A%20js%20%u5F15%u64CE%u7684%uFF0C%u8FD9%u91CC%u6211%u4EEC%u4E86%u89E3%u4E0B%20V8%20%u91CC%u7684%u5185%u5B58%u76F8%u5173%u7684%u77E5%u8BC6%u3002%0A%23%23%23%23V8%20%u7684%20GC%20%u5783%u573E%u56DE%u6536%u673A%u5236%0A%23%23%23%23%23V8%20%u7684%u5185%u5B58%u5206%u4EE3%0A%u5728%20V8%20%u4E2D%uFF0C%u4E3B%u8981%u5C06%u5185%u5B58%u5206%u4E3A%u65B0%u751F%u4EE3%u548C%u8001%u751F%u4EE3%u4E24%u4EE3%u3002%u65B0%u751F%u4EE3%u7684%u5BF9%u8C61%u4E3A%u5B58%u6D3B%u65F6%u95F4%u6BD4%u8F83%u77ED%u7684%u5BF9%u8C61%uFF0C%u8001%u751F%u4EE3%u4E2D%u7684%u5BF9%u8C61%u4E3A%u5B58%u6D3B%u65F6%u95F4%u8F83%u957F%u7684%u6216%u5E38%u9A7B%u5185%u5B58%u7684%u5BF9%u8C61%u3002%0A%0A+---+---+---+----------------------------+%0A%7C%20%u65B0%u751F%u4EE3%20%7C%20%u3002%u3002%u3002%u3002%u3002%u3002%u8001%u751F%u4EE3%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%7C%0A+---+---+---+----------------------------+%0A%0A%0A%u9ED8%u8BA4%u60C5%u51B5%u4E0B%uFF0C%u65B0%u751F%u4EE3%u7684%u5185%u5B58%u6700%u5927%u503C%u5728%2064%20%u4F4D%u7CFB%u7EDF%u548C%2032%20%u4F4D%u7CFB%u7EDF%u4E0A%u5206%u522B%u4E3A%2032%20MB%20%u548C%2016%20MB%u3002V8%20%u5BF9%u5185%u5B58%u7684%u6700%u5927%u503C%u5728%2064%20%u4F4D%u7CFB%u7EDF%u548C%2032%20%u4F4D%u7CFB%u7EDF%u4E0A%u5206%u522B%u4E3A%201464%20MB%20%u548C%20732%20MB%u3002%0A%0A%u4E3A%u4EC0%u4E48%u8FD9%u6837%u5206%u4E24%u4EE3%u5462%uFF1F%u662F%u4E3A%u4E86%u6700%u4F18%u7684%20GC%20%u7B97%u6CD5%u3002%u65B0%u751F%u4EE3%u7684%20GC%20%u7B97%u6CD5%20Scavenge%20%u901F%u5EA6%u5FEB%uFF0C%u4F46%u662F%u4E0D%u5408%u9002%u5927%u6570%u636E%u91CF%uFF1B%u8001%u751F%u4EE3%u9488%u4F7F%u7528%20Mark-Sweep%uFF08%u6807%u8BB0%u6E05%u9664%uFF09%20%26%20Mark-Compact%uFF08%u6807%u8BB0%u6574%u7406%uFF09%20%u7B97%u6CD5%uFF0C%u5408%u9002%u5927%u6570%u636E%u91CF%uFF0C%u4F46%u662F%u901F%u5EA6%u8F83%u6162%u3002%u5206%u522B%u5BF9%u65B0%u65E7%u4E24%u4EE3%u4F7F%u7528%u66F4%u9002%u5408%u4ED6%u4EEC%u7684%u7B97%u6CD5%u6765%u4F18%u5316%20GC%20%u901F%u5EA6%u3002%0A%0A%u8BE6%u60C5%u53C2%u89C1%u300A%u6DF1%u5165%u6D45%u51FA%20nodejs%u300B5.1%20V8%20%u7684%u5783%u573E%u56DE%u6536%u673A%u5236%u4E0E%u5185%u5B58%u9650%u5236%0A%0A%23%23%23%23V8%20%u7684%20GC%20log%0A%u5728%u542F%u52A8%u7A0B%u5E8F%u7684%u65F6%u5019%u6DFB%u52A0%20--trace_gc%20%u53C2%u6570%uFF0CV8%20%u5728%u8FDB%u884C%u5783%u573E%u56DE%u6536%u7684%u65F6%u5019%uFF0C%u4F1A%u5C06%u5783%u573E%u56DE%u6536%u7684%u4FE1%u606F%u6253%u5370%u51FA%u6765%uFF1A%0A%0A%60%60%60%0A%u279C%20%20%24%20node%20--trace_gc%20aa.js%0A...%0A%5B94036%5D%20%20%20%20%20%20%2068%20ms%3A%20Scavenge%208.4%20%2842.5%29%20-%3E%208.2%20%2843.5%29%20MB%2C%202.4%20ms%20%5Ballocation%20failure%5D.%0A%5B94036%5D%20%20%20%20%20%20%2074%20ms%3A%20Scavenge%208.9%20%2843.5%29%20-%3E%208.9%20%2846.5%29%20MB%2C%205.1%20ms%20%5Ballocation%20failure%5D.%0A%5B94036%5D%20Increasing%20marking%20speed%20to%203%20due%20to%20high%20promotion%20rate%0A%5B94036%5D%20%20%20%20%20%20%2085%20ms%3A%20Scavenge%2016.1%20%2846.5%29%20-%3E%2015.7%20%2847.5%29%20MB%2C%203.8%20ms%20%28+%205.0%20ms%20in%20106%20steps%20since%20last%20GC%29%20%5Ballocation%20failure%5D.%0A%5B94036%5D%20%20%20%20%20%20%2095%20ms%3A%20Scavenge%2016.7%20%2847.5%29%20-%3E%2016.6%20%2854.5%29%20MB%2C%207.2%20ms%20%28+%201.3%20ms%20in%2014%20steps%20since%20last%20GC%29%20%5Ballocation%20failure%5D.%0A%5B94036%5D%20%20%20%20%20%20111%20ms%3A%20Mark-sweep%2023.6%20%2854.5%29%20-%3E%2023.2%20%2854.5%29%20MB%2C%206.2%20ms%20%28+%2015.3%20ms%20in%20222%20steps%20since%20start%20of%20marking%2C%20biggest%20step%200.3%20ms%29%20%5BGC%20interrupt%5D%20%5BGC%20in%20old%20space%20requested%5D.%0A...%0A%60%60%60%0AV8%20%u63D0%u4F9B%u4E86%u5F88%u591A%u7A0B%u5E8F%u542F%u52A8%u9009%u9879%uFF1A%0A%0A%7C%20%u542F%u52A8%u9879%09%20%20%20%20%20%20%7C%20%20%20%20%20%u542B%u4E49%20%7C%0A%7C%20%3A--------%20%7C%20--------%3A%7C%0A%7C%20%u2013max-stack-size%09%20%20%20%20%7C%20%20%20%u8BBE%u7F6E%u6808%u5927%u5C0F%20%7C%0A%7C%20%u2013v8-options%09%09%20%20%20%20%7C%20%20%20%u6253%u5370%20V8%20%u76F8%u5173%u547D%u4EE4%20%7C%0A%7C%20%u2013trace-bailout%09%09%20%20%20%20%7C%20%20%20%u67E5%u627E%u4E0D%u80FD%u88AB%u4F18%u5316%u7684%u51FD%u6570%uFF0C%u91CD%u5199%20%7C%0A%7C%20%u2013trace-deopt%09%20%20%20%20%7C%20%20%20%u67E5%u627E%u4E0D%u80FD%u4F18%u5316%u7684%u51FD%u6570%20%7C%0A%0A%09%0A%0A%23%23%23%23%u4F7F%u7528%20memwatch%20%u6A21%u5757%u6765%u68C0%u6D4B%u5185%u5B58%u6CC4%u9732%0Anpm%u6A21%u5757%20memwatch%20%u662F%u4E00%u4E2A%u975E%u5E38%u597D%u7684%u5185%u5B58%u6CC4%u6F0F%u68C0%u67E5%u5DE5%u5177%uFF0C%u8BA9%u6211%u4EEC%u5148%u5C06%u8FD9%u4E2A%u6A21%u5757%u5B89%u88C5%u5230%u6211%u4EEC%u7684app%u4E2D%u53BB%uFF0C%u6267%u884C%u4EE5%u4E0B%u547D%u4EE4%uFF1A%0A%60%60%60%0Anpm%20install%20--save%20memwatch%0A%60%60%60%0A%0A%u7136%u540E%uFF0C%u5728%u6211%u4EEC%u7684%u4EE3%u7801%u4E2D%uFF0C%u6DFB%u52A0%uFF1A%0A%0A%60%60%60%0Avar%20memwatch%20%3D%20require%28%27memwatch%27%29%3B%0A%60%60%60%0A%0A%u7136%u540E%u76D1%u542C%20leak%20%u4E8B%u4EF6%0A%0A%60%60%60%0Amemwatch.on%28%27leak%27%2C%20function%28info%29%20%7B%0A%20console.error%28%27Memory%20leak%20detected%3A%20%27%2C%20info%29%3B%0A%7D%29%3B%0A%60%60%60%0A%0A%u8FD9%u6837%u5F53%u6211%u4EEC%u6267%u884C%u6211%u4EEC%u7684%u6D4B%u8BD5%u4EE3%u7801%uFF0C%u6211%u4EEC%u4F1A%u770B%u5230%u4E0B%u9762%u7684%u4FE1%u606F%uFF1A%0A%0A%60%60%60%0A%7B%0A%20start%3A%20Fri%20Jan%2002%202015%2010%3A38%3A49%20GMT+0000%20%28GMT%29%2C%0A%20end%3A%20Fri%20Jan%2002%202015%2010%3A38%3A50%20GMT+0000%20%28GMT%29%2C%0A%20growth%3A%207620560%2C%0A%20reason%3A%20%27heap%20growth%20over%205%20consecutive%20GCs%20%281s%29%20-%20-2147483648%20bytes/hr%27%0A%7D%0Amem%0A%60%60%60%0A%0Amemwatch%20%u53D1%u73B0%u4E86%u5185%u5B58%u6CC4%u6F0F%uFF01memwatch%20%u5224%u5B9A%u5185%u5B58%u6CC4%u6F0F%u4E8B%u4EF6%u53D1%u751F%u7684%u89C4%u5219%u5982%u4E0B%uFF1A%0A%0A**%u5F53%u4F60%u7684%u5806%u5185%u5B58%u57285%u4E2A%u8FDE%u7EED%u7684%u5783%u573E%u56DE%u6536%u5468%u671F%u5185%u4FDD%u6301%u6301%u7EED%u589E%u957F%uFF0C%u90A3%u4E48%u4E00%u4E2A%u5185%u5B58%u6CC4%u6F0F%u4E8B%u4EF6%u88AB%u6D3E%u53D1**%0A%0A%u4E86%u89E3%u66F4%u52A0%u8BE6%u7EC6%u7684%u5185%u5BB9%uFF0C%u67E5%u770B%20%20%5Bmemwatch%5D%28https%3A//www.npmjs.com/package/memwatch%29%0A%0A%23%23%23%23%u4F7F%u7528%20heapdump%20dump%20%u51FA%20Node%20%u5E94%u7528%u5185%u5B58%u5FEB%u7167%0A%u68C0%u6D4B%u5230%u4E86%u5185%u5B58%u6CC4%u9732%u7684%u65F6%u5019%uFF0C%u6211%u4EEC%u9700%u8981%u67E5%u770B%u5F53%u65F6%u5185%u5B58%u7684%u72B6%u6001%uFF0Cheapdump%20%u53EF%u4EE5%u6293%u4E0B%u5F53%u65F6%u5185%u5B58%u7684%u5FEB%u7167%u3002%0A%0A%60%60%60%0Amemwatch.on%28%27leak%27%2C%20function%28info%29%20%7B%0A%20console.error%28info%29%3B%0A%20var%20file%20%3D%20%27/tmp/myapp-%27%20+%20process.pid%20+%20%27-%27%20+%20Date.now%28%29%20+%20%27.heapsnapshot%27%3B%0A%20heapdump.writeSnapshot%28file%2C%20function%28err%29%7B%0A%20%20%20if%20%28err%29%20console.error%28err%29%3B%0A%20%20%20else%20console.error%28%27Wrote%20snapshot%3A%20%27%20+%20file%29%3B%0A%20%20%7D%29%3B%0A%7D%29%3B%0A%60%60%60%0A%u8FD0%u884C%u6211%u4EEC%u7684%u4EE3%u7801%uFF0C%u78C1%u76D8%u4E0A%u4F1A%u4EA7%u751F%u4E00%u4E9B%20.heapsnapshot%20%u7684%u6587%u4EF6%u5230/tmp%u76EE%u5F55%u4E0B%u3002%0A%0A%23%23%23%23%u4F7F%u7528%20Chrome%20%u7684%u5F00%u53D1%u8005%u5DE5%u5177%u5206%u6790%u5185%u5B58%u6D88%u8017%0Aheapdump%20%u63D0%u4F9B%u7684%u5185%u5B58%u5FEB%u7167%u662F%u53EF%u4EE5%u7528%20Chrome%20%u7684%u5F00%u53D1%u8005%u5DE5%u5177%u6765%u67E5%u770B%u7684%u3002%u628A%20.heapsnapshot%20%u6587%u4EF6%u5BFC%u5165%u5230%20Chrome%20Developer%20Tools%0A%21%5BAlt%20text%5D%28./1461553851743.png%29%0A%21%5BAlt%20text%5D%28./1461553811915.png%29%0A%0A%u600E%u4E48%u4F7F%u7528%u5185%u5B58%u5206%u6790%u5DE5%u5177%u5462%uFF1F%0A%5BChrome%u5F00%u53D1%u8005%u5DE5%u5177%u4E4BJavaScript%u5185%u5B58%u5206%u6790%5D%28http%3A//www.open-open.com/lib/view/open1421734578984.html%23_label13%29%0A%u8FD9%u7BC7%u6587%u4EF6%u8BE6%u7EC6%u4ECB%u7ECD%u4E86%u5982%u4F55%u4F7F%u7528%u5F00%u53D1%u8005%u5DE5%u5177%u6765%u5206%u6790%u5185%u5B58%u7684%u4F7F%u7528%u60C5%u51B5%u3002%u53EF%u4EE5%u53C2%u8003%uFF0C%u8FD9%u91CC%u5C31%u4E0D%u7EC6%u8BF4%u4E86%u3002%0A%0A%u6458%u53D6%u4E2A%u4F8B%u5B50%uFF0C%u4F7F%u7528%u5BF9%u6BD4%u89C6%u56FE%u3002%0A%5B%u5BF9%u6BD4%u89C6%u56FE%20demo%5D%28https%3A//developer.chrome.com/devtools/docs/heap-profiling-comparison%29%0A%u8FD9%u4E2A%u4F8B%u5B50%u5C55%u793A%u4E86%u901A%u8FC7%u5BF9%u6BD4%u524D%u540E%u7684%u5185%u5B58%u53D8%u5316%u6765%u627E%u51FA%u5185%u5B58%u6CC4%u9732%u7684%u539F%u56E0%uFF0C%u770B%u8D77%u6765%u8FD8%u662F%u5F88%u7B80%u5355%u65B9%u4FBF%u7684%u3002%0A%0A%u4F46%u662F%uFF0C%u7406%u60F3%u5F88%u7F8E%u597D%uFF0C%u73B0%u5B9E%u5F88%u6B8B%u9177%u3002%u4E0B%u9762%u5C55%u793A%u4E0B%u65E5%u5E38%u5F00%u53D1%u4E2D%20dump%20%u4E0B%u7684%u6570%u636E%u3002%0A%u4F7F%u7528%u5BF9%u6BD4%u89C6%u56FE%uFF1A%0A%21%5BAlt%20text%5D%28./1461553765122.png%29%0A%20%u53EF%u4EE5%u770B%u51FA%20array%20%u662F%u5185%u5B58%u589E%u957F%u7684%u4E3B%u8981%u5143%u51F6%uFF0C%u4F46%u4E5F%u53EA%u80FD%u5F97%u5230%u8FD9%u4E2A%u7EBF%u7D22%uFF0C%u90A3%u5177%u4F53%u662F%u90A3%u4E9B%20array%20%u6D88%u8017%u4E86%u5185%u5B58%u5462%uFF1F%0A%20%u70B9%u5F00%20array%20%u67E5%u770B%u8BE6%u7EC6%u4FE1%u606F%uFF1A%0A%20%21%5BAlt%20text%5D%28./1461554196807.png%29%0A%u4E00%u5927%u5806%u7684%u533F%u540D%u6570%u7EC4%uFF0C%u65E0%u6CD5%u51C6%u786E%u67E5%u5230%u5177%u4F53%u90A3%u4E9B%20array%20%u6D88%u8017%u4E86%u5185%u5B58%u3002%0A%u4E3B%u8981%u539F%u56E0%u662F%u540E%u7AEF%u4F7F%u7528%u4E86%20sails%20%u8FD9%u4E2A%20web%20%u6846%u67B6%uFF0C%u6846%u67B6%u91CC%u7684%u4EE3%u7801%u91CF%u6BD4%u8F83%u591A%uFF0C%u5E72%u6270%u9879%u592A%u591A%uFF0C%u65E0%u6CD5%u51C6%u786E%u5730%u5224%u65AD%u662F%u54EA%u4E9B%20function%20%u51FA%u73B0%u4E86%u95EE%u9898%u3002%0A%0A%0A%23%23%23%23%u5185%u5B58%u6CC4%u9732%u539F%u56E0%0A%u901A%u5E38%uFF0C%u9020%u6210%u5185%u5B58%u6CC4%u9732%u7684%u539F%u56E0%u6709%u5982%u4E0B%u51E0%u4E2A%u3002%0A-%20%u614E%u7528%u5185%u5B58%u5F53%u7F13%u5B58%uFF0C%u975E%u7528%u7684%u8BDD%u63A7%u5236%u597D%u7F13%u5B58%u7684%u5927%u5C0F%u548C%u8FC7%u671F%u65F6%u95F4%uFF0C%u9632%u6B62%u51FA%u73B0%u6C38%u8FDC%u65E0%u6CD5%u91CA%u653E%u7684%u95EE%u9898%0A-%20%u961F%u5217%u6D88%u8D39%u4E0D%u53CA%u65F6%uFF0C%u6570%u7EC4%u3001%u56DE%u8C03%uFF0C%u751F%u4EA7%u8005%u7684%u901F%u5EA6%u6BD4%u6D88%u8D39%u8005%u901F%u5EA6%u5FEB%uFF0C%u5806%u79EF%u4E86%u5927%u91CF%u751F%u4EA7%u8005%u5BFC%u81F4%u65E0%u6CD5%u91CA%u653E%u4F5C%u7528%u57DF%u6216%u53D8%u91CF%0A-%20%u4F5C%u7528%u57DF%u672A%u91CA%u653E%uFF0C%u65E0%u6CD5%u7ACB%u5373%u56DE%u6536%u7684%u5185%u5B58%u6709%u5168%u5C40%u53D8%u91CF%u548C%u95ED%u5305%uFF0C%u5C3D%u91CF%u4F7F%u7528%u53D8%u91CF%u8D4B%u503C%u4E3A%20null%7Cundefined%20%u6765%u89E6%u53D1%u56DE%u6536%0A%0A%u8FD9%u90E8%u5206%u7684%u8BE6%u7EC6%u89E3%u91CA%u8BF7%u53C2%u8003%u300A%u6DF1%u5165%u6D45%u51FA%20nodejs%u300B5.4%20%u5185%u5B58%u6CC4%u9732%u3002%0A%0A%0A%23%23%23%u4E09%u3001%u4F18%u5316%u5E94%u7528%20CPU%20%u74F6%u9888%0A%u4E0A%u9762%u4ECB%u7ECD%u4E86%20IO%20%u4F18%u5316%uFF0C%u5185%u5B58%u4F18%u5316%uFF0C%u4F7F%u7528%20Node%20%u505A%u540E%u7AEF%u7684%u8BDD%u8FD8%u4F1A%u7ECF%u5E38%u78B0%u5230%20CPU%20%u74F6%u9888%u3002%u603B%u6240%u5468%u77E5%uFF0CNode%20%u662F%u5355%u7EBF%u7A0B%u7684%uFF0C%u6240%u4EE5%u5BF9%20CPU%20%u5BC6%u96C6%u7684%u8FD0%u7B97%u4E0D%u662F%u592A%u80DC%u4EFB%uFF0C%u6240%u4EE5%u5E94%u8BE5%u907F%u514D%u4F7F%u7528%20Node%20%u6765%u8FDB%u884C%20CPU%20%u5BC6%u96C6%u7684%u8FD0%u7B97%u3002%0A%u90A3%u4E48%u5982%u679C%u51FA%u73B0%u4E86%20CPU%20%u7C7B%u7684%u95EE%u9898%u8981%u600E%u4E48%u5904%u7406%u5462%uFF1F%0A%0A%23%23%23%23V8log%3A%0A%u52A0%u5165%20--prof%20%20%u53C2%u6570%u53EF%u4EE5%u5728%u5E94%u7528%u7ED3%u675F%u662F%u6536%u96C6%20log%uFF0C%u6267%u884C%u547D%u4EE4%u4E4B%u540E%uFF0C%u4F1A%u5728%u8BE5%u76EE%u5F55%u4E0B%u4EA7%u751F%u4E00%u4E2A%20*-v8.log%20%u7684%u65E5%u5FD7%u6587%u4EF6%uFF0C%u6211%u4EEC%u53EF%u4EE5%u5B89%u88C5%u4E00%u4E2A%u65E5%u5FD7%u5206%u6790%u5DE5%u5177%20tick%0A%23%23%23%23%20tick%20%u5DE5%u5177%u5206%u6790%20log%0A%u53EF%u4EE5%u5206%u6790%u6BCF%u4E2A%20function%20%u7684%u5904%u7406%u65F6%u95F4%u3002%0A%0A%60%60%60%0A%u279C%20%20%24%20sudo%20npm%20install%20tick%20-g%0A%u279C%20%20%24%20node-tick-processor%20*-v8.log%0A%5BTop%20down%20%28heavy%29%20profile%5D%3A%0A%20%20Note%3A%20callees%20occupying%20less%20than%200.1%25%20are%20not%20shown.%0A%0A%20%20inclusive%20%20%20%20%20%20self%20%20%20%20%20%20%20%20%20%20%20name%0A%20%20ticks%20%20%20total%20%20ticks%20%20%20total%0A%20%20%20%20426%20%20%2036.7%25%20%20%20%20%20%200%20%20%20%200.0%25%20%20Function%3A%20%7E%3Canonymous%3E%20node.js%3A27%3A10%0A%20%20%20%20426%20%20%2036.7%25%20%20%20%20%20%200%20%20%20%200.0%25%20%20%20%20LazyCompile%3A%20%7Estartup%20node.js%3A30%3A19%0A%20%20%20%20410%20%20%2035.3%25%20%20%20%20%20%200%20%20%20%200.0%25%20%20%20%20%20%20LazyCompile%3A%20%7EModule.runMain%20module.js%3A499%3A26%0A%20%20%20%20409%20%20%2035.2%25%20%20%20%20%20%200%20%20%20%200.0%25%20%20%20%20%20%20%20%20LazyCompile%3A%20Module._load%20module.js%3A273%3A24%0A%20%20%20%20407%20%20%2035.1%25%20%20%20%20%20%200%20%20%20%200.0%25%20%20%20%20%20%20%20%20%20%20LazyCompile%3A%20%7EModule.load%20module.js%3A345%3A33%0A%20%20%20%20406%20%20%2035.0%25%20%20%20%20%20%200%20%20%20%200.0%25%20%20%20%20%20%20%20%20%20%20%20%20LazyCompile%3A%20%7EModule._extensions..js%20module.js%3A476%3A37%0A%20%20%20%20405%20%20%2034.9%25%20%20%20%20%20%200%20%20%20%200.0%25%20%20%20%20%20%20%20%20%20%20%20%20%20%20LazyCompile%3A%20%7EModule._compile%20module.js%3A378%3A37%0A...%0A%60%60%60%0A%0A%20%u524D%u7AEF%u7684%u540C%u5B66%u53EF%u4EE5%u76F4%u63A5%u5728%20chrome%20%u91CC%u6536%u96C6%20cpu%20profile%20%u7528%u4E8E%u5206%u6790%u3002%0A%0A%23%23%23%u4F7F%u7528%u7B2C%u4E09%u65B9%u5E73%u53F0%0A%5Balinode%5D%28https%3A//alinode.aliyun.com/%29%uFF0C%u57FA%u4E8E%20Node%20%u8FD0%u884C%u65F6%u7684%u5E94%u7528%u6027%u80FD%u7BA1%u7406%u89E3%u51B3%u65B9%u6848%uFF0C%u7B14%u8005%u6CA1%u6709%u4F53%u9A8C%u8FC7%uFF0C%u4E0D%u9884%u8BC4%u4EF7%u3002%0A%0A%23%23%23%u603B%u7ED3%0A%u6587%u7AE0%u4E3B%u8981%u4ECB%u7ECD%u7684%u8FD8%u662F%u540E%u7AEF%u5F00%u53D1%u4E2D%u5982%u4F55%u505A%u6027%u80FD%u4F18%u5316%u7684%u51E0%u79CD%u65B9%u5F0F%uFF1A%0A-%20%u6DFB%u52A0%u7D22%u5F15%0A-%20%u63A5%u53E3%u7F13%u5B58%0A-%20%u9759%u6001%u6587%u4EF6%u7F13%u5B58%0A-%20%u5408%u5E76%u67E5%u8BE2%0A%u8FD9%u51E0%u79CD%u65B9%u6CD5%u7684%u76EE%u7684%u5176%u5B9E%u90FD%u662F%u4E3A%u4E86%u51CF%u5C11%20IO%u3002%u770B%u6765%20IO%20%u8FC7%u9AD8%u662F%20Node%20%u5E94%u7528%u53CD%u5E94%u6162%u7684%u4E3B%u8981%u539F%u56E0%u3002%0A%0A%u6B64%u5916%uFF0C%u6587%u7AE0%u4E5F%u4ECB%u7ECD%u4E86%u5982%u4F55%u6392%u67E5%u5904%u7406%u5185%u5B58%u6CC4%u9732%u548C%20CPU%20%u8FC7%u9AD8%u7684%u95EE%u9898%u3002%u8FD9%u4E24%u7C7B%u95EE%u9898%u662F%u4E5F%u662F%u5F71%u54CD%20Node%20%u6027%u80FD%u7684%u4E00%u5927%u539F%u56E0%u3002%0A%0A%23%23%23%u53C2%u8003%uFF1A%0A%u300A%u6DF1%u5165%u6D45%u51FA%20nodejs%u300B%u6734%u7075%u8457%0A%5BMySQL%u7D22%u5F15%u539F%u7406%u53CA%u6162%u67E5%u8BE2%u4F18%u5316%5D%28http%3A//tech.meituan.com/mysql-index.html%29%0A%20%5BMongoDB%20%u67E5%u8BE2%u4F18%u5316%u5206%u6790%5D%28http%3A//www.cnblogs.com/zhoujinyi/p/3566773.html%29%0A%20%5B%u5982%u4F55%u7528redis/memcache%u505AMysql%u7F13%u5B58%u5C42%3F%5D%28https%3A//www.zhihu.com/question/27738066%29%0A%20%5B%u7F13%u5B58%u7A7F%u900F%u4E0E%u7F13%u5B58%u96EA%u5D29%5D%28http%3A//www.cnblogs.com/fidelQuan/p/4543387.html%29%0Ahttp%3A//www.barretlee.com/blog/2015/10/07/debug-nodejs-in-command-line/%0Ahttp%3A//www.w3ctech.com/topic/842%0Ahttps%3A//addyosmani.com/blog/taming-the-unicorn-easing-javascript-memory-profiling-in-devtools/%0Ahttp%3A//m.oschina.net/blog/270248%0Ahttp%3A//www.cnblogs.com/constantince/p/4607497.html%0Ahttp%3A//www.open-open.com/lib/view/open1421734578984.html%23_label13%0A%0A%0A</center>"
  },
  {
    "title": "用 sails、jade 和 angular 写个 CRUD",
    "created": "2016-11-03T23:10:06.000Z",
    "updated": "2016-11-27T18:35:27.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=88083a05-adb2-4ea0-ab48-f453ff31aafb&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# 用 sails、jade 和 angular 写个 CRUD\n\n### 前言\n\n在做运营活动的时候，要提供一个管理界面给运营使用，经常要用到一些 CRUD 的功能，所以就想着写个通用的模板，目标是：开发填好一个 model 的配置，一个管理页面就出来了。极大地提高生产力。\n\n### 怎么配置\n\n1.  新建一个 sails 的 model，就叫 Foo.js 按照规则定义好每个一个字段。见 Demo\n2.  新建一个与 model 名字对应 sails 的 controller: FooController\n\n    > 你也可以使用 sails 的生成器命令 sails generate api Foo 这样可以一次生成 Model 和 Controller 文件。\n\n3.  访问 [http://localhost:8080/foo/crud](http://localhost:8080/foo/crud)，一个管理界面就出来。访问 [http://localhost:8080/foo/crud_s](http://localhost:8080/foo/crud_s) 则是另一种交互风格的管理页面。\n\n4.  长这样\n\n<en-media longdesc=\"./1479970787506.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"6daf001c57693b113a995e428b9ee671\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### 原理\n\n后端使用 jade 模板来渲染 html，访问 [http://localhost:8080/foo/crud](http://localhost:8080/foo/crud) 其实就是访问 crud.jade 这个 view 文件。后端读取了对应 model 的配置，并把属性配置注入到 jade 模板，然后生成对应的 table，和编辑框。\n\n前端 html 的数据绑定工作是借助 **angular** 来实现的。\n\n#### 一个 Model 的Demo\n\n    /** * 电商化产品 */module.exports = { title: '电商产品', sort: 'no', attributes: { no: {type: 'string', name: '编号', required: true}, name: {type: 'string', name: '名字', required: true}, name_detail: {type: 'string', name: '详细名字', required: true}, ram: {type: 'integer', name: '内存'}, icon_src: {type: 'string', image: true, name: '缩略图', required: true}, list_src: {type: 'string', image: true, name: '列表图', required: true}, detail_src: { type: 'array', name: '细节图', attributes: { name: {type: 'string', image: true, name: '细节图'} } }, description: {type: 'string', textarea: true, name: ' 描述'}, tags: { type: 'array', name: '标签', required: true, attributes: { name: {type: 'string', name: '标签'} } }, prices: { type: 'array', name: '套餐信息', required: true, attributes: { color: {type: 'string', name: '颜色'}, month: {type: 'integer', name: '月份'}, price: {type: 'string', name: '市场价'}, trans_amount: {type: 'string', name: '转入金额'}, earning: {type: 'string', name: '另享收益'}, earning_real: {type: 'string', name: '实质收益'} } } }};module.exports = require('../lib/crud').fixModel(module.exports)\n\ntitle 是这个页面的 title  \nsort 决定列表数据的排序方式  \n最后记得用 crud 的 fixModel 方法来处理这个 model（原因是 sails 不支持你这样随便修改 model）\n\n### 一个 Control 的 Demo\n\n    var crud = require('../lib/crud')module.exports = {};module.exports = require('../lib/crud').extendController(module.exports)\n\n这里引入了 crud 的方法，用来给这个 controller 注入页面渲染的功能。\n\n### Model 的定义\n\n可以给 model 的字段定义以下类型，在前端会被翻译成对应的控件\n\n*   string  \n    文本类型 前端对应的是文本输入框\n*   integer/float  \n    数字类型 前端是 html5的文本输入框 number 类型\n*   长文本  \n    添加一个 textarea:true 属性即可，前端会展示成一个文本框。\n*   日期类型  \n    type=date 前端是 html5的 date 类型的文本输入框\n*   选择框  \n    需要添加一个 options 属性，描述每个 option 的 key and value  \n    这样前端就能构造一个 选择框了。\n\n    compare: { name: '', type: 'string', options: [ {value: '-2', name: '小于等于'}, {value: '-1', name: '小于'}, {value: '0', name: '等于'}, {value: '1', name: '大于'}, {value: '2', name: '大于等于'} ]},\n\n*   图片地址  \n    某个字段如果是保存图片地址的话，配置一个属性 image:true  \n    在编辑和展示这个字段都能看到图片预览\n\n<en-media longdesc=\"./1478242749310.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"104f3242e2d49d2b9d791a4e65a01414\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n<en-media longdesc=\"./1478242763200.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"d52c1f770a9c2cbff4f1d8fd26e0de9a\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n*   object 需要继续定义 object 里有哪些类型的数据  \n    在前端会把 object 的子内容铺开。\n\n<en-media longdesc=\"./1478242389276.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"abf2d4a578d33c895e778cf765964003\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n    price: { name: '套餐', type: 'object', readOnly: true, attributes: { \"month\": {type: 'string', name: '月份'}, \"color\": {type: 'string', name: '颜色'} }},\n\n*   array 同 object 需要继续定义数据类型。  \n    在前端会以一个子 table 的形式来展开。\n\n<en-media longdesc=\"./1478242461788.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"96dcbfab01d4087f077043ae2e583b96\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n编辑的时候是这样的：\n\n<en-media longdesc=\"./1478242493029.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"cb7778e07c2a56307831c72f51d59566\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n    prices: { type: 'array', name: '套餐信息', required: true, attributes: { color: {type: 'string', name: '颜色'}, month: {type: 'integer', name: '月份'}, price: {type: 'string', name: '市场价'}, trans_amount: {type: 'string', name: '转入金额'}, earning: {type: 'string', name: '另享收益'}, earning_real: {type: 'string', name: '实质收益'} }}\n\n### 代码\n\ncrud.jade 里的 extends layout2 里引用了 css 和 js 文件，这里不便公开。  \n[https://github.com/myfjdthink/CodeNode/tree/master/crud](https://github.com/myfjdthink/CodeNode/tree/master/crud)\n\n### TODO\n\n分页功能  \n导出 Excel 功能  \n在 model 字段比较多的时候提供一个更好的编辑交互。\n\n### 总结\n\n本文只是提供一个实现 CRUD 思路，你可以根据你的实际项目来替换使用。  \nREST 接口可以很多 Web 框架都会提供。  \n视图模板除了 Jade 还有 ejs 等。  \n前端的数据绑定也可以考虑使用 Vue。\n\n<center style=\"display:none\">%23%u7528%20sails%u3001jade%20%u548C%20angular%20%u5199%u4E2A%20CRUD%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%5D%0A%0A%23%23%23%20%u524D%u8A00%0A%0A%u5728%u505A%u8FD0%u8425%u6D3B%u52A8%u7684%u65F6%u5019%uFF0C%u8981%u63D0%u4F9B%u4E00%u4E2A%u7BA1%u7406%u754C%u9762%u7ED9%u8FD0%u8425%u4F7F%u7528%uFF0C%u7ECF%u5E38%u8981%u7528%u5230%u4E00%u4E9B%20CRUD%20%u7684%u529F%u80FD%uFF0C%u6240%u4EE5%u5C31%u60F3%u7740%u5199%u4E2A%u901A%u7528%u7684%u6A21%u677F%uFF0C%u76EE%u6807%u662F%uFF1A%u5F00%u53D1%u586B%u597D%u4E00%u4E2A%20model%20%u7684%u914D%u7F6E%uFF0C%u4E00%u4E2A%u7BA1%u7406%u9875%u9762%u5C31%u51FA%u6765%u4E86%u3002%u6781%u5927%u5730%u63D0%u9AD8%u751F%u4EA7%u529B%u3002%0A%0A%23%23%23%20%u600E%u4E48%u914D%u7F6E%0A1.%20%u65B0%u5EFA%u4E00%u4E2A%20sails%20%u7684%20model%uFF0C%u5C31%u53EB%20Foo.js%20%u6309%u7167%u89C4%u5219%u5B9A%u4E49%u597D%u6BCF%u4E2A%u4E00%u4E2A%u5B57%u6BB5%u3002%u89C1%20Demo%0A2.%20%u65B0%u5EFA%u4E00%u4E2A%u4E0E%20model%20%u540D%u5B57%u5BF9%u5E94%20sails%20%u7684%20controller%3A%20FooController%0A%0A%09%3E%20%u4F60%u4E5F%u53EF%u4EE5%u4F7F%u7528%20sails%20%u7684%u751F%u6210%u5668%u547D%u4EE4%20%20sails%20generate%20api%20Foo%20%u8FD9%u6837%u53EF%u4EE5%u4E00%u6B21%u751F%u6210%20Model%20%u548C%20Controller%20%u6587%u4EF6%u3002%0A%0A3.%20%u8BBF%u95EE%20http%3A//localhost%3A8080/foo/crud%uFF0C%u4E00%u4E2A%u7BA1%u7406%u754C%u9762%u5C31%u51FA%u6765%u3002%u8BBF%u95EE%20http%3A//localhost%3A8080/foo/crud_s%20%u5219%u662F%u53E6%u4E00%u79CD%u4EA4%u4E92%u98CE%u683C%u7684%u7BA1%u7406%u9875%u9762%u3002%0A%0A4.%20%u957F%u8FD9%u6837%0A%21%5BAlt%20text%5D%28./1479970787506.png%29%0A%0A%23%23%23%20%u539F%u7406%0A%u540E%u7AEF%u4F7F%u7528%20jade%20%u6A21%u677F%u6765%u6E32%u67D3%20html%uFF0C%u8BBF%u95EE%20http%3A//localhost%3A8080/foo/crud%20%u5176%u5B9E%u5C31%u662F%u8BBF%u95EE%20crud.jade%20%20%u8FD9%u4E2A%20view%20%u6587%u4EF6%u3002%u540E%u7AEF%u8BFB%u53D6%u4E86%u5BF9%u5E94%20model%20%u7684%u914D%u7F6E%uFF0C%u5E76%u628A%u5C5E%u6027%u914D%u7F6E%u6CE8%u5165%u5230%20%20jade%20%u6A21%u677F%uFF0C%u7136%u540E%u751F%u6210%u5BF9%u5E94%u7684%20table%uFF0C%u548C%u7F16%u8F91%u6846%u3002%0A%0A%u524D%u7AEF%20html%20%u7684%u6570%u636E%u7ED1%u5B9A%u5DE5%u4F5C%u662F%u501F%u52A9%20**angular**%20%u6765%u5B9E%u73B0%u7684%u3002%0A%23%23%23%23%20%20%u4E00%u4E2A%20Model%20%u7684Demo%0A%60%60%60%0A/**%0A%20*%20%20%u7535%u5546%u5316%u4EA7%u54C1%0A%20*/%0Amodule.exports%20%3D%20%7B%0A%20%20title%3A%20%27%u7535%u5546%u4EA7%u54C1%27%2C%0A%20%20sort%3A%20%27no%27%2C%0A%20%20attributes%3A%20%7B%0A%20%20%20%20no%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u7F16%u53F7%27%2C%20required%3A%20true%7D%2C%0A%20%20%20%20name%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u540D%u5B57%27%2C%20required%3A%20true%7D%2C%0A%20%20%20%20name_detail%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u8BE6%u7EC6%u540D%u5B57%27%2C%20required%3A%20true%7D%2C%0A%20%20%20%20ram%3A%20%7Btype%3A%20%27integer%27%2C%20name%3A%20%27%u5185%u5B58%27%7D%2C%0A%20%20%20%20icon_src%3A%20%7Btype%3A%20%27string%27%2C%20image%3A%20true%2C%20name%3A%20%27%u7F29%u7565%u56FE%27%2C%20required%3A%20true%7D%2C%0A%20%20%20%20list_src%3A%20%7Btype%3A%20%27string%27%2C%20image%3A%20true%2C%20name%3A%20%27%u5217%u8868%u56FE%27%2C%20required%3A%20true%7D%2C%0A%20%20%20%20detail_src%3A%20%7B%0A%20%20%20%20%20%20type%3A%20%27array%27%2C%20name%3A%20%27%u7EC6%u8282%u56FE%27%2C%20attributes%3A%20%7B%0A%20%20%20%20%20%20%20%20name%3A%20%7Btype%3A%20%27string%27%2C%20image%3A%20true%2C%20name%3A%20%27%u7EC6%u8282%u56FE%27%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20description%3A%20%7Btype%3A%20%27string%27%2C%20textarea%3A%20true%2C%20name%3A%20%27%20%u63CF%u8FF0%27%7D%2C%0A%20%20%20%20tags%3A%20%7B%0A%20%20%20%20%20%20type%3A%20%27array%27%2C%20name%3A%20%27%u6807%u7B7E%27%2C%20required%3A%20true%2C%20attributes%3A%20%7B%0A%20%20%20%20%20%20%20%20name%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u6807%u7B7E%27%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%2C%0A%20%20%20%20prices%3A%20%7B%0A%20%20%20%20%20%20type%3A%20%27array%27%2C%20name%3A%20%27%u5957%u9910%u4FE1%u606F%27%2C%20required%3A%20true%2C%20attributes%3A%20%7B%0A%20%20%20%20%20%20%20%20color%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u989C%u8272%27%7D%2C%0A%20%20%20%20%20%20%20%20month%3A%20%7Btype%3A%20%27integer%27%2C%20name%3A%20%27%u6708%u4EFD%27%7D%2C%0A%20%20%20%20%20%20%20%20price%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u5E02%u573A%u4EF7%27%7D%2C%0A%20%20%20%20%20%20%20%20trans_amount%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u8F6C%u5165%u91D1%u989D%27%7D%2C%0A%20%20%20%20%20%20%20%20earning%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u53E6%u4EAB%u6536%u76CA%27%7D%2C%0A%20%20%20%20%20%20%20%20earning_real%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u5B9E%u8D28%u6536%u76CA%27%7D%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%20%20%7D%0A%7D%3B%0A%0Amodule.exports%20%3D%20require%28%27../lib/crud%27%29.fixModel%28module.exports%29%0A%60%60%60%0A%0Atitle%20%u662F%u8FD9%u4E2A%u9875%u9762%u7684%20title%0Asort%20%u51B3%u5B9A%u5217%u8868%u6570%u636E%u7684%u6392%u5E8F%u65B9%u5F0F%0A%u6700%u540E%u8BB0%u5F97%u7528%20crud%20%u7684%20fixModel%20%u65B9%u6CD5%u6765%u5904%u7406%u8FD9%u4E2A%20model%uFF08%u539F%u56E0%u662F%20sails%20%u4E0D%u652F%u6301%u4F60%u8FD9%u6837%u968F%u4FBF%u4FEE%u6539%20model%uFF09%0A%23%23%23%u4E00%u4E2A%20Control%20%u7684%20Demo%20%0A%0A%60%60%60%0Avar%20crud%20%3D%20require%28%27../lib/crud%27%29%0Amodule.exports%20%3D%20%7B%7D%3B%0Amodule.exports%20%3D%20require%28%27../lib/crud%27%29.extendController%28module.exports%29%0A%60%60%60%0A%u8FD9%u91CC%u5F15%u5165%u4E86%20crud%20%u7684%u65B9%u6CD5%uFF0C%u7528%u6765%u7ED9%u8FD9%u4E2A%20controller%20%u6CE8%u5165%u9875%u9762%u6E32%u67D3%u7684%u529F%u80FD%u3002%0A%0A%0A%23%23%23%20Model%20%u7684%u5B9A%u4E49%0A%u53EF%u4EE5%u7ED9%20model%20%u7684%u5B57%u6BB5%u5B9A%u4E49%u4EE5%u4E0B%u7C7B%u578B%uFF0C%u5728%u524D%u7AEF%u4F1A%u88AB%u7FFB%u8BD1%u6210%u5BF9%u5E94%u7684%u63A7%u4EF6%0A-%20%20string%20%0A%u6587%u672C%u7C7B%u578B%20%u524D%u7AEF%u5BF9%u5E94%u7684%u662F%u6587%u672C%u8F93%u5165%u6846%0A-%20%20integer/float%20%0A%u6570%u5B57%u7C7B%u578B%20%u524D%u7AEF%u662F%20html5%u7684%u6587%u672C%u8F93%u5165%u6846%20number%20%u7C7B%u578B%0A-%20%20%u957F%u6587%u672C%0A%u6DFB%u52A0%u4E00%u4E2A%20textarea%3Atrue%20%u5C5E%u6027%u5373%u53EF%uFF0C%u524D%u7AEF%u4F1A%u5C55%u793A%u6210%u4E00%u4E2A%u6587%u672C%u6846%u3002%0A-%20%u65E5%u671F%u7C7B%u578B%0Atype%3Ddate%20%20%u524D%u7AEF%u662F%20html5%u7684%20date%20%20%u7C7B%u578B%u7684%u6587%u672C%u8F93%u5165%u6846%0A-%20%u9009%u62E9%u6846%0A%u9700%u8981%u6DFB%u52A0%u4E00%u4E2A%20options%20%u5C5E%u6027%uFF0C%u63CF%u8FF0%u6BCF%u4E2A%20option%20%u7684%20key%20and%20value%0A%u8FD9%u6837%u524D%u7AEF%u5C31%u80FD%u6784%u9020%u4E00%u4E2A%20%u9009%u62E9%u6846%u4E86%u3002%0A%60%60%60%0Acompare%3A%20%7B%0A%20name%3A%20%27%27%2C%20type%3A%20%27string%27%2C%20options%3A%20%5B%0A%20%20%20%20%7Bvalue%3A%20%27-2%27%2C%20name%3A%20%27%u5C0F%u4E8E%u7B49%u4E8E%27%7D%2C%0A%20%20%20%20%7Bvalue%3A%20%27-1%27%2C%20name%3A%20%27%u5C0F%u4E8E%27%7D%2C%0A%20%20%20%20%7Bvalue%3A%20%270%27%2C%20name%3A%20%27%u7B49%u4E8E%27%7D%2C%0A%20%20%20%20%7Bvalue%3A%20%271%27%2C%20name%3A%20%27%u5927%u4E8E%27%7D%2C%0A%20%20%20%20%7Bvalue%3A%20%272%27%2C%20name%3A%20%27%u5927%u4E8E%u7B49%u4E8E%27%7D%0A%20%20%5D%0A%7D%2C%0A%60%60%60%0A%0A-%20%u56FE%u7247%u5730%u5740%0A%u67D0%u4E2A%u5B57%u6BB5%u5982%u679C%u662F%u4FDD%u5B58%u56FE%u7247%u5730%u5740%u7684%u8BDD%uFF0C%u914D%u7F6E%u4E00%u4E2A%u5C5E%u6027%20image%3Atrue%0A%u5728%u7F16%u8F91%u548C%u5C55%u793A%u8FD9%u4E2A%u5B57%u6BB5%u90FD%u80FD%u770B%u5230%u56FE%u7247%u9884%u89C8%0A%21%5BAlt%20text%5D%28./1478242749310.png%29%0A%21%5BAlt%20text%5D%28./1478242763200.png%29%0A%0A-%20%20object%20%20%u9700%u8981%u7EE7%u7EED%u5B9A%u4E49%20object%20%u91CC%u6709%u54EA%u4E9B%u7C7B%u578B%u7684%u6570%u636E%0A%u5728%u524D%u7AEF%u4F1A%u628A%20object%20%u7684%u5B50%u5185%u5BB9%u94FA%u5F00%u3002%0A%21%5BAlt%20text%5D%28./1478242389276.png%29%0A%0A%60%60%60%0Aprice%3A%20%7B%0A%20%20name%3A%20%27%u5957%u9910%27%2C%20type%3A%20%27object%27%2C%20readOnly%3A%20true%2C%20attributes%3A%20%7B%0A%20%20%20%20%22month%22%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u6708%u4EFD%27%7D%2C%0A%20%20%20%20%22color%22%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u989C%u8272%27%7D%0A%20%20%7D%0A%7D%2C%0A%60%60%60%0A%0A-%20%20array%20%20%u540C%20object%20%u9700%u8981%u7EE7%u7EED%u5B9A%u4E49%u6570%u636E%u7C7B%u578B%u3002%0A%u5728%u524D%u7AEF%u4F1A%u4EE5%u4E00%u4E2A%u5B50%20table%20%u7684%u5F62%u5F0F%u6765%u5C55%u5F00%u3002%0A%0A%21%5BAlt%20text%5D%28./1478242461788.png%29%0A%0A%u7F16%u8F91%u7684%u65F6%u5019%u662F%u8FD9%u6837%u7684%uFF1A%0A%21%5BAlt%20text%5D%28./1478242493029.png%29%0A%0A%60%60%60%0Aprices%3A%20%7B%0A%20%20type%3A%20%27array%27%2C%20name%3A%20%27%u5957%u9910%u4FE1%u606F%27%2C%20required%3A%20true%2C%20attributes%3A%20%7B%0A%20%20%20%20color%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u989C%u8272%27%7D%2C%0A%20%20%20%20month%3A%20%7Btype%3A%20%27integer%27%2C%20name%3A%20%27%u6708%u4EFD%27%7D%2C%0A%20%20%20%20price%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u5E02%u573A%u4EF7%27%7D%2C%0A%20%20%20%20trans_amount%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u8F6C%u5165%u91D1%u989D%27%7D%2C%0A%20%20%20%20earning%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u53E6%u4EAB%u6536%u76CA%27%7D%2C%0A%20%20%20%20earning_real%3A%20%7Btype%3A%20%27string%27%2C%20name%3A%20%27%u5B9E%u8D28%u6536%u76CA%27%7D%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%23%23%23%u4EE3%u7801%0Acrud.jade%20%u91CC%u7684%20extends%20layout2%20%u91CC%u5F15%u7528%u4E86%20css%20%u548C%20js%20%u6587%u4EF6%uFF0C%u8FD9%u91CC%u4E0D%u4FBF%u516C%u5F00%u3002%0Ahttps%3A//github.com/myfjdthink/CodeNode/tree/master/crud%0A%0A%23%23%23TODO%0A%u5206%u9875%u529F%u80FD%0A%u5BFC%u51FA%20Excel%20%u529F%u80FD%0A%u5728%20model%20%u5B57%u6BB5%u6BD4%u8F83%u591A%u7684%u65F6%u5019%u63D0%u4F9B%u4E00%u4E2A%u66F4%u597D%u7684%u7F16%u8F91%u4EA4%u4E92%u3002%0A%0A%23%23%23%20%u603B%u7ED3%0A%u672C%u6587%u53EA%u662F%u63D0%u4F9B%u4E00%u4E2A%u5B9E%u73B0%20CRUD%20%u601D%u8DEF%uFF0C%u4F60%u53EF%u4EE5%u6839%u636E%u4F60%u7684%u5B9E%u9645%u9879%u76EE%u6765%u66FF%u6362%u4F7F%u7528%u3002%0AREST%20%u63A5%u53E3%u53EF%u4EE5%u5F88%u591A%20Web%20%u6846%u67B6%u90FD%u4F1A%u63D0%u4F9B%u3002%0A%u89C6%u56FE%u6A21%u677F%u9664%u4E86%20Jade%20%u8FD8%u6709%20ejs%20%u7B49%u3002%0A%u524D%u7AEF%u7684%u6570%u636E%u7ED1%u5B9A%u4E5F%u53EF%u4EE5%u8003%u8651%u4F7F%u7528%20Vue%u3002%0A%0A</center>"
  },
  {
    "title": "记录一个 NPM 包冲突的问题",
    "created": "2016-11-16T22:47:27.000Z",
    "updated": "2016-11-27T18:29:26.000Z",
    "tags": [
      "posts",
      "Node",
      "编程相关"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=a427fac9-caab-40dc-9996-8521640b6ccc&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# 记录一个 NPM 包冲突的问题\n\n## 问题\n\n项目中使用 sails 这个 Web 框架，sails 集成的 orm 是 waterline ，waterline 针对 mongo 的适配器是 sails-mongo，最近线上爆了一个 BUG，sails-mongo 在执行 native 方法时报错 ：\n\n> TypeError: Argument must be a string  \n> at TypeError (native)  \n> at Buffer.write (buffer.js:791:21)  \n> at serializeObjectId (node_modules/sails-mongo/node_modules/bson/lib/bson/parser/serializer.js:242:10)  \n> at serializeInto (node_modules/sails-mongo/node_modules/bson/lib/bson/parser/serializer.js:699:17)  \n> at serialize (node_modules/sails-mongo/node_modules/bson/lib/bson/bson.js:47:27)  \n> at Query.toBin (node_modules/sails-mongo/node_modules/mongodb-core/lib/connection/commands.js:143:25)  \n> at Cursor._find (node_modules/sails-mongo/node_modules/mongodb-core/lib/cursor.js:339:36)  \n> at proto.(anonymous function) (node_modules/sails-mongo/node_modules/mongodb/lib/apm.js:547:16)  \n> at proto.(anonymous function) (node_modules/sails-mongo/node_modules/mongodb/lib/apm.js:547:16)  \n> at proto.(anonymous function) (node_modules/sails-mongo/node_modules/mongodb/lib/apm.js:547:16)  \n> at proto.(anonymous function) (node_modules/sails-mongo/node_modules/mongodb/lib/apm.js:547:16)  \n> at proto.(anonymous function) (node_modules/sails-mongo/node_modules/mongodb/lib/apm.js:547:16)  \n> at proto.(anonymous function) (node_modules/sails-mongo/node_modules/mongodb/lib/apm.js:547:16)  \n> at proto.(anonymous function) [as _find] (node_modules/sails-mongo/node_modules/mongodb/lib/apm.js:547:16)  \n> ……\n\n## 解决问题\n\n针对这个问题 Google 了一下，已经有人发现了这个问题并在 sails-mongo 的 github 项目里提了 issue 了， [https://github.com/balderdashy/sails-mongo/issues/415](https://github.com/balderdashy/sails-mongo/issues/415)。  \n查看这个 issue 可以知道，问题原因是项目中同时使用了 sails-mongo 和 mongo 两个包，在 sails-mong 的版本为 0.12.0 的情况下， mongodb 这个包升级到 2.2.0 以上就会导致报错。  \nissue 里给出的解决方案是：\n\n<en-media longdesc=\"./1479363515563.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"23b343433c9efe2aa0e006d79033a63a\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n## 分析\n\nOK， 问题解决后分析下两个包出现冲突的原因。  \n业务代码是这样写的：\n\n    var ObjectId = require('mongodb').ObjectID;... query.push({ $match: { $or: _.map(posts, function(post) { return { _id: { $eq: ObjectId(post.id) }, status: { $ne: 'trash' } } }) } });\n\n这里把 mongodb（2.2.x） 的 ObjectId 对象传给了 sails-mongo 的处理逻辑中，导致了最终的报错。  \nsails-mongo 里也引用了 mongodb 这个库，版本是 2.1.3\n\n<en-media longdesc=\"./1479364063295.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"259bbe458215e02e9e8c079434fe05d0\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n这个版本与外部的 mongodb 库 2.2.x 版本有冲突，看来 mongodb 这个库在 2.2.x 升级了某些东西，我们进一步追查，根据报错信息可以定位报错的代码\n\n> at serializeObjectId  \n> (node_modules/sails-mongo/node_modules/bson/lib/bson/parser/serializer.js:242:10)\n\n看来是 bson 这个库里有问题，这个是 sails-mongo 里的 bson（0.4.23） 的代码的报错位置\n\n<en-media longdesc=\"./1479364537291.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"68c11cfc6933f631623bcfd921b7de54\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n在 242 行加上断点，可以看到 value 这个变量的情况：\n\n<en-media longdesc=\"./1479365009575.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"5b51f9907158a309253a7f7fe60cef8e\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n而 mongodb 里引用的 bson（0.5.6） 的此处代码是这样的\n\n<en-media longdesc=\"./1479365570507.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"ffbca72b5414fa7261256e22faa87f45\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n加断点看到的变量情况：\n\n<en-media longdesc=\"./1479365002888.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"a63bf2ba6f362c85a2d58485a7901672\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n看来是 ObjectID 的类型变了， 由之前的 String 变成了 Uint8Array ，这也就契合了报错信息里的 “TypeError: Argument must be a string”， 这就是问题的根源。\n\n## 总结\n\n这个问题初看好像是 npm 包版本导致的冲突（NPM 其实已经处理好了不同版本的依赖问题），但是实际上是代码应用层使用不当导致的问题，根据 issue 提供的解决方案，要获取 ObjectID 对象，应该使用 sails-mongo 来提供这个对象：\n\n    const ObjectId = require('sails-mongo').mongo.objectId\n\n而不是从外部获取：\n\n    var ObjectId = require('mongodb').ObjectID;\n\n其实是不是可以说是 sails-mogno 坑？\n\n* * *\n\n11/18日更新：  \n哈哈哈， sails-mogno 果然是坑，看看它提供的 objectId 的实现：\n\n<en-media longdesc=\"./1479455064688.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"c2b6f327882b508a1eb831acdb948cd0\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n如果你想要生成一个新的 ObjectID，这样写的话\n\n    var id = ObejctId()\n\n你将得到一个 null !  \n无语呢，所以呢，还是要这样引用才行：\n\n    var ObjectID = require('sails-mongo/node_modules/mongodb').ObjectID;\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%2C%20Node%5D%0A%0A%23%u8BB0%u5F55%u4E00%u4E2A%20NPM%20%u5305%u51B2%u7A81%u7684%u95EE%u9898%0A%23%23%u95EE%u9898%0A%0A%u9879%u76EE%u4E2D%u4F7F%u7528%20sails%20%u8FD9%u4E2A%20Web%20%u6846%u67B6%uFF0Csails%20%u96C6%u6210%u7684%20orm%20%u662F%20waterline%20%uFF0Cwaterline%20%u9488%u5BF9%20mongo%20%u7684%u9002%u914D%u5668%u662F%20sails-mongo%uFF0C%u6700%u8FD1%u7EBF%u4E0A%u7206%u4E86%u4E00%u4E2A%20BUG%uFF0Csails-mongo%20%u5728%u6267%u884C%20native%20%u65B9%u6CD5%u65F6%u62A5%u9519%20%uFF1A%0A%0A%3E%20TypeError%3A%20Argument%20must%20be%20a%20string%0A%3E%20%20%20%20%20at%20TypeError%20%28native%29%0A%3E%20%20%20%20%20at%20Buffer.write%20%28buffer.js%3A791%3A21%29%0A%3E%20%20%20%20%20at%20serializeObjectId%20%28node_modules/sails-mongo/node_modules/bson/lib/bson/parser/serializer.js%3A242%3A10%29%0A%3E%20%20%20%20%20at%20serializeInto%20%28node_modules/sails-mongo/node_modules/bson/lib/bson/parser/serializer.js%3A699%3A17%29%0A%3E%20%20%20%20%20at%20serialize%20%28node_modules/sails-mongo/node_modules/bson/lib/bson/bson.js%3A47%3A27%29%0A%3E%20%20%20%20%20at%20Query.toBin%20%28node_modules/sails-mongo/node_modules/mongodb-core/lib/connection/commands.js%3A143%3A25%29%0A%3E%20%20%20%20%20at%20Cursor._find%20%28node_modules/sails-mongo/node_modules/mongodb-core/lib/cursor.js%3A339%3A36%29%0A%3E%20%20%20%20%20at%20proto.%28anonymous%20function%29%20%28node_modules/sails-mongo/node_modules/mongodb/lib/apm.js%3A547%3A16%29%0A%3E%20%20%20%20%20at%20proto.%28anonymous%20function%29%20%28node_modules/sails-mongo/node_modules/mongodb/lib/apm.js%3A547%3A16%29%0A%3E%20%20%20%20%20at%20proto.%28anonymous%20function%29%20%28node_modules/sails-mongo/node_modules/mongodb/lib/apm.js%3A547%3A16%29%0A%3E%20%20%20%20%20at%20proto.%28anonymous%20function%29%20%28node_modules/sails-mongo/node_modules/mongodb/lib/apm.js%3A547%3A16%29%0A%3E%20%20%20%20%20at%20proto.%28anonymous%20function%29%20%28node_modules/sails-mongo/node_modules/mongodb/lib/apm.js%3A547%3A16%29%0A%3E%20%20%20%20%20at%20proto.%28anonymous%20function%29%20%28node_modules/sails-mongo/node_modules/mongodb/lib/apm.js%3A547%3A16%29%0A%3E%20%20%20%20%20at%20proto.%28anonymous%20function%29%20%5Bas%20_find%5D%20%28node_modules/sails-mongo/node_modules/mongodb/lib/apm.js%3A547%3A16%29%0A%3E%20%20%20%20%20......%0A%0A%0A%23%23%20%u89E3%u51B3%u95EE%u9898%0A%0A%u9488%u5BF9%u8FD9%u4E2A%u95EE%u9898%20Google%20%u4E86%u4E00%u4E0B%uFF0C%u5DF2%u7ECF%u6709%u4EBA%u53D1%u73B0%u4E86%u8FD9%u4E2A%u95EE%u9898%u5E76%u5728%20sails-mongo%20%20%u7684%20github%20%u9879%u76EE%u91CC%u63D0%u4E86%20issue%20%u4E86%uFF0C%20https%3A//github.com/balderdashy/sails-mongo/issues/415%u3002%0A%u67E5%u770B%u8FD9%u4E2A%20issue%20%u53EF%u4EE5%u77E5%u9053%uFF0C%u95EE%u9898%u539F%u56E0%u662F%u9879%u76EE%u4E2D%u540C%u65F6%u4F7F%u7528%u4E86%20sails-mongo%20%20%20%u548C%20mongo%20%u4E24%u4E2A%u5305%uFF0C%u5728%20sails-mong%20%20%u7684%u7248%u672C%u4E3A%200.12.0%20%u7684%u60C5%u51B5%u4E0B%uFF0C%20mongodb%20%u8FD9%u4E2A%u5305%u5347%u7EA7%u5230%202.2.0%20%u4EE5%u4E0A%u5C31%u4F1A%u5BFC%u81F4%u62A5%u9519%u3002%0Aissue%20%u91CC%u7ED9%u51FA%u7684%u89E3%u51B3%u65B9%u6848%u662F%uFF1A%0A%21%5BAlt%20text%5D%28./1479363515563.png%29%0A%0A%23%23%20%u5206%u6790%0AOK%uFF0C%20%u95EE%u9898%u89E3%u51B3%u540E%u5206%u6790%u4E0B%u4E24%u4E2A%u5305%u51FA%u73B0%u51B2%u7A81%u7684%u539F%u56E0%u3002%0A%u4E1A%u52A1%u4EE3%u7801%u662F%u8FD9%u6837%u5199%u7684%uFF1A%0A%0A%60%60%60%0Avar%20ObjectId%20%3D%20require%28%27mongodb%27%29.ObjectID%3B%0A%0A...%0A%0A%20%20query.push%28%7B%0A%20%20%20%20%24match%3A%20%7B%0A%20%20%20%20%20%20%24or%3A%20_.map%28posts%2C%20function%28post%29%20%7B%0A%20%20%20%20%20%20%20%20return%20%7B%0A%20%20%20%20%20%20%20%20%20%20_id%3A%20%7B%20%24eq%3A%20ObjectId%28post.id%29%20%7D%2C%0A%20%20%20%20%20%20%20%20%20%20status%3A%20%7B%20%24ne%3A%20%27trash%27%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%29%0A%20%20%20%20%7D%0A%20%20%7D%29%3B%0A%60%60%60%0A%u8FD9%u91CC%u628A%20mongodb%uFF082.2.x%uFF09%20%u7684%20ObjectId%20%u5BF9%u8C61%u4F20%u7ED9%u4E86%20sails-mongo%20%u7684%u5904%u7406%u903B%u8F91%u4E2D%uFF0C%u5BFC%u81F4%u4E86%u6700%u7EC8%u7684%u62A5%u9519%u3002%0Asails-mongo%20%u91CC%u4E5F%u5F15%u7528%u4E86%20mongodb%20%u8FD9%u4E2A%u5E93%uFF0C%u7248%u672C%u662F%202.1.3%0A%21%5BAlt%20text%5D%28./1479364063295.png%29%0A%0A%u8FD9%u4E2A%u7248%u672C%u4E0E%u5916%u90E8%u7684%20mongodb%20%u5E93%202.2.x%20%20%u7248%u672C%u6709%u51B2%u7A81%uFF0C%u770B%u6765%20mongodb%20%u8FD9%u4E2A%u5E93%u5728%202.2.x%20%u5347%u7EA7%u4E86%u67D0%u4E9B%u4E1C%u897F%uFF0C%u6211%u4EEC%u8FDB%u4E00%u6B65%u8FFD%u67E5%uFF0C%u6839%u636E%u62A5%u9519%u4FE1%u606F%u53EF%u4EE5%u5B9A%u4F4D%u62A5%u9519%u7684%u4EE3%u7801%0A%0A%3E%20at%20serializeObjectId%0A%3E%20%28node_modules/sails-mongo/node_modules/bson/lib/bson/parser/serializer.js%3A242%3A10%29%0A%0A%u770B%u6765%u662F%20bson%20%u8FD9%u4E2A%u5E93%u91CC%u6709%u95EE%u9898%uFF0C%u8FD9%u4E2A%u662F%20sails-mongo%20%20%u91CC%u7684%20bson%uFF080.4.23%uFF09%20%u7684%u4EE3%u7801%u7684%u62A5%u9519%u4F4D%u7F6E%0A%21%5BAlt%20text%5D%28./1479364537291.png%29%0A%0A%u5728%20242%20%u884C%u52A0%u4E0A%u65AD%u70B9%uFF0C%u53EF%u4EE5%u770B%u5230%20value%20%u8FD9%u4E2A%u53D8%u91CF%u7684%u60C5%u51B5%uFF1A%0A%21%5BAlt%20text%5D%28./1479365009575.png%29%0A%0A%u800C%20mongodb%20%u91CC%u5F15%u7528%u7684%20bson%uFF080.5.6%uFF09%20%u7684%u6B64%u5904%u4EE3%u7801%u662F%u8FD9%u6837%u7684%0A%21%5BAlt%20text%5D%28./1479365570507.png%29%0A%0A%u52A0%u65AD%u70B9%u770B%u5230%u7684%u53D8%u91CF%u60C5%u51B5%uFF1A%0A%21%5BAlt%20text%5D%28./1479365002888.png%29%0A%0A%u770B%u6765%u662F%20ObjectID%20%u7684%u7C7B%u578B%u53D8%u4E86%uFF0C%20%u7531%u4E4B%u524D%u7684%20String%20%u53D8%u6210%u4E86%20Uint8Array%20%uFF0C%u8FD9%u4E5F%u5C31%u5951%u5408%u4E86%u62A5%u9519%u4FE1%u606F%u91CC%u7684%20%u201CTypeError%3A%20Argument%20must%20be%20a%20string%u201D%uFF0C%20%u8FD9%u5C31%u662F%u95EE%u9898%u7684%u6839%u6E90%u3002%0A%0A%0A%23%23%u603B%u7ED3%0A%u8FD9%u4E2A%u95EE%u9898%u521D%u770B%u597D%u50CF%u662F%20npm%20%u5305%u7248%u672C%u5BFC%u81F4%u7684%u51B2%u7A81%uFF08NPM%20%u5176%u5B9E%u5DF2%u7ECF%u5904%u7406%u597D%u4E86%u4E0D%u540C%u7248%u672C%u7684%u4F9D%u8D56%u95EE%u9898%uFF09%uFF0C%u4F46%u662F%u5B9E%u9645%u4E0A%u662F%u4EE3%u7801%u5E94%u7528%u5C42%u4F7F%u7528%u4E0D%u5F53%u5BFC%u81F4%u7684%u95EE%u9898%uFF0C%u6839%u636E%20issue%20%u63D0%u4F9B%u7684%u89E3%u51B3%u65B9%u6848%uFF0C%u8981%u83B7%u53D6%20ObjectID%20%u5BF9%u8C61%uFF0C%u5E94%u8BE5%u4F7F%u7528%20sails-mongo%20%20%u6765%u63D0%u4F9B%u8FD9%u4E2A%u5BF9%u8C61%uFF1A%0A%20%0A%0A%60%60%60%0Aconst%20ObjectId%20%3D%20require%28%27sails-mongo%27%29.mongo.objectId%0A%60%60%60%0A%0A%u800C%u4E0D%u662F%u4ECE%u5916%u90E8%u83B7%u53D6%uFF1A%0A%0A%60%60%60%0Avar%20ObjectId%20%3D%20require%28%27mongodb%27%29.ObjectID%3B%0A%60%60%60%0A%0A%0A%u5176%u5B9E%u662F%u4E0D%u662F%u53EF%u4EE5%u8BF4%u662F%20sails-mogno%20%20%u5751%uFF1F%0A%0A%0A----------%0A11/18%u65E5%u66F4%u65B0%uFF1A%0A%u54C8%u54C8%u54C8%uFF0C%20sails-mogno%20%u679C%u7136%u662F%u5751%uFF0C%u770B%u770B%u5B83%u63D0%u4F9B%u7684%20objectId%20%u7684%u5B9E%u73B0%uFF1A%0A%21%5BAlt%20text%5D%28./1479455064688.png%29%0A%0A%u5982%u679C%u4F60%u60F3%u8981%u751F%u6210%u4E00%u4E2A%u65B0%u7684%20ObjectID%uFF0C%u8FD9%u6837%u5199%u7684%u8BDD%0A%0A%60%60%60%0Avar%20id%20%3D%20ObejctId%28%29%0A%60%60%60%0A%0A%u4F60%u5C06%u5F97%u5230%u4E00%u4E2A%20null%20%21%0A%u65E0%u8BED%u5462%uFF0C%u6240%u4EE5%u5462%uFF0C%u8FD8%u662F%u8981%u8FD9%u6837%u5F15%u7528%u624D%u884C%uFF1A%0A%0A%60%60%60%0Avar%20ObjectID%20%3D%20require%28%27sails-mongo/node_modules/mongodb%27%29.ObjectID%3B%0A%60%60%60%0A%0A</center>"
  },
  {
    "title": "博客迁移到新浪 SAE",
    "created": "2016-10-12T01:24:09.000Z",
    "updated": "2016-11-01T23:03:25.000Z",
    "tags": [
      "posts",
      "杂谈"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=6403fa2a-0599-4f22-8baf-36ae957ff3c6&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n### 博客迁移到新浪 SAE\n\n今日把博客迁移到了新浪 SAE，得益于使用 Evernote+同步 的方式来写文章，迁移非常简单，在 SAE 上搭建好了 WordPress 后吗，所有文章一键就同步过来了。\n\n#### 迁移博客的原因\n\n主要原因是阿里云比较贵。  \n之前博客一直托管在阿里云上，买了个云主机自己搭建 WordPress，但是 WordPress 不怎么稳定，总是会莫名挂掉，又没兴致去折腾 PHP 的东西，所以也一直没找到原因。  \n而且这个云主机除了跑个 WordPress 也就没做其他事情了。虽然一直月只需要50，但是觉得浪费啊。\n\n换到 SAE后，只是租用一个 PHP 空间来跑 WordPress，网络按量计费，因为博客没什么浏览量，倒也不需要多少费用（哭笑不得~）。  \n�� �� ��\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u6742%u8C08%5D%0A%23%23%23%u535A%u5BA2%u8FC1%u79FB%u5230%u65B0%u6D6A%20SAE%0A%0A%u4ECA%u65E5%u628A%u535A%u5BA2%u8FC1%u79FB%u5230%u4E86%u65B0%u6D6A%20SAE%uFF0C%u5F97%u76CA%u4E8E%u4F7F%u7528%20Evernote+%u540C%u6B65%20%u7684%u65B9%u5F0F%u6765%u5199%u6587%u7AE0%uFF0C%u8FC1%u79FB%u975E%u5E38%u7B80%u5355%uFF0C%u5728%20SAE%20%u4E0A%u642D%u5EFA%u597D%u4E86%20WordPress%20%u540E%u5417%uFF0C%u6240%u6709%u6587%u7AE0%u4E00%u952E%u5C31%u540C%u6B65%u8FC7%u6765%u4E86%u3002%0A%0A%23%23%23%23%u8FC1%u79FB%u535A%u5BA2%u7684%u539F%u56E0%0A%u4E3B%u8981%u539F%u56E0%u662F%u963F%u91CC%u4E91%u6BD4%u8F83%u8D35%u3002%0A%u4E4B%u524D%u535A%u5BA2%u4E00%u76F4%u6258%u7BA1%u5728%u963F%u91CC%u4E91%u4E0A%uFF0C%u4E70%u4E86%u4E2A%u4E91%u4E3B%u673A%u81EA%u5DF1%u642D%u5EFA%20WordPress%uFF0C%u4F46%u662F%20WordPress%20%u4E0D%u600E%u4E48%u7A33%u5B9A%uFF0C%u603B%u662F%u4F1A%u83AB%u540D%u6302%u6389%uFF0C%u53C8%u6CA1%u5174%u81F4%u53BB%u6298%u817E%20PHP%20%u7684%u4E1C%u897F%uFF0C%u6240%u4EE5%u4E5F%u4E00%u76F4%u6CA1%u627E%u5230%u539F%u56E0%u3002%0A%u800C%u4E14%u8FD9%u4E2A%u4E91%u4E3B%u673A%u9664%u4E86%u8DD1%u4E2A%20WordPress%20%u4E5F%u5C31%u6CA1%u505A%u5176%u4ED6%u4E8B%u60C5%u4E86%u3002%u867D%u7136%u4E00%u76F4%u6708%u53EA%u9700%u898150%uFF0C%u4F46%u662F%u89C9%u5F97%u6D6A%u8D39%u554A%u3002%0A%0A%0A%u6362%u5230%20SAE%u540E%uFF0C%u53EA%u662F%u79DF%u7528%u4E00%u4E2A%20PHP%20%u7A7A%u95F4%u6765%u8DD1%20WordPress%uFF0C%u7F51%u7EDC%u6309%u91CF%u8BA1%u8D39%uFF0C%u56E0%u4E3A%u535A%u5BA2%u6CA1%u4EC0%u4E48%u6D4F%u89C8%u91CF%uFF0C%u5012%u4E5F%u4E0D%u9700%u8981%u591A%u5C11%u8D39%u7528%uFF08%u54ED%u7B11%u4E0D%u5F97%7E%uFF09%u3002%0A%uD83D%uDE02%20%20%20%uD83D%uDE02%20%20%20%uD83D%uDE02%20%20</center>"
  },
  {
    "title": "大家一起来 Leetcode",
    "created": "2016-08-27T23:03:30.000Z",
    "updated": "2016-08-27T23:07:21.000Z",
    "tags": [
      "编程相关",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=4e393290-dade-446e-96c9-dc4715999450&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# 大家一起来 Leetcode\n\nLeetcode 是一个提供 Online Judge 服务的网站，里面的题目都是一些经典的公司用来面试应聘者的面试题。  \n除了应付面试，很多人想要锻炼自己的算法和编程能力时也会选择在 Leetcode 上刷题。\n\n[https://leetcode.com/](https://leetcode.com/)\n\n## LeetCode的题大致分成两类：\n\n### 1）基础算法的知识\n\n这些题里面有大量的算法题，解这些题一般有以下套路：\n\n*   递归（深度优先DFS，广度优先BFS）\n*   动态规划（Dynamic Programming）\n*   拆半查找（Binary Search）\n*   回溯（Back tracing）\n*   分治法（Divide and Conquer）\n*   还有大量的对树，数组、链表、字符串和hash表的操作。\n\n通过做这些题能让你对这些最基础的算法的思路有非常扎实的了解和训练。\n\n### 2）编程题\n\n比如：atoi，strstr，add two num，括号匹配，字符串乘法，通配符匹配，文件路径简化，Text Justification，反转单词等等，这些题的Edge Case, Corner Case有很多。这些题需要你想清楚了再干，只要你稍有疏忽，就会有几个case让你痛不欲生，而且一不小心就会让你的代码会写得又臭又长，无法阅读。通过做这些题，可以非常好的训练你对各种情况的考虑，以及你对程序代码组织的掌控（其实就是其中的状态变量）。\n\n## 做个题体验一下吧\n\n### 挑个题目\n\n反转二叉树 [Invert Binary Tree](https://leetcode.com/problems/invert-binary-tree/)  \n关于这道题还有个有趣的小故事：  \nHomebrew 的作者去 Google 面试，因为没有在白板上做出这道题所以没通过面试。\n\n<en-media longdesc=\"./1472367005660.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"bd696091b22a2d3628ea3353a254af40\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### 准备测试数据\n\nLeetCode 支持自定义测试数据，在准备二叉树的测试数据时，你可以这样写：  \n`[5,4,7,3,null,2,null,-1,null,9]`  \n对应的 二叉树是：\n\n     5 / \\ 4 7 / / 3 2 / / -1 9\n\n文档： [https://leetcode.com/faq/#binary-tree](https://leetcode.com/faq/#binary-tree)\n\n### 写代码\n\n这道题的一般思路是用使用递归，这个给一个 Python 的 版本：\n\n    # Definition for a binary tree node.# class TreeNode(object):# def __init__(self, x):# self.val = x# self.left = None# self.right = Noneclass Solution(object): def invertTree(self, root): \"\"\" :type root: TreeNode :rtype: TreeNode \"\"\" if (root == None): return None temp = self.invertTree(root.left) root.left = self.invertTree(root.right) root.right = temp return root\n\n### 查看结果\n\n如果代码没有通过所有 Case， LeetCode 会明确地告诉你哪一个 Case 没有通过。\n\n如果代码通过了所有 Case , 你还可以查看 More Detail\n\n<en-media longdesc=\"./1472367729401.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"a48469d15601dfbc24a9845afca487a9\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n <en-media longdesc=\"./1472367768868.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"4063d6c61005b8b891bc667e15e8608a\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">可以看到在使用同类语言的代码中，你的代码耗时在哪一个阶段。  \n这一次的成绩还不错，比其他 80% 的人要快。</en-media>\n\n## 收获？\n\n有人分享了他的收获：[Leetcode 编程训练](http://coolshell.cn/articles/12052.html)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u7F16%u7A0B%u76F8%u5173%5D%0A%23%u5927%u5BB6%u4E00%u8D77%u6765%20Leetcode%0A%0ALeetcode%20%u662F%u4E00%u4E2A%u63D0%u4F9B%20Online%20Judge%20%20%u670D%u52A1%u7684%u7F51%u7AD9%uFF0C%u91CC%u9762%u7684%u9898%u76EE%u90FD%u662F%u4E00%u4E9B%u7ECF%u5178%u7684%u516C%u53F8%u7528%u6765%u9762%u8BD5%u5E94%u8058%u8005%u7684%u9762%u8BD5%u9898%u3002%0A%u9664%u4E86%u5E94%u4ED8%u9762%u8BD5%uFF0C%u5F88%u591A%u4EBA%u60F3%u8981%u953B%u70BC%u81EA%u5DF1%u7684%u7B97%u6CD5%u548C%u7F16%u7A0B%u80FD%u529B%u65F6%u4E5F%u4F1A%u9009%u62E9%u5728%20%20Leetcode%20%20%u4E0A%u5237%u9898%u3002%0A%0Ahttps%3A//leetcode.com/%0A%0A%23%23LeetCode%u7684%u9898%u5927%u81F4%u5206%u6210%u4E24%u7C7B%uFF1A%0A%0A%23%23%231%uFF09%u57FA%u7840%u7B97%u6CD5%u7684%u77E5%u8BC6%0A%u8FD9%u4E9B%u9898%u91CC%u9762%u6709%u5927%u91CF%u7684%u7B97%u6CD5%u9898%uFF0C%u89E3%u8FD9%u4E9B%u9898%u4E00%u822C%u6709%u4EE5%u4E0B%u5957%u8DEF%uFF1A%0A-%20%u9012%u5F52%uFF08%u6DF1%u5EA6%u4F18%u5148DFS%uFF0C%u5E7F%u5EA6%u4F18%u5148BFS%uFF09%0A-%20%u52A8%u6001%u89C4%u5212%uFF08Dynamic%20Programming%uFF09%0A-%20%u62C6%u534A%u67E5%u627E%uFF08Binary%20Search%uFF09%0A-%20%u56DE%u6EAF%uFF08Back%20tracing%uFF09%0A-%20%u5206%u6CBB%u6CD5%uFF08Divide%20and%20Conquer%uFF09%0A-%20%u8FD8%u6709%u5927%u91CF%u7684%u5BF9%u6811%uFF0C%u6570%u7EC4%u3001%u94FE%u8868%u3001%u5B57%u7B26%u4E32%u548Chash%u8868%u7684%u64CD%u4F5C%u3002%0A%0A%u901A%u8FC7%u505A%u8FD9%u4E9B%u9898%u80FD%u8BA9%u4F60%u5BF9%u8FD9%u4E9B%u6700%u57FA%u7840%u7684%u7B97%u6CD5%u7684%u601D%u8DEF%u6709%u975E%u5E38%u624E%u5B9E%u7684%u4E86%u89E3%u548C%u8BAD%u7EC3%u3002%0A%0A%23%23%232%uFF09%u7F16%u7A0B%u9898%0A%u6BD4%u5982%uFF1Aatoi%uFF0Cstrstr%uFF0Cadd%20two%20num%uFF0C%u62EC%u53F7%u5339%u914D%uFF0C%u5B57%u7B26%u4E32%u4E58%u6CD5%uFF0C%u901A%u914D%u7B26%u5339%u914D%uFF0C%u6587%u4EF6%u8DEF%u5F84%u7B80%u5316%uFF0CText%20Justification%uFF0C%u53CD%u8F6C%u5355%u8BCD%u7B49%u7B49%uFF0C%u8FD9%u4E9B%u9898%u7684Edge%20Case%2C%20Corner%20Case%u6709%u5F88%u591A%u3002%u8FD9%u4E9B%u9898%u9700%u8981%u4F60%u60F3%u6E05%u695A%u4E86%u518D%u5E72%uFF0C%u53EA%u8981%u4F60%u7A0D%u6709%u758F%u5FFD%uFF0C%u5C31%u4F1A%u6709%u51E0%u4E2Acase%u8BA9%u4F60%u75DB%u4E0D%u6B32%u751F%uFF0C%u800C%u4E14%u4E00%u4E0D%u5C0F%u5FC3%u5C31%u4F1A%u8BA9%u4F60%u7684%u4EE3%u7801%u4F1A%u5199%u5F97%u53C8%u81ED%u53C8%u957F%uFF0C%u65E0%u6CD5%u9605%u8BFB%u3002%u901A%u8FC7%u505A%u8FD9%u4E9B%u9898%uFF0C%u53EF%u4EE5%u975E%u5E38%u597D%u7684%u8BAD%u7EC3%u4F60%u5BF9%u5404%u79CD%u60C5%u51B5%u7684%u8003%u8651%uFF0C%u4EE5%u53CA%u4F60%u5BF9%u7A0B%u5E8F%u4EE3%u7801%u7EC4%u7EC7%u7684%u638C%u63A7%uFF08%u5176%u5B9E%u5C31%u662F%u5176%u4E2D%u7684%u72B6%u6001%u53D8%u91CF%uFF09%u3002%0A%0A%23%23%u505A%u4E2A%u9898%u4F53%u9A8C%u4E00%u4E0B%u5427%0A%23%23%23%u6311%u4E2A%u9898%u76EE%0A%u53CD%u8F6C%u4E8C%u53C9%u6811%20%5BInvert%20Binary%20Tree%5D%28https%3A//leetcode.com/problems/invert-binary-tree/%29%0A%u5173%u4E8E%u8FD9%u9053%u9898%u8FD8%u6709%u4E2A%u6709%u8DA3%u7684%u5C0F%u6545%u4E8B%uFF1A%0AHomebrew%20%u7684%u4F5C%u8005%u53BB%20Google%20%u9762%u8BD5%uFF0C%u56E0%u4E3A%u6CA1%u6709%u5728%u767D%u677F%u4E0A%u505A%u51FA%u8FD9%u9053%u9898%u6240%u4EE5%u6CA1%u901A%u8FC7%u9762%u8BD5%u3002%0A%21%5BAlt%20text%5D%28./1472367005660.png%29%0A%0A%23%23%23%20%u51C6%u5907%u6D4B%u8BD5%u6570%u636E%0ALeetCode%20%u652F%u6301%u81EA%u5B9A%u4E49%u6D4B%u8BD5%u6570%u636E%uFF0C%u5728%u51C6%u5907%u4E8C%u53C9%u6811%u7684%u6D4B%u8BD5%u6570%u636E%u65F6%uFF0C%u4F60%u53EF%u4EE5%u8FD9%u6837%u5199%uFF1A%0A%60%5B5%2C4%2C7%2C3%2Cnull%2C2%2Cnull%2C-1%2Cnull%2C9%5D%60%0A%u5BF9%u5E94%u7684%20%u4E8C%u53C9%u6811%u662F%uFF1A%0A%0A%60%60%60%0A%09%20%20%205%0A%20%20%20%20%20%20/%20%5C%0A%20%20%20%20%204%20%20%207%0A%20%20%20%20/%20%20%20/%0A%20%20%203%20%20%202%0A%20%20/%20%20%20/%0A%20-1%20%209%0A%60%60%60%0A%0A%u6587%u6863%uFF1A%20https%3A//leetcode.com/faq/%23binary-tree%0A%0A%23%23%23%u5199%u4EE3%u7801%0A%u8FD9%u9053%u9898%u7684%u4E00%u822C%u601D%u8DEF%u662F%u7528%u4F7F%u7528%u9012%u5F52%uFF0C%u8FD9%u4E2A%u7ED9%u4E00%u4E2A%20Python%20%u7684%20%u7248%u672C%uFF1A%0A%0A%60%60%60%0A%23%20Definition%20for%20a%20binary%20tree%20node.%0A%23%20class%20TreeNode%28object%29%3A%0A%23%20%20%20%20%20def%20__init__%28self%2C%20x%29%3A%0A%23%20%20%20%20%20%20%20%20%20self.val%20%3D%20x%0A%23%20%20%20%20%20%20%20%20%20self.left%20%3D%20None%0A%23%20%20%20%20%20%20%20%20%20self.right%20%3D%20None%0A%0Aclass%20Solution%28object%29%3A%0A%20%20%20%20def%20invertTree%28self%2C%20root%29%3A%0A%20%20%20%20%20%20%20%20%22%22%22%0A%20%20%20%20%20%20%20%20%3Atype%20root%3A%20TreeNode%0A%20%20%20%20%20%20%20%20%3Artype%3A%20TreeNode%0A%20%20%20%20%20%20%20%20%22%22%22%0A%20%20%20%20%20%20%20%20if%20%28root%20%3D%3D%20None%29%3A%20return%20None%0A%20%20%20%20%20%20%20%20temp%20%3D%20self.invertTree%28root.left%29%0A%20%20%20%20%20%20%20%20root.left%20%3D%20self.invertTree%28root.right%29%0A%20%20%20%20%20%20%20%20root.right%20%3D%20temp%0A%20%20%20%20%20%20%20%20return%20root%0A%60%60%60%0A%0A%23%23%23%20%u67E5%u770B%u7ED3%u679C%0A%u5982%u679C%u4EE3%u7801%u6CA1%u6709%u901A%u8FC7%u6240%u6709%20Case%uFF0C%20LeetCode%20%u4F1A%u660E%u786E%u5730%u544A%u8BC9%u4F60%u54EA%u4E00%u4E2A%20Case%20%u6CA1%u6709%u901A%u8FC7%u3002%0A%0A%0A%u5982%u679C%u4EE3%u7801%u901A%u8FC7%u4E86%u6240%u6709%20Case%20%2C%20%20%u4F60%u8FD8%u53EF%u4EE5%u67E5%u770B%20More%20Detail%0A%21%5BAlt%20text%5D%28./1472367729401.png%29%0A%21%5BAlt%20text%5D%28./1472367768868.png%29%0A%u53EF%u4EE5%u770B%u5230%u5728%u4F7F%u7528%u540C%u7C7B%u8BED%u8A00%u7684%u4EE3%u7801%u4E2D%uFF0C%u4F60%u7684%u4EE3%u7801%u8017%u65F6%u5728%u54EA%u4E00%u4E2A%u9636%u6BB5%u3002%0A%u8FD9%u4E00%u6B21%u7684%u6210%u7EE9%u8FD8%u4E0D%u9519%uFF0C%u6BD4%u5176%u4ED6%2080%25%20%u7684%u4EBA%u8981%u5FEB%u3002%0A%0A%0A%23%23%u6536%u83B7%uFF1F%0A%u6709%u4EBA%u5206%u4EAB%u4E86%u4ED6%u7684%u6536%u83B7%uFF1A%5BLeetcode%20%u7F16%u7A0B%u8BAD%u7EC3%5D%28http%3A//coolshell.cn/articles/12052.html%29%20</center>"
  },
  {
    "title": "使用 Jenkins 给 GIT 自动打 Tag",
    "created": "2016-07-14T01:20:16.000Z",
    "updated": "2016-07-19T18:57:54.000Z",
    "tags": [
      "持续集成",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=603e0df4-982a-4716-8698-504518f990a5&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n## 使用 Jenkins 给 GIT 自动打 Tag\n\n为了方便回滚代码，想给每次 Release 的代码打个 Tag。  \n希望可以在每次代码提交到 master 分支后就能够自动 tag。\n\n这里介绍下使用 Jenkins 来实现这个自动打 Tag 的功能，主要是通过 **GIT Publisher** 这个插件来实现的。阅读下文之前，你需要安装好 Jenkins 以及 GIT Publisher 这个插件。\n\n### 配置 Jenkins\n\n#### 配置 git 仓库的信息\n\n填好仓库地址以及用户名密码\n\n<en-media longdesc=\"./1468486478980.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"f95e3b4a19b955e4ca2027f3337a8d08\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### 配置 GIT Publisher\n\n配置好 git 仓库信息后，滚动到 Jenkins 的 配置页面最下方，找到 GIT Publisher 这个插件， 开始配置， 你可以看到下图。\n\n<en-media longdesc=\"./1468486797592.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"6e813cd7a59fa5013ae38e73374f8a80\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n点击 “Add Tag”\n\n<en-media longdesc=\"./1468486844298.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"c139bcdf4d818c7557b12bc3cb9531fd\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n“Tag to Push”. 这个设置是指本次要打的 Tag 的名称。上图的例子中使用了 “BUILD_ID” 这个 Jenkins 提供的环境变量，最终打出的 Tag 会类似于 TAG-23。\n\n注意：记得勾选 “Create new Tag”。\n\n#### 自定义 Tag 名称\n\n上文提到的 Tag 名称， 类似于 ” TAG-23”，并不能满足我的需求，我希望能使用日期+时间来定义 Tag 的名称，这样看起来就很清晰了，要实现这个，我们需要另一个插件的帮助。  \nBUILD_TIMESTAMP 这个插件提供一个环境变量，它使用了 Java 的日期 format 格式。安装好这个插件，在 Jenkins 配置页面的顶部可以看到它的配置。\n\n<en-media longdesc=\"./1468487682874.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"b57586dad581a4bafa38984c2f883606\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n在配置项里填入自己想要的日期格式：`yyyyMMdd-HHmmss`\n\n然后在 Add Tag 配置里的 “Tag to Push” 项里使用这个环境变量就好啦。\n\n<en-media longdesc=\"./1468487792538.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"bb4f5d9e24b695ea17f85777945dbb87\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### 其他功能\n\nGIT Publisher 处理提供 Add Tag 功能，还提供以下两个功能：  \nAdd Branch  \nAdd Note  \n你可以根据自己的需要进行配置。\n\n<en-media longdesc=\"./1468487434661.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"816473e26ce3b477be1a07fd2b4e91fc\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### 触发 Jenkins\n\n上文的设置是没有提到如何在提交代码时触发 Jenkins 的 Build 的，这一块的可以看看这篇文章：  \n[使用-git-hooks-触发-jenkins-构建任务](http://myfjdthink.com/2016/07/14/%E4%BD%BF%E7%94%A8-git-hooks-%E8%A7%A6%E5%8F%91-jenkins-%E6%9E%84%E5%BB%BA%E4%BB%BB%E5%8A%A1/)\n\n### 参考文章\n\n[http://www.benhallbenhall.com/2013/03/hudson-jenkins-create-git-tags-branches-automatically/](http://www.benhallbenhall.com/2013/03/hudson-jenkins-create-git-tags-branches-automatically/)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u6301%u7EED%u96C6%u6210%5D%0A%0A%23%23%u4F7F%u7528%20Jenkins%20%u7ED9%20GIT%20%u81EA%u52A8%u6253%20Tag%0A%u4E3A%u4E86%u65B9%u4FBF%u56DE%u6EDA%u4EE3%u7801%uFF0C%u60F3%u7ED9%u6BCF%u6B21%20Release%20%u7684%u4EE3%u7801%u6253%u4E2A%20Tag%u3002%0A%u5E0C%u671B%u53EF%u4EE5%u5728%u6BCF%u6B21%u4EE3%u7801%u63D0%u4EA4%u5230%20master%20%u5206%u652F%u540E%u5C31%u80FD%u591F%u81EA%u52A8%20tag%u3002%0A%0A%0A%u8FD9%u91CC%u4ECB%u7ECD%u4E0B%u4F7F%u7528%20Jenkins%20%u6765%u5B9E%u73B0%u8FD9%u4E2A%u81EA%u52A8%u6253%20Tag%20%u7684%u529F%u80FD%uFF0C%u4E3B%u8981%u662F%u901A%u8FC7%20**GIT%20Publisher**%20%u8FD9%u4E2A%u63D2%u4EF6%u6765%u5B9E%u73B0%u7684%u3002%u9605%u8BFB%u4E0B%u6587%u4E4B%u524D%uFF0C%u4F60%u9700%u8981%u5B89%u88C5%u597D%20Jenkins%20%u4EE5%u53CA%20GIT%20Publisher%20%u8FD9%u4E2A%u63D2%u4EF6%u3002%0A%0A%23%23%23%20%u914D%u7F6E%20Jenkins%0A%0A%23%23%23%23%20%u914D%u7F6E%20git%20%u4ED3%u5E93%u7684%u4FE1%u606F%0A%u586B%u597D%u4ED3%u5E93%u5730%u5740%u4EE5%u53CA%u7528%u6237%u540D%u5BC6%u7801%0A%21%5BAlt%20text%5D%28./1468486478980.png%29%0A%0A%23%23%23%23%20%u914D%u7F6E%20GIT%20Publisher%20%0A%u914D%u7F6E%u597D%20git%20%u4ED3%u5E93%u4FE1%u606F%u540E%uFF0C%u6EDA%u52A8%u5230%20Jenkins%20%u7684%20%u914D%u7F6E%u9875%u9762%u6700%u4E0B%u65B9%uFF0C%u627E%u5230%20GIT%20Publisher%20%u8FD9%u4E2A%u63D2%u4EF6%uFF0C%20%u5F00%u59CB%u914D%u7F6E%uFF0C%20%u4F60%u53EF%u4EE5%u770B%u5230%u4E0B%u56FE%u3002%0A%0A%21%5BAlt%20text%5D%28./1468486797592.png%29%0A%0A%0A%u70B9%u51FB%20%20%u201CAdd%20Tag%u201D%20%0A%0A%0A%21%5BAlt%20text%5D%28./1468486844298.png%29%0A%0A%u201CTag%20to%20Push%u201D.%20%20%u8FD9%u4E2A%u8BBE%u7F6E%u662F%u6307%u672C%u6B21%u8981%u6253%u7684%20Tag%20%u7684%u540D%u79F0%u3002%u4E0A%u56FE%u7684%u4F8B%u5B50%u4E2D%u4F7F%u7528%u4E86%20%22BUILD_ID%u201D%20%u8FD9%u4E2A%20Jenkins%20%u63D0%u4F9B%u7684%u73AF%u5883%u53D8%u91CF%uFF0C%u6700%u7EC8%u6253%u51FA%u7684%20Tag%20%u4F1A%u7C7B%u4F3C%u4E8E%20TAG-23%u3002%0A%0A%0A%u6CE8%u610F%uFF1A%u8BB0%u5F97%u52FE%u9009%20%20%u201CCreate%20new%20Tag%u201D%u3002%0A%0A%23%23%23%23%20%u81EA%u5B9A%u4E49%20Tag%20%u540D%u79F0%0A%u4E0A%u6587%u63D0%u5230%u7684%20Tag%20%u540D%u79F0%uFF0C%20%u7C7B%u4F3C%u4E8E%20%u201D%20TAG-23%u201D%uFF0C%u5E76%u4E0D%u80FD%u6EE1%u8DB3%u6211%u7684%u9700%u6C42%uFF0C%u6211%u5E0C%u671B%u80FD%u4F7F%u7528%u65E5%u671F+%u65F6%u95F4%u6765%u5B9A%u4E49%20Tag%20%u7684%u540D%u79F0%uFF0C%u8FD9%u6837%u770B%u8D77%u6765%u5C31%u5F88%u6E05%u6670%u4E86%uFF0C%u8981%u5B9E%u73B0%u8FD9%u4E2A%uFF0C%u6211%u4EEC%u9700%u8981%u53E6%u4E00%u4E2A%u63D2%u4EF6%u7684%u5E2E%u52A9%u3002%0ABUILD_TIMESTAMP%20%u8FD9%u4E2A%u63D2%u4EF6%u63D0%u4F9B%u4E00%u4E2A%u73AF%u5883%u53D8%u91CF%uFF0C%u5B83%u4F7F%u7528%u4E86%20Java%20%u7684%u65E5%u671F%20format%20%u683C%u5F0F%u3002%u5B89%u88C5%u597D%u8FD9%u4E2A%u63D2%u4EF6%uFF0C%u5728%20Jenkins%20%u914D%u7F6E%u9875%u9762%u7684%u9876%u90E8%u53EF%u4EE5%u770B%u5230%u5B83%u7684%u914D%u7F6E%u3002%0A%0A%21%5BAlt%20text%5D%28./1468487682874.png%29%0A%0A%u5728%u914D%u7F6E%u9879%u91CC%u586B%u5165%u81EA%u5DF1%u60F3%u8981%u7684%u65E5%u671F%u683C%u5F0F%uFF1A%60yyyyMMdd-HHmmss%60%0A%0A%u7136%u540E%u5728%20Add%20Tag%20%u914D%u7F6E%u91CC%u7684%20%u201CTag%20to%20Push%u201D%20%u9879%u91CC%u4F7F%u7528%u8FD9%u4E2A%u73AF%u5883%u53D8%u91CF%u5C31%u597D%u5566%u3002%0A%0A%21%5BAlt%20text%5D%28./1468487792538.png%29%0A%0A%23%23%23%23%20%u5176%u4ED6%u529F%u80FD%0AGIT%20Publisher%20%u5904%u7406%u63D0%u4F9B%20Add%20Tag%20%u529F%u80FD%uFF0C%u8FD8%u63D0%u4F9B%u4EE5%u4E0B%u4E24%u4E2A%u529F%u80FD%uFF1A%0AAdd%20Branch%0AAdd%20Note%0A%u4F60%u53EF%u4EE5%u6839%u636E%u81EA%u5DF1%u7684%u9700%u8981%u8FDB%u884C%u914D%u7F6E%u3002%0A%21%5BAlt%20text%5D%28./1468487434661.png%29%0A%0A%0A%23%23%23%23%20%u89E6%u53D1%20Jenkins%0A%u4E0A%u6587%u7684%u8BBE%u7F6E%u662F%u6CA1%u6709%u63D0%u5230%u5982%u4F55%u5728%u63D0%u4EA4%u4EE3%u7801%u65F6%u89E6%u53D1%20Jenkins%20%u7684%20Build%20%u7684%uFF0C%u8FD9%u4E00%u5757%u7684%u53EF%u4EE5%u770B%u770B%u8FD9%u7BC7%u6587%u7AE0%uFF1A%0A%5B%u4F7F%u7528-git-hooks-%u89E6%u53D1-jenkins-%u6784%u5EFA%u4EFB%u52A1%5D%28http%3A//myfjdthink.com/2016/07/14/%25E4%25BD%25BF%25E7%2594%25A8-git-hooks-%25E8%25A7%25A6%25E5%258F%2591-jenkins-%25E6%259E%2584%25E5%25BB%25BA%25E4%25BB%25BB%25E5%258A%25A1/%29%0A%0A%23%23%23%20%u53C2%u8003%u6587%u7AE0%0A%0Ahttp%3A//www.benhallbenhall.com/2013/03/hudson-jenkins-create-git-tags-branches-automatically/</center>"
  },
  {
    "title": "使用 Git Hooks 触发 Jenkins 构建任务",
    "created": "2016-07-14T02:18:39.000Z",
    "updated": "2016-07-19T18:57:36.000Z",
    "tags": [
      "持续集成",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=aa900e51-19cd-497c-9da6-9fa5acf1fc73&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n## 使用 Git Hooks 触发 Jenkins 构建任务\n\n使用 Jenkins 构建任务的时候，很多任务需要根据 git 来触发。例如代码 push 到某分支后就触发 Jenkins 的集成测试。\n\n下面介绍几种 Git 触发 Jenkins 的方式。\n\n### Git Hooks 触发\n\nGit Hooks，即钩子，关于 Git Hooks 的详细信息，可以看看[官方文档](https://git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90)\n\n在 Jenkins 的配置页面，勾选 `Trigger builds remotely` 开启 Jenkins 的远程调用功能。\n\n<en-media longdesc=\"./1468489265899.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"3dc828f239a96f9411be784daeab49c5\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n然后编辑服务器仓库中 jenkins-tutorial.git/hooks 中的 post-update，里面调用这两个链接中的一个即可达到通知 Jenkins 构建任务的目的。该钩子脚本将在代码提交到服务器仓库后执行。\n\n### Jenkins 提供的监听方式\n\n在 Jenkins 的 Build Triggers 配置页面，我们可以看到如下的配置项：\n\n<en-media longdesc=\"./1468489826359.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"626553c97fefea4dfd2f3ec293d126f1\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\nJenkins 可以监听 Github 或者 GitLab 的事件，也可以通过轮询的方式来检查代码是否有更新。\n\n#### 轮询\n\n轮询的方式就是定时去访问 git 仓库，检查是否有更新，这个方式太傻这里就不细说了。\n\n#### Web Hooks\n\n介绍一下 Jenkins 是怎么监听 Github 和 Gitlab 的吧。\n\n他们主要是通过 Web Hooks 来实现触发的，Github 和 Gitlab 都支持 Webhooks 这个功能，简单来说就是在有更新事件时会调用你配置好的 URL，并把相关的信息 POST 过来。详细可以见文档：[Github Webhooks](https://developer.github.com/webhooks/) 、 [Gitlab Webhooks](https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/web_hooks/web_hooks.md)\n\n#### GitLab 的监听配置\n\nGIthub 的监听比较简单，勾选了就可以，这里不再细说。\n\nGitlab 的配置选项就比较丰富了。\n\n<en-media longdesc=\"./1468491422766.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"e53daf4ad2c3fc5ba71e508cf0024d19\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n在勾选了该选项后，我们就得到一个地址，这个地址就是接收 Gitlab 的 Webhooks 用的。去到 Gitlab 的 Webhooks 配置页面填上这个地址就行啦。\n\n<en-media longdesc=\"./1468491196821.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"1cd07fe18806815e90ab3c8c97a7dadc\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### 批评一下 git.oschina\n\n开源中国提供了个免费的 git 托管服务 [https://git.oschina.net/](https://git.oschina.net/) ，虽然这个服务是基于 Gitlab 框架修改的，但是它居然把 Webhooks 的 post 数据格式给改了。。。  \n后果就是上文提到的 Gitlab 监听就没用了。。。  \n所以我们就要自己处理 git.oschina 的 webhooks 了， 坑。  \n可以考虑写个服务把 git.oschina 的 webhooks 转成 Gitlab 的 webhooks。\n\n## 参考文档\n\n[http://www.lovelucy.info/auto-deploy-website-by-webhooks-of-github-and-gitlab.html](http://www.lovelucy.info/auto-deploy-website-by-webhooks-of-github-and-gitlab.html)  \n[https://www.zoakerc.com/archives/jenkins-series-trigger-build-through-git-hooks/](https://www.zoakerc.com/archives/jenkins-series-trigger-build-through-git-hooks/)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u6301%u7EED%u96C6%u6210%5D%0A%23%23%u4F7F%u7528%20Git%20Hooks%20%u89E6%u53D1%20Jenkins%20%u6784%u5EFA%u4EFB%u52A1%0A%u4F7F%u7528%20Jenkins%20%u6784%u5EFA%u4EFB%u52A1%u7684%u65F6%u5019%uFF0C%u5F88%u591A%u4EFB%u52A1%u9700%u8981%u6839%u636E%20git%20%u6765%u89E6%u53D1%u3002%u4F8B%u5982%u4EE3%u7801%20push%20%u5230%u67D0%u5206%u652F%u540E%u5C31%u89E6%u53D1%20Jenkins%20%u7684%u96C6%u6210%u6D4B%u8BD5%u3002%0A%0A%u4E0B%u9762%u4ECB%u7ECD%u51E0%u79CD%20Git%20%u89E6%u53D1%20Jenkins%20%u7684%u65B9%u5F0F%u3002%0A%0A%0A%23%23%23%20Git%20Hooks%20%u89E6%u53D1%0AGit%20Hooks%uFF0C%u5373%u94A9%u5B50%uFF0C%u5173%u4E8E%20Git%20Hooks%20%u7684%u8BE6%u7EC6%u4FE1%u606F%uFF0C%u53EF%u4EE5%u770B%u770B%5B%u5B98%u65B9%u6587%u6863%5D%28https%3A//git-scm.com/book/zh/v2/%25E8%2587%25AA%25E5%25AE%259A%25E4%25B9%2589-Git-Git-%25E9%2592%25A9%25E5%25AD%2590%29%20%0A%0A%u5728%20Jenkins%20%u7684%u914D%u7F6E%u9875%u9762%uFF0C%u52FE%u9009%20%60Trigger%20builds%20remotely%60%20%u5F00%u542F%20Jenkins%20%u7684%u8FDC%u7A0B%u8C03%u7528%u529F%u80FD%u3002%0A%21%5BAlt%20text%5D%28./1468489265899.png%29%0A%0A%u7136%u540E%u7F16%u8F91%u670D%u52A1%u5668%u4ED3%u5E93%u4E2D%20jenkins-tutorial.git/hooks%20%u4E2D%u7684%20post-update%uFF0C%u91CC%u9762%u8C03%u7528%u8FD9%u4E24%u4E2A%u94FE%u63A5%u4E2D%u7684%u4E00%u4E2A%u5373%u53EF%u8FBE%u5230%u901A%u77E5%20Jenkins%20%u6784%u5EFA%u4EFB%u52A1%u7684%u76EE%u7684%u3002%u8BE5%u94A9%u5B50%u811A%u672C%u5C06%u5728%u4EE3%u7801%u63D0%u4EA4%u5230%u670D%u52A1%u5668%u4ED3%u5E93%u540E%u6267%u884C%u3002%0A%0A%0A%23%23%23%20Jenkins%20%u63D0%u4F9B%u7684%u76D1%u542C%u65B9%u5F0F%0A%u5728%20Jenkins%20%u7684%20Build%20Triggers%20%u914D%u7F6E%u9875%u9762%uFF0C%u6211%u4EEC%u53EF%u4EE5%u770B%u5230%u5982%u4E0B%u7684%u914D%u7F6E%u9879%uFF1A%0A%0A%21%5BAlt%20text%5D%28./1468489826359.png%29%0A%0AJenkins%20%u53EF%u4EE5%u76D1%u542C%20Github%20%u6216%u8005%20GitLab%20%u7684%u4E8B%u4EF6%uFF0C%u4E5F%u53EF%u4EE5%u901A%u8FC7%u8F6E%u8BE2%u7684%u65B9%u5F0F%u6765%u68C0%u67E5%u4EE3%u7801%u662F%u5426%u6709%u66F4%u65B0%u3002%0A%0A%23%23%23%23%20%u8F6E%u8BE2%0A%u8F6E%u8BE2%u7684%u65B9%u5F0F%u5C31%u662F%u5B9A%u65F6%u53BB%u8BBF%u95EE%20git%20%u4ED3%u5E93%uFF0C%u68C0%u67E5%u662F%u5426%u6709%u66F4%u65B0%uFF0C%u8FD9%u4E2A%u65B9%u5F0F%u592A%u50BB%u8FD9%u91CC%u5C31%u4E0D%u7EC6%u8BF4%u4E86%u3002%0A%0A%23%23%23%23%20%20Web%20Hooks%0A%u4ECB%u7ECD%u4E00%u4E0B%20Jenkins%20%u662F%u600E%u4E48%u76D1%u542C%20Github%20%u548C%20Gitlab%20%u7684%u5427%u3002%0A%0A%u4ED6%u4EEC%u4E3B%u8981%u662F%u901A%u8FC7%20%20Web%20Hooks%20%u6765%u5B9E%u73B0%u89E6%u53D1%u7684%uFF0CGithub%20%u548C%20Gitlab%20%u90FD%u652F%u6301%20Webhooks%20%u8FD9%u4E2A%u529F%u80FD%uFF0C%u7B80%u5355%u6765%u8BF4%u5C31%u662F%u5728%u6709%u66F4%u65B0%u4E8B%u4EF6%u65F6%u4F1A%u8C03%u7528%u4F60%u914D%u7F6E%u597D%u7684%20URL%uFF0C%u5E76%u628A%u76F8%u5173%u7684%u4FE1%u606F%20POST%20%u8FC7%u6765%u3002%u8BE6%u7EC6%u53EF%u4EE5%u89C1%u6587%u6863%uFF1A%5BGithub%20Webhooks%5D%28https%3A//developer.github.com/webhooks/%29%20%u3001%20%5BGitlab%20Webhooks%5D%28https%3A//gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/web_hooks/web_hooks.md%29%0A%0A%23%23%23%23%20GitLab%20%u7684%u76D1%u542C%u914D%u7F6E%0AGIthub%20%u7684%u76D1%u542C%u6BD4%u8F83%u7B80%u5355%uFF0C%u52FE%u9009%u4E86%u5C31%u53EF%u4EE5%uFF0C%u8FD9%u91CC%u4E0D%u518D%u7EC6%u8BF4%u3002%0A%0A%0AGitlab%20%u7684%u914D%u7F6E%u9009%u9879%u5C31%u6BD4%u8F83%u4E30%u5BCC%u4E86%u3002%0A%21%5BAlt%20text%5D%28./1468491422766.png%29%0A%0A%u5728%u52FE%u9009%u4E86%u8BE5%u9009%u9879%u540E%uFF0C%u6211%u4EEC%u5C31%u5F97%u5230%u4E00%u4E2A%u5730%u5740%uFF0C%u8FD9%u4E2A%u5730%u5740%u5C31%u662F%u63A5%u6536%20Gitlab%20%u7684%20Webhooks%20%u7528%u7684%u3002%u53BB%u5230%20Gitlab%20%u7684%20Webhooks%20%u914D%u7F6E%u9875%u9762%u586B%u4E0A%u8FD9%u4E2A%u5730%u5740%u5C31%u884C%u5566%u3002%0A%21%5BAlt%20text%5D%28./1468491196821.png%29%0A%0A%23%23%23%23%20%u6279%u8BC4%u4E00%u4E0B%20git.oschina%0A%u5F00%u6E90%u4E2D%u56FD%u63D0%u4F9B%u4E86%u4E2A%u514D%u8D39%u7684%20git%20%20%u6258%u7BA1%u670D%u52A1%20https%3A//git.oschina.net/%20%uFF0C%u867D%u7136%u8FD9%u4E2A%u670D%u52A1%u662F%u57FA%u4E8E%20Gitlab%20%u6846%u67B6%u4FEE%u6539%u7684%uFF0C%u4F46%u662F%u5B83%u5C45%u7136%u628A%20Webhooks%20%u7684%20post%20%u6570%u636E%u683C%u5F0F%u7ED9%u6539%u4E86%u3002%u3002%u3002%0A%u540E%u679C%u5C31%u662F%u4E0A%u6587%u63D0%u5230%u7684%20Gitlab%20%u76D1%u542C%u5C31%u6CA1%u7528%u4E86%u3002%u3002%u3002%0A%u6240%u4EE5%u6211%u4EEC%u5C31%u8981%u81EA%u5DF1%u5904%u7406%20git.oschina%20%u7684%20webhooks%20%u4E86%uFF0C%20%u5751%u3002%0A%u53EF%u4EE5%u8003%u8651%u5199%u4E2A%u670D%u52A1%u628A%20%20git.oschina%20%u7684%20webhooks%20%u8F6C%u6210%20Gitlab%20%u7684%20webhooks%u3002%0A%0A%23%23%u53C2%u8003%u6587%u6863%0Ahttp%3A//www.lovelucy.info/auto-deploy-website-by-webhooks-of-github-and-gitlab.html%0Ahttps%3A//www.zoakerc.com/archives/jenkins-series-trigger-build-through-git-hooks/</center>"
  },
  {
    "title": "typescript + express + mongoose 实例",
    "created": "2016-06-22T23:07:12.000Z",
    "updated": "2016-06-22T23:07:13.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=5b8990b4-58c9-45a0-867a-c0587bb8ccb1&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n## typescript + express + mongoose 实例\n\n最近在学习 typescript ，所以用 typescript 来写了个 MVC 实例。\n\n### typescript + mongoose\n\nOrder.js\n\n    'use strict';import mongoose = require('mongoose');const Schema = mongoose.Schema;interface IOrder extends mongoose.Document { amount: string; oType: string; pType: string; status: string; createdAt: Date;}const _schema = new Schema({ amount: {type: Number}, oType: {type: Number}, pType: {type: Number}, status: {type: Number}, bankcard: {type: String}, parent_id: {type: String}, createdAt: {type: Date, default: Date.now}}, {collection: 'order', id: true});_schema.path('amount').required(true, 'Order amount cannot be blank');_schema.path('status').required(true, 'Order status cannot be blank');_schema.pre('remove', function (next) { next();});const _model = mongoose.model < IOrder >('Order', _schema);class Order { /** * static * @param id * @returns {Promise<Order>} */ static findById(id:string):Promise < Order > { console.log('findById2', ' 执行 '); return new Promise<Order>((resolve, reject) => { _model.findById(id, (err, order) => { err ? reject(err) : resolve(new Order(order)) }) }); } /** * static * @param id * @returns {Promise<Order>} */ static findById2(id:string):Promise < Order > { return new Promise<Order>((resolve, reject) => { _model.findById(id) .exec() .onResolve((err, order) => { err ? reject(err) : resolve(new Order(order)) }); }); } /** * */ private _document:IOrder; /** * 构造器 * @param document */ constructor(document:IOrder) { this._document = document; } get amount():string { return this._document.amount; }}export default Order\n\n还是需要定义好 Order 表的 schema 以及 Order 的 Interface IOrder，这样通过 mongoose 查询到的实例都是实现了 IOrder 接口的。\n\n### typescript 与 express\n\n使用装饰器（注解）  \nOrderController.js\n\n    import e = require('express');import Order from '../models/Order'import {router} from \"../decorators/Web\";const timeOut = function (time) { return new Promise(function (resolve) { setTimeout(function () { resolve(`respond with asynv await ${time} ms`) }, time) });};class OrderController { @router({ method: 'get', path: '/order/awaitTest' }) async awaitTest(req:e.Request, res) { console.log('OrderController', 'awaitTest'); let result = await timeOut(10); res.send(result); } @router({ method: 'get', path: '/order/findOneWithClass' }) async findOneWithClass(req:e.Request, res:e.Response) { let result = await Order.findById2('54ce6d7779337f164b36504a') res.status(200).json(result); res.status(200).json(result); }}export default OrderController\n\n装饰器是 es7 的新特性，typescript 已经实现了该功能。具体请看源码实现或者文档。\n\n[源码](https://github.com/myfjdthink/CodeNode/tree/master/TypeScriptSamples/express_demo)\n\n### 参考资料\n\n[TypeScript Handbook（中文版）](https://www.gitbook.com/book/zhongsp/typescript-handbook/details)  \n[TYPESCRIPT + EXPRESS + NODE.JS](http://brianflove.com/2016/03/29/typescript-express-node-js/)  \n[在 Web 应用中使用 ES7 装饰器（Decorator）初体验](https://segmentfault.com/a/1190000004357419)  \n[ts-express-decorators](https://github.com/Romakita/ts-express-decorators)  \n[Creating Mongoose models with TypeScript](https://github.com/Appsilon/styleguide/wiki/mongoose-typescript-models)  \n[mongoose + typescript](https://gist.github.com/masahirompp/3c012c8721b70821fa45)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%23%23%20typescript%20+%20express%20+%20mongoose%20%u5B9E%u4F8B%0A%0A%u6700%u8FD1%u5728%u5B66%u4E60%20typescript%20%uFF0C%u6240%u4EE5%u7528%20typescript%20%u6765%u5199%u4E86%u4E2A%20MVC%20%u5B9E%u4F8B%u3002%0A%23%23%23typescript%20+%20mongoose%0AOrder.js%0A%0A%60%60%60%0A%27use%20strict%27%3B%0Aimport%20mongoose%20%3D%20require%28%27mongoose%27%29%3B%0Aconst%20Schema%20%3D%20mongoose.Schema%3B%0A%0Ainterface%20IOrder%20extends%20mongoose.Document%20%7B%0A%20%20amount%3A%20string%3B%0A%20%20oType%3A%20string%3B%0A%20%20pType%3A%20string%3B%0A%20%20status%3A%20string%3B%0A%20%20createdAt%3A%20Date%3B%0A%7D%0A%0Aconst%20_schema%20%3D%20new%20Schema%28%7B%0A%20%20amount%3A%20%7Btype%3A%20Number%7D%2C%0A%20%20oType%3A%20%7Btype%3A%20Number%7D%2C%0A%20%20pType%3A%20%7Btype%3A%20Number%7D%2C%0A%20%20status%3A%20%7Btype%3A%20Number%7D%2C%0A%20%20bankcard%3A%20%7Btype%3A%20String%7D%2C%0A%20%20parent_id%3A%20%7Btype%3A%20String%7D%2C%0A%20%20createdAt%3A%20%7Btype%3A%20Date%2C%20default%3A%20Date.now%7D%0A%7D%2C%20%7Bcollection%3A%20%27order%27%2C%20id%3A%20true%7D%29%3B%0A%0A_schema.path%28%27amount%27%29.required%28true%2C%20%27Order%20amount%20cannot%20be%20blank%27%29%3B%0A_schema.path%28%27status%27%29.required%28true%2C%20%27Order%20status%20cannot%20be%20blank%27%29%3B%0A%0A_schema.pre%28%27remove%27%2C%20function%20%28next%29%20%7B%0A%20%20next%28%29%3B%0A%7D%29%3B%0A%0Aconst%20_model%20%3D%20mongoose.model%20%3C%20IOrder%20%3E%28%27Order%27%2C%20_schema%29%3B%0A%0Aclass%20Order%20%7B%0A%20%20/**%0A%20%20%20*%20static%0A%20%20%20*%20@param%20id%0A%20%20%20*%20@returns%20%7BPromise%3COrder%3E%7D%0A%20%20%20*/%0A%20%20static%20findById%28id%3Astring%29%3APromise%20%3C%20Order%20%3E%20%7B%0A%20%20%20%20console.log%28%27findById2%27%2C%20%27%20%u6267%u884C%20%27%29%3B%0A%20%20%20%20return%20new%20Promise%3COrder%3E%28%28resolve%2C%20reject%29%20%3D%3E%20%7B%0A%20%20%20%20%20%20_model.findById%28id%2C%20%28err%2C%20order%29%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20err%20%3F%20reject%28err%29%20%3A%20resolve%28new%20Order%28order%29%29%0A%20%20%20%20%20%20%7D%29%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%0A%20%20/**%0A%20%20%20*%20static%0A%20%20%20*%20@param%20id%0A%20%20%20*%20@returns%20%7BPromise%3COrder%3E%7D%0A%20%20%20*/%0A%20%20static%20findById2%28id%3Astring%29%3APromise%20%3C%20Order%20%3E%20%7B%0A%20%20%20%20return%20new%20Promise%3COrder%3E%28%28resolve%2C%20reject%29%20%3D%3E%20%7B%0A%20%20%20%20%20%20_model.findById%28id%29%0A%20%20%20%20%20%20%20%20.exec%28%29%0A%20%20%20%20%20%20%20%20.onResolve%28%28err%2C%20order%29%20%3D%3E%20%7B%0A%20%20%20%20%20%20%20%20%20%20err%20%3F%20reject%28err%29%20%3A%20resolve%28new%20Order%28order%29%29%0A%20%20%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%0A%20%20/**%0A%20%20%20*%0A%20%20%20*/%0A%20%20private%20_document%3AIOrder%3B%0A%20%20/**%0A%20%20%20*%20%u6784%u9020%u5668%0A%20%20%20*%20@param%20document%0A%20%20%20*/%0A%20%20constructor%28document%3AIOrder%29%20%7B%0A%20%20%20%20this._document%20%3D%20document%3B%0A%20%20%7D%0A%20%20get%20amount%28%29%3Astring%20%7B%0A%20%20%20%20return%20this._document.amount%3B%0A%20%20%7D%0A%7D%0A%0Aexport%20default%20Order%0A%60%60%60%0A%u8FD8%u662F%u9700%u8981%u5B9A%u4E49%u597D%20Order%20%u8868%u7684%20schema%20%u4EE5%u53CA%20Order%20%u7684%20Interface%20IOrder%uFF0C%u8FD9%u6837%u901A%u8FC7%20mongoose%20%u67E5%u8BE2%u5230%u7684%u5B9E%u4F8B%u90FD%u662F%u5B9E%u73B0%u4E86%20IOrder%20%u63A5%u53E3%u7684%u3002%0A%0A%23%23%23%20typescript%20%u4E0E%20express%0A%u4F7F%u7528%u88C5%u9970%u5668%uFF08%u6CE8%u89E3%uFF09%0AOrderController.js%0A%0A%60%60%60%0Aimport%20e%20%3D%20require%28%27express%27%29%3B%0Aimport%20Order%20from%20%27../models/Order%27%0Aimport%20%7Brouter%7D%20from%20%22../decorators/Web%22%3B%0A%0A%0Aconst%20timeOut%20%3D%20function%20%28time%29%20%7B%0A%20%20return%20new%20Promise%28function%20%28resolve%29%20%7B%0A%20%20%20%20setTimeout%28function%20%28%29%20%7B%0A%20%20%20%20%20%20resolve%28%60respond%20with%20asynv%20await%20%24%7Btime%7D%20ms%60%29%0A%20%20%20%20%7D%2C%20time%29%0A%20%20%7D%29%3B%0A%7D%3B%0A%0Aclass%20OrderController%20%7B%0A%20%20@router%28%7B%0A%20%20%20%20method%3A%20%27get%27%2C%0A%20%20%20%20path%3A%20%27/order/awaitTest%27%0A%20%20%7D%29%0A%20%20async%20awaitTest%28req%3Ae.Request%2C%20res%29%20%7B%0A%20%20%20%20console.log%28%27OrderController%27%2C%20%27awaitTest%27%29%3B%0A%20%20%20%20let%20result%20%3D%20await%20timeOut%2810%29%3B%0A%20%20%20%20res.send%28result%29%3B%0A%20%20%7D%0A%0A%20%20@router%28%7B%0A%20%20%20%20method%3A%20%27get%27%2C%0A%20%20%20%20path%3A%20%27/order/findOneWithClass%27%0A%20%20%7D%29%0A%20%20async%20findOneWithClass%28req%3Ae.Request%2C%20res%3Ae.Response%29%20%7B%0A%20%20%20%20let%20result%20%3D%20await%20Order.findById2%28%2754ce6d7779337f164b36504a%27%29%0A%20%20%20%20res.status%28200%29.json%28result%29%3B%0A%20%20%20%20res.status%28200%29.json%28result%29%3B%0A%20%20%7D%0A%0A%7D%0A%0Aexport%20default%20OrderController%0A%60%60%60%0A%0A%u88C5%u9970%u5668%u662F%20es7%20%20%u7684%u65B0%u7279%u6027%uFF0Ctypescript%20%u5DF2%u7ECF%u5B9E%u73B0%u4E86%u8BE5%u529F%u80FD%u3002%u5177%u4F53%u8BF7%u770B%u6E90%u7801%u5B9E%u73B0%u6216%u8005%u6587%u6863%u3002%0A%0A%5B%u6E90%u7801%5D%28https%3A//github.com/myfjdthink/CodeNode/tree/master/TypeScriptSamples/express_demo%29%0A%0A%23%23%23%20%u53C2%u8003%u8D44%u6599%0A%5BTypeScript%20Handbook%uFF08%u4E2D%u6587%u7248%uFF09%5D%28https%3A//www.gitbook.com/book/zhongsp/typescript-handbook/details%29%0A%5BTYPESCRIPT%20+%20EXPRESS%20+%20NODE.JS%5D%28http%3A//brianflove.com/2016/03/29/typescript-express-node-js/%29%0A%5B%u5728%20Web%20%u5E94%u7528%u4E2D%u4F7F%u7528%20ES7%20%u88C5%u9970%u5668%uFF08Decorator%uFF09%u521D%u4F53%u9A8C%5D%28https%3A//segmentfault.com/a/1190000004357419%29%0A%5Bts-express-decorators%5D%28https%3A//github.com/Romakita/ts-express-decorators%29%0A%5BCreating%20Mongoose%20models%20with%20TypeScript%5D%28https%3A//github.com/Appsilon/styleguide/wiki/mongoose-typescript-models%29%0A%5Bmongoose%20+%20typescript%5D%28https%3A//gist.github.com/masahirompp/3c012c8721b70821fa45%29%0A%0A</center>"
  },
  {
    "title": "TypeScript 介绍",
    "created": "2016-05-29T22:49:06.000Z",
    "updated": "2016-06-22T22:41:30.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=6420dffb-7dca-433c-95ce-993fbeb94cc6&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# TypeScript 介绍\n\n## 前言\n\nTypeScript 支持 ECMAScript 2015 的各种特性，关于 ECMAScript 2015 的特性本文将不再介绍。  \n推荐阅读[ECMAScript 6入门](http://es6.ruanyifeng.com/)\n\n## TypeScript 是什么\n\n*   [TypeScript](https://www.typescriptlang.org/) 是 微软出品的编程语言，是JavaScript 的超集。\n*   具有类型系统，所以叫 TypeScript\n*   支持 ES6 甚至 ES7 的 async functions and decorators\n\n## 基础类型\n\n*   boolean\n*   number\n*   string\n*   array\n*   tuple+联合类型（额，这个很难懂，后面有解释）\n*   enum\n*   any\n*   void\n\nOK,如何声明一个变量的类型呢 ?  \n屁股后面加:\n\n    let isDone:boolean = false;let decLiteral: number = 6;let name: string = \"bob\";let list: number[] = [1, 2, 3];let x: [string, number];enum Color {Red, Green, Blue};let c: Color = Color.Green;let notSure: any = 4;\n\n### 数组\n\n注意数组内的元素类型要统一，真正的数组。\n\n    let list: number[] = [1, 2, 3];\n\n第二种方式是使用数组泛型，Array<元素类型>：\n\n    let list: Array<number> = [1, 2, 3];\n\n### Tuple 元组\n\n类似数组，允许不同类型。\n\n*   元素数量固定\n*   元素类型确定\n\n    // Declare a tuple typelet x: [string, number];// Initialize itx = ['hello', 10]; // OK// Initialize it incorrectlyx = [10, 'hello']; // Error\n\n### Enum 枚举\n\nenum类型是对JavaScript标准数据类型的一个补充。 像C#等其它语言一样，使用枚举类型可以为一组数值赋予友好的名字。\n\n    enum Color {Red, Green, Blue};let c: Color = Color.Green;\n\n### Any 任意值\n\n兼容 js 代码\n\n### Void 空值\n\n### Type assertions 类型断言（强制类型转换）\n\n直接告诉编译器这个变量的类型\n\n    let someValue: any = \"this is a string\";let strLength: number = (<string>someValue).length;\n\n* * *\n\n## 接口\n\n首先说明如果你是java程序员，请一定忘记interface，此处的接口和彼处接口完全不是一个思想。  \n接口是一种约定，用于规范程序。  \n首先来一个最简单的接口\n\n### 字面量接口\n\n不使用interface关键字就定义了一个接口\n\n    function printLabel(labelledObj: {label: string}) { console.log(labelledObj.label);}var myObj = {size: 10, label: \"Size 10 Object\"};printLabel(myObj);\n\n上面没有interface关键字，哪个是接口呢?\n\n> {label: string}\n\n你说这个玩意不是变量labelledObj的类型吗？我知道typescript说白了就是 js 的类型系统，前面也介绍了如：Boolean,Number,String,Array,Enum,Any,Void  \n其实接口就是定义了一个对象有哪些属性，并且属性值是什么类型\n\n### 使用字面量\n\n    interface LabelledValue { label: string;}function printLabel(labelledObj: LabelledValue) { console.log(labelledObj.label);}let myObj = {size: 10, label: \"Size 10 Object\"};printLabel(myObj);\n\n## 类\n\n### 定义\n\n    class Greeter { greeting: string; constructor(message: string) { this.greeting = message; } greet() { return \"Hello, \" + this.greeting; }}let greeter = new Greeter(\"world\");\n\n### 继承\n\n见官方的 demo  \n[https://www.typescriptlang.org/play/index.html](https://www.typescriptlang.org/play/index.html)\n\n    class Animal { constructor(public name: string) { } move(distanceInMeters: number = 0) { console.log(`${this.name} moved ${distanceInMeters}m.`); } moveClone(distanceInMeters: number = 0){ this.move(distanceInMeters) }}class Snake extends Animal { constructor(name: string) { super(name); } move(distanceInMeters = 5) { console.log(\"Slithering...\"); super.move(distanceInMeters); }}class Horse extends Animal { constructor(name: string) { super(name); } move(distanceInMeters = 45) { console.log(\"Galloping...\"); super.move(distanceInMeters); }}let sam = new Snake(\"Sammy the Python\");let tom: Animal = new Horse(\"Tommy the Palomino\");sam.moveClone();tom.moveClone(34);\n\n子类重写了父类方法move,然后父类引用指向子类对象，多态实现了！\n\n支持访问修饰符 public private等\n\n支持 get set 控制对对象成员的访问\n\n## TypeScript 优秀的地方\n\n### 支持 ES6 新特性，一些 ES7的特性也支持\n\n### 灵活的类型系统，具有类型推导\n\nTypeScript里，在有些没有明确指出类型的地方，类型推论会帮助提供类型。如下面的例子\n\n    let x = 3;\n\n变量x的类型被推断为数字。  \n不会像 Java 那样每个地方都写死类型，类型更多时候用于限制函数的输入与返回。\n\n### 编译代码的可读性高\n\n可以看看 typescript 提供的 demo  \n[https://www.typescriptlang.org/play/index.html](https://www.typescriptlang.org/play/index.html)\n\n### 可复用 npm module\n\n可以利用 Node 的生态。\n\n*   tsd  \n    通过声明文件来复用 npm 包\n*   typings  \n    since 1.8，更合理地管理 tsd 文件的方式，把 tsd 文件植入到 npm 包中。\n\n## 参考文档\n\n[TypeScript-Basic](https://segmentfault.com/a/1190000004620132)  \n[TypeScript interface](https://segmentfault.com/a/1190000004619949)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%23%20TypeScript%20%u4ECB%u7ECD%0A%0A%23%23%u524D%u8A00%0ATypeScript%20%u652F%u6301%20ECMAScript%202015%20%u7684%u5404%u79CD%u7279%u6027%uFF0C%u5173%u4E8E%20ECMAScript%202015%20%u7684%u7279%u6027%u672C%u6587%u5C06%u4E0D%u518D%u4ECB%u7ECD%u3002%0A%u63A8%u8350%u9605%u8BFB%5BECMAScript%206%u5165%u95E8%5D%28http%3A//es6.ruanyifeng.com/%29%0A%23%23TypeScript%20%u662F%u4EC0%u4E48%0A-%20%5BTypeScript%5D%28https%3A//www.typescriptlang.org/%29%20%u662F%20%u5FAE%u8F6F%u51FA%u54C1%u7684%u7F16%u7A0B%u8BED%u8A00%uFF0C%u662FJavaScript%20%u7684%u8D85%u96C6%u3002%0A-%20%u5177%u6709%u7C7B%u578B%u7CFB%u7EDF%uFF0C%u6240%u4EE5%u53EB%20TypeScript%0A-%20%u652F%u6301%20ES6%20%u751A%u81F3%20ES7%20%u7684%20async%20functions%20and%20decorators%0A%0A%23%23%u57FA%u7840%u7C7B%u578B%0A%0A-%20boolean%0A-%20number%0A-%20string%0A-%20array%0A-%20tuple+%u8054%u5408%u7C7B%u578B%uFF08%u989D%uFF0C%u8FD9%u4E2A%u5F88%u96BE%u61C2%uFF0C%u540E%u9762%u6709%u89E3%u91CA%uFF09%0A-%20enum%0A-%20any%0A-%20void%0A%0AOK%2C%u5982%u4F55%u58F0%u660E%u4E00%u4E2A%u53D8%u91CF%u7684%u7C7B%u578B%u5462%20%3F%20%0A%u5C41%u80A1%u540E%u9762%u52A0%3A%0A%0A%60%60%60%0Alet%20isDone%3Aboolean%20%3D%20false%3B%0Alet%20decLiteral%3A%20number%20%3D%206%3B%0Alet%20name%3A%20string%20%3D%20%22bob%22%3B%0Alet%20list%3A%20number%5B%5D%20%3D%20%5B1%2C%202%2C%203%5D%3B%0Alet%20x%3A%20%5Bstring%2C%20number%5D%3B%0Aenum%20Color%20%7BRed%2C%20Green%2C%20Blue%7D%3Blet%20c%3A%20Color%20%3D%20Color.Green%3B%0Alet%20notSure%3A%20any%20%3D%204%3B%0A%60%60%60%0A%0A%23%23%23%20%u6570%u7EC4%0A%u6CE8%u610F%u6570%u7EC4%u5185%u7684%u5143%u7D20%u7C7B%u578B%u8981%u7EDF%u4E00%uFF0C%u771F%u6B63%u7684%u6570%u7EC4%u3002%0A%0A%60%60%60%0Alet%20list%3A%20number%5B%5D%20%3D%20%5B1%2C%202%2C%203%5D%3B%0A%60%60%60%0A%0A%u7B2C%u4E8C%u79CD%u65B9%u5F0F%u662F%u4F7F%u7528%u6570%u7EC4%u6CDB%u578B%uFF0CArray%3C%u5143%u7D20%u7C7B%u578B%3E%uFF1A%0A%0A%60%60%60%0Alet%20list%3A%20Array%3Cnumber%3E%20%3D%20%5B1%2C%202%2C%203%5D%3B%0A%60%60%60%0A%0A%23%23%23Tuple%20%u5143%u7EC4%0A%u7C7B%u4F3C%u6570%u7EC4%uFF0C%u5141%u8BB8%u4E0D%u540C%u7C7B%u578B%u3002%0A-%20%u5143%u7D20%u6570%u91CF%u56FA%u5B9A%0A-%20%u5143%u7D20%u7C7B%u578B%u786E%u5B9A%0A%0A%60%60%60%0A//%20Declare%20a%20tuple%20type%0Alet%20x%3A%20%5Bstring%2C%20number%5D%3B%0A//%20Initialize%20it%0Ax%20%3D%20%5B%27hello%27%2C%2010%5D%3B%20//%20OK%0A//%20Initialize%20it%20incorrectly%0Ax%20%3D%20%5B10%2C%20%27hello%27%5D%3B%20//%20Error%0A%60%60%60%0A%0A%23%23%23Enum%20%u679A%u4E3E%0Aenum%u7C7B%u578B%u662F%u5BF9JavaScript%u6807%u51C6%u6570%u636E%u7C7B%u578B%u7684%u4E00%u4E2A%u8865%u5145%u3002%20%u50CFC%23%u7B49%u5176%u5B83%u8BED%u8A00%u4E00%u6837%uFF0C%u4F7F%u7528%u679A%u4E3E%u7C7B%u578B%u53EF%u4EE5%u4E3A%u4E00%u7EC4%u6570%u503C%u8D4B%u4E88%u53CB%u597D%u7684%u540D%u5B57%u3002%0A%0A%60%60%60%0Aenum%20Color%20%7BRed%2C%20Green%2C%20Blue%7D%3B%0Alet%20c%3A%20Color%20%3D%20Color.Green%3B%0A%60%60%60%0A%0A%23%23%23Any%09%u4EFB%u610F%u503C%0A%u517C%u5BB9%20js%20%u4EE3%u7801%0A%23%23%23Void%20%u7A7A%u503C%0A%0A%23%23%23Type%20assertions%20%u7C7B%u578B%u65AD%u8A00%uFF08%u5F3A%u5236%u7C7B%u578B%u8F6C%u6362%uFF09%0A%u76F4%u63A5%u544A%u8BC9%u7F16%u8BD1%u5668%u8FD9%u4E2A%u53D8%u91CF%u7684%u7C7B%u578B%0A%60%60%60%0Alet%20someValue%3A%20any%20%3D%20%22this%20is%20a%20string%22%3B%0A%0Alet%20strLength%3A%20number%20%3D%20%28%3Cstring%3EsomeValue%29.length%3B%0A%60%60%60%0A%0A%0A----------%0A%0A%23%23%u63A5%u53E3%0A%u9996%u5148%u8BF4%u660E%u5982%u679C%u4F60%u662Fjava%u7A0B%u5E8F%u5458%uFF0C%u8BF7%u4E00%u5B9A%u5FD8%u8BB0interface%uFF0C%u6B64%u5904%u7684%u63A5%u53E3%u548C%u5F7C%u5904%u63A5%u53E3%u5B8C%u5168%u4E0D%u662F%u4E00%u4E2A%u601D%u60F3%u3002%0A%u63A5%u53E3%u662F%u4E00%u79CD%u7EA6%u5B9A%uFF0C%u7528%u4E8E%u89C4%u8303%u7A0B%u5E8F%u3002%0A%u9996%u5148%u6765%u4E00%u4E2A%u6700%u7B80%u5355%u7684%u63A5%u53E3%0A%23%23%23%u5B57%u9762%u91CF%u63A5%u53E3%0A%0A%u4E0D%u4F7F%u7528interface%u5173%u952E%u5B57%u5C31%u5B9A%u4E49%u4E86%u4E00%u4E2A%u63A5%u53E3%0A%0A%60%60%60%0Afunction%20printLabel%28labelledObj%3A%20%7Blabel%3A%20string%7D%29%20%7B%0A%20%20console.log%28labelledObj.label%29%3B%0A%7D%0A%0Avar%20myObj%20%3D%20%7Bsize%3A%2010%2C%20label%3A%20%22Size%2010%20Object%22%7D%3B%0AprintLabel%28myObj%29%3B%0A%60%60%60%0A%u4E0A%u9762%u6CA1%u6709interface%u5173%u952E%u5B57%uFF0C%u54EA%u4E2A%u662F%u63A5%u53E3%u5462%3F%20%0A%0A%3E%20%7Blabel%3A%20string%7D%0A%0A%u4F60%u8BF4%u8FD9%u4E2A%u73A9%u610F%u4E0D%u662F%u53D8%u91CFlabelledObj%u7684%u7C7B%u578B%u5417%uFF1F%u6211%u77E5%u9053typescript%u8BF4%u767D%u4E86%u5C31%u662F%20js%20%u7684%u7C7B%u578B%u7CFB%u7EDF%uFF0C%u524D%u9762%u4E5F%u4ECB%u7ECD%u4E86%u5982%uFF1ABoolean%2CNumber%2CString%2CArray%2CEnum%2CAny%2CVoid%20%0A%u5176%u5B9E%u63A5%u53E3%u5C31%u662F%u5B9A%u4E49%u4E86%u4E00%u4E2A%u5BF9%u8C61%u6709%u54EA%u4E9B%u5C5E%u6027%uFF0C%u5E76%u4E14%u5C5E%u6027%u503C%u662F%u4EC0%u4E48%u7C7B%u578B%0A%0A%23%23%23%20%u4F7F%u7528%u5B57%u9762%u91CF%0A%60%60%60%0Ainterface%20LabelledValue%20%7B%0A%20%20label%3A%20string%3B%0A%7D%0A%0Afunction%20printLabel%28labelledObj%3A%20LabelledValue%29%20%7B%0A%20%20console.log%28labelledObj.label%29%3B%0A%7D%0A%0Alet%20myObj%20%3D%20%7Bsize%3A%2010%2C%20label%3A%20%22Size%2010%20Object%22%7D%3B%0AprintLabel%28myObj%29%3B%0A%60%60%60%0A%0A%23%23%u7C7B%0A%23%23%23%20%u5B9A%u4E49%0A%60%60%60%0Aclass%20Greeter%20%7B%0A%20%20%20%20greeting%3A%20string%3B%0A%20%20%20%20constructor%28message%3A%20string%29%20%7B%0A%20%20%20%20%20%20%20%20this.greeting%20%3D%20message%3B%0A%20%20%20%20%7D%0A%20%20%20%20greet%28%29%20%7B%0A%20%20%20%20%20%20%20%20return%20%22Hello%2C%20%22%20+%20this.greeting%3B%0A%20%20%20%20%7D%0A%7D%0A%0Alet%20greeter%20%3D%20new%20Greeter%28%22world%22%29%3B%0A%60%60%60%0A%23%23%23%20%u7EE7%u627F%0A%u89C1%u5B98%u65B9%u7684%20demo%0Ahttps%3A//www.typescriptlang.org/play/index.html%0A%0A%60%60%60%0Aclass%20Animal%20%7B%0A%20%20%20%20constructor%28public%20name%3A%20string%29%20%7B%20%7D%0A%20%20%20%20move%28distanceInMeters%3A%20number%20%3D%200%29%20%7B%0A%20%20%20%20%20%20%20%20console.log%28%60%24%7Bthis.name%7D%20moved%20%24%7BdistanceInMeters%7Dm.%60%29%3B%0A%20%20%20%20%7D%0A%09moveClone%28distanceInMeters%3A%20number%20%3D%200%29%7B%0A%09%09this.move%28distanceInMeters%29%0A%09%7D%0A%7D%0A%0Aclass%20Snake%20extends%20Animal%20%7B%0A%20%20%20%20constructor%28name%3A%20string%29%20%7B%20super%28name%29%3B%20%7D%0A%20%20%20%20move%28distanceInMeters%20%3D%205%29%20%7B%0A%20%20%20%20%20%20%20%20console.log%28%22Slithering...%22%29%3B%0A%20%20%20%20%20%20%20%20super.move%28distanceInMeters%29%3B%0A%20%20%20%20%7D%0A%7D%0A%0Aclass%20Horse%20extends%20Animal%20%7B%0A%20%20%20%20constructor%28name%3A%20string%29%20%7B%20super%28name%29%3B%20%7D%0A%20%20%20%20move%28distanceInMeters%20%3D%2045%29%20%7B%0A%20%20%20%20%20%20%20%20console.log%28%22Galloping...%22%29%3B%0A%20%20%20%20%20%20%20%20super.move%28distanceInMeters%29%3B%0A%20%20%20%20%7D%0A%7D%0A%0Alet%20sam%20%3D%20new%20Snake%28%22Sammy%20the%20Python%22%29%3B%0Alet%20tom%3A%20Animal%20%3D%20new%20Horse%28%22Tommy%20the%20Palomino%22%29%3B%0A%0Asam.moveClone%28%29%3B%0Atom.moveClone%2834%29%3B%0A%60%60%60%0A%u5B50%u7C7B%u91CD%u5199%u4E86%u7236%u7C7B%u65B9%u6CD5move%2C%u7136%u540E%u7236%u7C7B%u5F15%u7528%u6307%u5411%u5B50%u7C7B%u5BF9%u8C61%uFF0C%u591A%u6001%u5B9E%u73B0%u4E86%uFF01%0A%0A%u652F%u6301%u8BBF%u95EE%u4FEE%u9970%u7B26%20public%20%20private%u7B49%0A%0A%u652F%u6301%20get%20%20set%20%u63A7%u5236%u5BF9%u5BF9%u8C61%u6210%u5458%u7684%u8BBF%u95EE%0A%0A%0A%23%23%20TypeScript%20%u4F18%u79C0%u7684%u5730%u65B9%0A%23%23%23%20%u652F%u6301%20ES6%20%u65B0%u7279%u6027%uFF0C%u4E00%u4E9B%20ES7%u7684%u7279%u6027%u4E5F%u652F%u6301%0A%23%23%23%20%u7075%u6D3B%u7684%u7C7B%u578B%u7CFB%u7EDF%uFF0C%u5177%u6709%u7C7B%u578B%u63A8%u5BFC%0ATypeScript%u91CC%uFF0C%u5728%u6709%u4E9B%u6CA1%u6709%u660E%u786E%u6307%u51FA%u7C7B%u578B%u7684%u5730%u65B9%uFF0C%u7C7B%u578B%u63A8%u8BBA%u4F1A%u5E2E%u52A9%u63D0%u4F9B%u7C7B%u578B%u3002%u5982%u4E0B%u9762%u7684%u4F8B%u5B50%0A%0A%60%60%60%0Alet%20x%20%3D%203%3B%0A%60%60%60%0A%0A%u53D8%u91CFx%u7684%u7C7B%u578B%u88AB%u63A8%u65AD%u4E3A%u6570%u5B57%u3002%0A%u4E0D%u4F1A%u50CF%20Java%20%u90A3%u6837%u6BCF%u4E2A%u5730%u65B9%u90FD%u5199%u6B7B%u7C7B%u578B%uFF0C%u7C7B%u578B%u66F4%u591A%u65F6%u5019%u7528%u4E8E%u9650%u5236%u51FD%u6570%u7684%u8F93%u5165%u4E0E%u8FD4%u56DE%u3002%0A%0A%23%23%23%20%u7F16%u8BD1%u4EE3%u7801%u7684%u53EF%u8BFB%u6027%u9AD8%0A%u53EF%u4EE5%u770B%u770B%20typescript%20%u63D0%u4F9B%u7684%20demo%0Ahttps%3A//www.typescriptlang.org/play/index.html%0A%23%23%23%20%u53EF%u590D%u7528%20npm%20module%0A%u53EF%u4EE5%u5229%u7528%20Node%20%u7684%u751F%u6001%u3002%0A-%20tsd%0A%09%u901A%u8FC7%u58F0%u660E%u6587%u4EF6%u6765%u590D%u7528%20npm%20%u5305%0A-%20typings%20%20%0Asince%201.8%uFF0C%u66F4%u5408%u7406%u5730%u7BA1%u7406%20tsd%20%u6587%u4EF6%u7684%u65B9%u5F0F%uFF0C%u628A%20tsd%20%u6587%u4EF6%u690D%u5165%u5230%20npm%20%u5305%u4E2D%u3002%0A%0A%23%23%u53C2%u8003%u6587%u6863%0A%5BTypeScript-Basic%5D%28https%3A//segmentfault.com/a/1190000004620132%29%0A%5BTypeScript%20interface%5D%28https%3A//segmentfault.com/a/1190000004619949%29</center>"
  },
  {
    "title": "Babel 6 配置",
    "created": "2016-01-07T20:56:11.000Z",
    "updated": "2016-06-03T01:58:57.000Z",
    "tags": [
      "Node",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=7a403ae4-8434-4553-b27f-67269ec57fc4&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n### Babel 6 配置\n\nBabel 6 较之前版本有些变化，几个比较重要的点。\n\n1.  npm package **babel** 已经不在使用了，分成了下列几个 package\n\n    *   **babel-cli**, 适用于命令行\n    *   **babel-core**, 包含了Node API\n    *   **babel-polyfill**, which when required, sets you up with a full ES2015-ish environment\n\n    为了避免冲突，最好卸载之前的 package： **babel**, **babel-core** 等。  \n    安装 Babel 6  \n    `$ npm install -g babel-cli`\n\n2.  babel 6 加入插件机制，默认不使用任何插件，将会直接输出原文。可以配置插件来翻译指定的特性，当然，Babel 也准备好了预设集合，如支持所有的es6语法的预设集合 **es2015**，安装此预设集：\n\n    `$ npm install babel-preset-es2015`\n\n    所有的插件列表：[http://babeljs.io/docs/plugins/](http://babeljs.io/docs/plugins/)\n\n安装好 Babel 和相应的插件之后，再做个简单的配置， Babel 提供了多种配置方式，详细的配置方式见文档：[http://babeljs.io/docs/usage/options/](http://babeljs.io/docs/usage/options/)。这里使用 .babelrc 配置文件的方式。  \n在项目根目录里添加 .babelrc 文件，内容如下：\n\n    { \"plugins\": [\"es2015\"], \"ignore\": [ \"foo.js\", \"bar/**/*.js\" ]}\n\n在项目目录下运行命令：  \n`$ babel script.js`\n\n搞定～\n\n<center style=\"display:none\">%23%23%23Babel%206%20%u914D%u7F6E%0A%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2CNode%5D%0A%0A%0ABabel%206%20%u8F83%u4E4B%u524D%u7248%u672C%u6709%u4E9B%u53D8%u5316%uFF0C%u51E0%u4E2A%u6BD4%u8F83%u91CD%u8981%u7684%u70B9%u3002%0A1.%20npm%20package%20**babel**%20%u5DF2%u7ECF%u4E0D%u5728%u4F7F%u7528%u4E86%uFF0C%u5206%u6210%u4E86%u4E0B%u5217%u51E0%u4E2A%20package%0A-%20**babel-cli**%2C%20%u9002%u7528%u4E8E%u547D%u4EE4%u884C%0A-%20**babel-core**%2C%20%u5305%u542B%u4E86Node%20API%0A-%20**babel-polyfill**%2C%20which%20when%20required%2C%20sets%20you%20up%20with%20a%20full%20ES2015-ish%20environment%0A%0A%09%u4E3A%u4E86%u907F%u514D%u51B2%u7A81%uFF0C%u6700%u597D%u5378%u8F7D%u4E4B%u524D%u7684%20package%uFF1A%20**babel**%2C%20**babel-core**%20%u7B49%u3002%0A%09%u5B89%u88C5%20Babel%206%0A%09%60%24%20npm%20install%20-g%20babel-cli%60%0A%0A2.%20babel%206%20%u52A0%u5165%u63D2%u4EF6%u673A%u5236%uFF0C%u9ED8%u8BA4%u4E0D%u4F7F%u7528%u4EFB%u4F55%u63D2%u4EF6%uFF0C%u5C06%u4F1A%u76F4%u63A5%u8F93%u51FA%u539F%u6587%u3002%u53EF%u4EE5%u914D%u7F6E%u63D2%u4EF6%u6765%u7FFB%u8BD1%u6307%u5B9A%u7684%u7279%u6027%uFF0C%u5F53%u7136%uFF0CBabel%20%u4E5F%u51C6%u5907%u597D%u4E86%u9884%u8BBE%u96C6%u5408%uFF0C%u5982%u652F%u6301%u6240%u6709%u7684es6%u8BED%u6CD5%u7684%u9884%u8BBE%u96C6%u5408%20**es2015**%uFF0C%u5B89%u88C5%u6B64%u9884%u8BBE%u96C6%uFF1A%0A%0A%20%20%20%20%60%24%20npm%20install%20babel-preset-es2015%60%0A%0A%09%u6240%u6709%u7684%u63D2%u4EF6%u5217%u8868%uFF1Ahttp%3A//babeljs.io/docs/plugins/%0A%0A%u5B89%u88C5%u597D%20Babel%20%u548C%u76F8%u5E94%u7684%u63D2%u4EF6%u4E4B%u540E%uFF0C%u518D%u505A%u4E2A%u7B80%u5355%u7684%u914D%u7F6E%uFF0C%20Babel%20%u63D0%u4F9B%u4E86%u591A%u79CD%u914D%u7F6E%u65B9%u5F0F%uFF0C%u8BE6%u7EC6%u7684%u914D%u7F6E%u65B9%u5F0F%u89C1%u6587%u6863%uFF1Ahttp%3A//babeljs.io/docs/usage/options/%u3002%u8FD9%u91CC%u4F7F%u7528%20.babelrc%20%u914D%u7F6E%u6587%u4EF6%u7684%u65B9%u5F0F%u3002%0A%u5728%u9879%u76EE%u6839%u76EE%u5F55%u91CC%u6DFB%u52A0%20.babelrc%20%u6587%u4EF6%uFF0C%u5185%u5BB9%u5982%u4E0B%uFF1A%0A%0A%60%60%60%0A%7B%0A%20%20%22plugins%22%3A%20%5B%22es2015%22%5D%2C%0A%20%20%22ignore%22%3A%20%5B%0A%20%20%20%20%22foo.js%22%2C%0A%20%20%20%20%22bar/**/*.js%22%0A%20%20%5D%0A%7D%0A%60%60%60%0A%0A%u5728%u9879%u76EE%u76EE%u5F55%u4E0B%u8FD0%u884C%u547D%u4EE4%uFF1A%0A%20%60%24%20babel%20script.js%60%0A%20%20%0A%20%20%u641E%u5B9A%uFF5E</center>"
  },
  {
    "title": "Webstorm中使用正则替换文本",
    "created": "2016-01-30T19:51:34.000Z",
    "updated": "2016-06-03T01:50:16.000Z",
    "tags": [
      "替换文本",
      "正则",
      "posts",
      "向后引用"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=24c7939f-703b-4711-9360-dd74d342690e&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n### Webstorm中使用正则替换文本\n\n#### 需求\n\n有这样一段代码：\n\n    var num = req.body.num;var bankcard = req.body.bankcard2;var pay_type = req.body.pay_type;\n\n需要快速替换成如下格式：\n\n    var num = req.param.('num');var bankcard = req.param.('bankcard2');var pay_type = req.param.('pay_type');\n\n#### 分析\n\n显然普通的替换方法做不到这样的效果，看来需要用到正则了，如果只是查找文本，这个正则很好写：\n\n    req.body.\\w+\n\n但是替换的时候用正则怎么做呢？  \n因为使用 WebStorm 开发，所以去 WebStorm Help 文档里瞄一下，哈哈，万能的 WebStorm 果然支持正则替换。见文档：[https://www.jetbrains.com/webstorm/help/find-and-replace-in-path.html](https://www.jetbrains.com/webstorm/help/find-and-replace-in-path.html)\n\n这里讲到了一个 **back references** 向后引用的概念，在替换文本中使用 $n 来表示 back references ，就可以实现动态替换。那 back references 究竟是什么呢，还是看示例吧。\n\n#### 示例\n\n就上文中的需求，我们先写出查询的正则：\n\n    req.body.(\\w+)\n\n这里用到 \\w+ 通配符来适配 req.body. 之后的不同内容，注意这里用括号()包起了 \\w+ ，括号的作用是定义一个 back references。  \n那么替换的正则是：\n\n    req.param.('$1')\n\n就这样，我们使用 $1 来动态替换 (\\w+) 这个back references 匹配到的内容。\n\n#### 总结\n\n1.  正则替换不是所以编辑器都支持的，而且每个编辑器的支持方法都不一致，这里描述的方法只适用于 WebStorm ，理论上适用于 jetbrains 出品的其他编辑器如 IDEA PhpStorm PyCharm 等。\n\n2.  查询的时候顺便找到了 Notepad++ 的正则替换实现，有兴趣的瞄一下：[http://www.crifan.com/files/doc/docbook/rec_soft_npp/release/htmls/npp_func_regex_replace.html](http://www.crifan.com/files/doc/docbook/rec_soft_npp/release/htmls/npp_func_regex_replace.html)\n\n<center style=\"display:none\">%23%23%23Webstorm%u4E2D%u4F7F%u7528%u6B63%u5219%u66FF%u6362%u6587%u672C%0A%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%2C%20%u6B63%u5219%2C%20%u5411%u540E%u5F15%u7528%2C%20%u66FF%u6362%u6587%u672C%5D%0A%0A%0A%0A%23%23%23%23%20%u9700%u6C42%0A%u6709%u8FD9%u6837%u4E00%u6BB5%u4EE3%u7801%uFF1A%0A%0A%60%60%60%0Avar%20num%20%3D%20req.body.num%3B%0Avar%20bankcard%20%3D%20req.body.bankcard2%3B%0Avar%20pay_type%20%3D%20req.body.pay_type%3B%0A%60%60%60%0A%0A%u9700%u8981%u5FEB%u901F%u66FF%u6362%u6210%u5982%u4E0B%u683C%u5F0F%uFF1A%0A%0A%60%60%60%0Avar%20num%20%3D%20req.param.%28%27num%27%29%3B%0Avar%20bankcard%20%3D%20req.param.%28%27bankcard2%27%29%3B%0Avar%20pay_type%20%3D%20req.param.%28%27pay_type%27%29%3B%0A%60%60%60%0A%0A%23%23%23%23%u5206%u6790%0A%u663E%u7136%u666E%u901A%u7684%u66FF%u6362%u65B9%u6CD5%u505A%u4E0D%u5230%u8FD9%u6837%u7684%u6548%u679C%uFF0C%u770B%u6765%u9700%u8981%u7528%u5230%u6B63%u5219%u4E86%uFF0C%u5982%u679C%u53EA%u662F%u67E5%u627E%u6587%u672C%uFF0C%u8FD9%u4E2A%u6B63%u5219%u5F88%u597D%u5199%uFF1A%0A%0A%60%60%60%0Areq.body.%5Cw+%0A%60%60%60%0A%0A%u4F46%u662F%u66FF%u6362%u7684%u65F6%u5019%u7528%u6B63%u5219%u600E%u4E48%u505A%u5462%uFF1F%0A%u56E0%u4E3A%u4F7F%u7528%20WebStorm%20%u5F00%u53D1%uFF0C%u6240%u4EE5%u53BB%20WebStorm%20Help%20%u6587%u6863%u91CC%u7784%u4E00%u4E0B%uFF0C%u54C8%u54C8%uFF0C%u4E07%u80FD%u7684%20WebStorm%20%u679C%u7136%u652F%u6301%u6B63%u5219%u66FF%u6362%u3002%u89C1%u6587%u6863%uFF1Ahttps%3A//www.jetbrains.com/webstorm/help/find-and-replace-in-path.html%0A%0A%u8FD9%u91CC%u8BB2%u5230%u4E86%u4E00%u4E2A%20**back%20references**%20%u5411%u540E%u5F15%u7528%u7684%u6982%u5FF5%uFF0C%u5728%u66FF%u6362%u6587%u672C%u4E2D%u4F7F%u7528%20%24n%20%u6765%u8868%u793A%20back%20references%20%uFF0C%u5C31%u53EF%u4EE5%u5B9E%u73B0%u52A8%u6001%u66FF%u6362%u3002%u90A3%20back%20references%20%u7A76%u7ADF%u662F%u4EC0%u4E48%u5462%uFF0C%u8FD8%u662F%u770B%u793A%u4F8B%u5427%u3002%0A%0A%23%23%23%23%u793A%u4F8B%0A%u5C31%u4E0A%u6587%u4E2D%u7684%u9700%u6C42%uFF0C%u6211%u4EEC%u5148%u5199%u51FA%u67E5%u8BE2%u7684%u6B63%u5219%uFF1A%0A%0A%60%60%60%0Areq.body.%28%5Cw+%29%0A%60%60%60%0A%0A%u8FD9%u91CC%u7528%u5230%20%5Cw+%20%u901A%u914D%u7B26%u6765%u9002%u914D%20req.body.%20%u4E4B%u540E%u7684%u4E0D%u540C%u5185%u5BB9%uFF0C%u6CE8%u610F%u8FD9%u91CC%u7528%u62EC%u53F7%28%29%u5305%u8D77%u4E86%20%5Cw+%20%uFF0C%u62EC%u53F7%u7684%u4F5C%u7528%u662F%u5B9A%u4E49%u4E00%u4E2A%20back%20references%u3002%0A%u90A3%u4E48%u66FF%u6362%u7684%u6B63%u5219%u662F%uFF1A%0A%0A%60%60%60%0Areq.param.%28%27%241%27%29%0A%60%60%60%0A%0A%u5C31%u8FD9%u6837%uFF0C%u6211%u4EEC%u4F7F%u7528%20%241%20%u6765%u52A8%u6001%u66FF%u6362%20%28%5Cw+%29%20%u8FD9%u4E2Aback%20references%20%u5339%u914D%u5230%u7684%u5185%u5BB9%u3002%0A%0A%23%23%23%23%u603B%u7ED3%0A1.%20%u6B63%u5219%u66FF%u6362%u4E0D%u662F%u6240%u4EE5%u7F16%u8F91%u5668%u90FD%u652F%u6301%u7684%uFF0C%u800C%u4E14%u6BCF%u4E2A%u7F16%u8F91%u5668%u7684%u652F%u6301%u65B9%u6CD5%u90FD%u4E0D%u4E00%u81F4%uFF0C%u8FD9%u91CC%u63CF%u8FF0%u7684%u65B9%u6CD5%u53EA%u9002%u7528%u4E8E%20WebStorm%20%uFF0C%u7406%u8BBA%u4E0A%u9002%u7528%u4E8E%20jetbrains%20%u51FA%u54C1%u7684%u5176%u4ED6%u7F16%u8F91%u5668%u5982%20IDEA%20PhpStorm%20PyCharm%20%u7B49%u3002%0A%0A2.%20%u67E5%u8BE2%u7684%u65F6%u5019%u987A%u4FBF%u627E%u5230%u4E86%20Notepad++%20%u7684%u6B63%u5219%u66FF%u6362%u5B9E%u73B0%uFF0C%u6709%u5174%u8DA3%u7684%u7784%u4E00%u4E0B%uFF1Ahttp%3A//www.crifan.com/files/doc/docbook/rec_soft_npp/release/htmls/npp_func_regex_replace.html%0A</center>"
  },
  {
    "title": "在一个系统里使用两种不同版本的 Node",
    "created": "2016-02-25T19:43:39.000Z",
    "updated": "2016-06-03T01:50:07.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=86c67f76-f9dd-4ee7-9b69-61bb10335e2e&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n### 在一个系统里使用两种不同版本的 Node\n\n切换 Node 版本的工具有 n nvm 等，但是如果你需要同时运行两个项目，两个项目使用 Node 版本不一致的话，还是挺麻烦的，需要每次都进行切换。\n\n这里介绍一个简单的办法解决这个问题。\n\n1.  找到 Node 可执行文件的位置，一般是 `/usr/local/bin/node`\n2.  `sudo cp /usr/local/bin/node /usr/local/bin/node-v10`\n3.  使用 n 切换 Node 版本：  \n    `n latest`\n\n4.  查看两个 Node 的版本：  \n    `node-v10 -v`  \n    `node -v`\n\n搞定，这样在运行的时候选择你需要的 Node 版本就行了。\n\n<center style=\"display:none\">%23%23%23%u5728%u4E00%u4E2A%u7CFB%u7EDF%u91CC%u4F7F%u7528%u4E24%u79CD%u4E0D%u540C%u7248%u672C%u7684%20Node%0A%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%0A%0A%u5207%u6362%20Node%20%u7248%u672C%u7684%u5DE5%u5177%u6709%20n%20nvm%20%u7B49%uFF0C%u4F46%u662F%u5982%u679C%u4F60%u9700%u8981%u540C%u65F6%u8FD0%u884C%u4E24%u4E2A%u9879%u76EE%uFF0C%u4E24%u4E2A%u9879%u76EE%u4F7F%u7528%20Node%20%u7248%u672C%u4E0D%u4E00%u81F4%u7684%u8BDD%uFF0C%u8FD8%u662F%u633A%u9EBB%u70E6%u7684%uFF0C%u9700%u8981%u6BCF%u6B21%u90FD%u8FDB%u884C%u5207%u6362%u3002%0A%0A%u8FD9%u91CC%u4ECB%u7ECD%u4E00%u4E2A%u7B80%u5355%u7684%u529E%u6CD5%u89E3%u51B3%u8FD9%u4E2A%u95EE%u9898%u3002%0A1.%20%u627E%u5230%20Node%20%u53EF%u6267%u884C%u6587%u4EF6%u7684%u4F4D%u7F6E%uFF0C%u4E00%u822C%u662F%20%20%60/usr/local/bin/node%60%0A2.%20%60sudo%20cp%20/usr/local/bin/node%20/usr/local/bin/node-v10%60%0A3.%20%u4F7F%u7528%20n%20%u5207%u6362%20Node%20%u7248%u672C%uFF1A%0A%09%60n%20latest%60%0A%0A%0A4.%20%u67E5%u770B%u4E24%u4E2A%20Node%20%u7684%u7248%u672C%uFF1A%0A%09%60node-v10%20-v%60%0A%09%60node%20-v%60%0A%0A%u641E%u5B9A%uFF0C%u8FD9%u6837%u5728%u8FD0%u884C%u7684%u65F6%u5019%u9009%u62E9%u4F60%u9700%u8981%u7684%20Node%20%u7248%u672C%u5C31%u884C%u4E86%u3002%0A</center>"
  },
  {
    "title": "单独测试 waterline",
    "created": "2016-04-22T00:20:57.000Z",
    "updated": "2016-06-03T01:49:40.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=b4861021-7eeb-4fb4-a9f9-113860fc8c44&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# 单独测试 waterline\n\n本文主旨：更简单更快速地测试 sails Model 操作。\n\nwaterline 是 sails 里使用的 orm 工具。  \nsails 官方提供了 mocha 的测试例子 [Testing | Sails.js Documentation](http://sailsjs.org/documentation/concepts/testing)  \n其原理主要是在 mocha 启动之前，先启动 sails，这样全局变量 sails 以及全局 Model 、Service 对象就生成了，之后就可以针对 sails 的功能进行测试了。  \n在 test 目录的 bootstrap.test.js 添加如下代码：\n\n    var sails = require('sails');before(function(done) { // Increase the Mocha timeout so that Sails has enough time to lift. this.timeout(5000); sails.lift({ // configuration for testing purposes }, function(err, server) { if (err) return done(err); // here you can load fixtures, etc. done(err, sails); });});after(function(done) { // here you can clear fixtures, etc. sails.lower(done);});\n\n看起来很简单对不对。  \n是很简单，但是，用过 sails 的童鞋有清楚，项目稍微大一点的时候，sails 的启动速度有点慢，假设你只是想测试一个 model 的一个简单操作，你还是需要启动整个 sails。每次操作你都需要等待几十秒的时间。。。  \n国外某位童鞋还专门吐槽了这个事情：\n\n*   sails 测试慢成狗啦 [node-require-is-dog-slow](https://kev.inburke.com/kevin/node-require-is-dog-slow/)\n*   吐槽 sails 和 waterline 的各种问题 [dont-use-sails-or-waterline](https://kev.inburke.com/kevin/dont-use-sails-or-waterline/)\n\n好吧，这个问题的确是存在的，那要怎么解决呢，如果尝试把对 controller 和 service（操作数据库）的测试分开，那么在测试 service 的时候只加载 orm 会不会快一点呢？来试一试吧。\n\n## 单独加载 waterline\n\n### 相关文档\n\n1.  waterline 的官方文档提供了 [getting started 示例](https://github.com/balderdashy/waterline-docs/blob/master/introduction/getting-started.md)\n\n比较简单，示例里连接的是内存数据库，没有提供怎么配置连接 mongo 的信息。\n\n2.  sails 的人员也提供了一个 Express 里使用 waterline 的示例 [Waterline v0.10 Express Example.js](https://gist.github.com/mikermcneil/8443381)\n\n跟上一个例子同样的问题，还是没讲怎么配置 mongo。\n\n<en-media longdesc=\"./坑爹.jpg\" alt=\"Alt text\" title=\"\" type=\"image/jpeg\" hash=\"7958de4a6a23e4c7410c122802ba6024\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### 自己实现\n\n既然网上的例子不靠谱，那么就去扒 sails 的源码吧。  \n让我们小心翼翼地打开 node_module 下的 sails 目录\n\n<en-media longdesc=\"./1461308934571.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"0f3215bb31f298a45e30913aa0c5b303\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n额，好直接，文件名已经告诉我们 waterline 是在哪里初始化的了。点进去看看吧。\n\n    module.exports = function howto_buildORM(sails) { return function buildORM(modelDefs, cb) { // 来自 Nick 注释 这里拿到项目的定义的 Model 然后逐个 waterline.loadCollection // -> Instantiate ORM in memory. // -> Iterate through each model definition: // -> Create a proper Waterline Collection for each model // -> then register it w/ the ORM. sails.log.verbose('Starting ORM...'); var waterline = new Waterline(); _.each(modelDefs, function loadModelsIntoWaterline(modelDef, modelID) { sails.log.silly('Registering model `' + modelID + '` in Waterline (ORM)'); waterline.loadCollection(Waterline.Collection.extend(modelDef)); }); // 来自 Nick 注释 拿系统配置的 connections // Find all the connections used var connections = _.reduce(sails.adapters, function getConnectionsInPlay(connections, adapter, adapterKey) { _.each(sails.config.connections, function(connection, connectionKey) { if (adapterKey === connection.adapter) { connections[connectionKey] = connection; } }); //console.log('connections', connections); return connections; }, {}); var appDefaults = sails.config.models; // -> \"Initialize\" ORM // : This performs tasks like managing the schema across associations, // : hooking up models to their connections, and auto-migrations. waterline.initialize({ adapters: sails.adapters, connections: connections, defaults: appDefaults }, function (err, orm) { if (err) return cb(err); var models = orm.collections || []; _.each(models, function eachInstantiatedModel(thisModel, modelID) { // 来自 Nick 注释 这个操作不能省 _.bindAll(thisModel); ...... ...... ...... ...... sails.models[modelID] = thisModel; // 配置全局 Models if (sails.config.globals && sails.config.globals.models) { var globalName = sails.models[modelID].globalId || sails.models[modelID].identity; global[globalName] = thisModel; } }); cb(); }); };};\n\n吧啦吧啦一大堆，从这源码可以得到两个关键的信息，\n\n1.  要先把 api/model 里定义的 models 都 load into waterline。\n2.  waterline.initialize 的时候需要3个参数：\n\n    *   adapters: 也就是那个 ‘sails-mongo’\n    *   connections: mongo 连接的配置信息\n    *   defaults: 连接方式，就是 models.js 里配置的那个 migrate\n\n#### load models\n\n先解决第一个问题， load models，源码里暂时没看到怎么实现的，自己实现也不难：\n\n     /** * require api/models 里面的每个对象 * @param connection 每个 models 配置的默认 connection * @returns {{}} */function getModelDefs(connection) { console.log('Loading app models...'); let models = {}; let sourceFolder = process.cwd() + '/api/models'; let files = fs.readdirSync(sourceFolder); for (let i = 0; i < files.length; i++) { try { if (files[i].includes('.js')) { let model = require('../api/models/' + files[i]); let identity = files[i].toLowerCase().replace('.js', ''); console.log('found model', identity); model.identity = identity; model.connection = connection; models[identity] = model; } } catch (err) { console.log('extend model err', err.stack || err); } } return models}\n\n#### waterline initialize\n\n好了，接下来是第二个问题 waterline initialize。\n\n1.  先拿到项目里的 /config/connections 配置：\n\n     /** * 读取系统的 connections 配置 * @param connectionName 指定的连接 * @returns {Object} */function getConnections(connectionName) { let connections = require('../config/connections'); if (connectionName) { let result = {}; result[connectionName] = connections.connections[connectionName]; return result } else { return connections.connections }}\n\n2.  准备完毕，调用 waterline.initialize\n\n    module.exports.buildORM = function (connectionName, appDefaults, cb) { // -> Instantiate ORM in memory. // -> Iterate through each model definition: // -> Create a proper Waterline Collection for each model // -> then register it w/ the ORM. console.log('Starting ORM...'); if (!connectionName || !appDefaults) { return cb('miss connectionName or appDefaults') } appDefaults.connection = connectionName; let modelDefs = getModelDefs(connectionName); let waterline = new Waterline(); _.each(modelDefs, function loadModelsIntoWaterline(modelDef, modelID) { console.log('Registering model `' + modelID + '` in Waterline (ORM)'); waterline.loadCollection(Waterline.Collection.extend(modelDef)); }); // Find all the connections used let connections = getConnections(connectionName); let adapters = { 'sails-mongo': sailsMongoAdapter }; console.log('buildORM appDefaults', appDefaults); console.log('buildORM connections', connections); console.log('buildORM adapters', Object.keys(adapters)); // -> \"Initialize\" ORM // : This performs tasks like managing the schema across associations, // : hooking up models to their connections, and auto-migrations. waterline.initialize({ adapters: adapters, connections: connections, defaults: appDefaults }, function (err, orm) { if (err) return cb(err); let models = orm.collections || []; _.each(models, function eachInstantiatedModel(thisModel, modelID) { // Bind context for models // (this (breaks?)allows usage with tools like `async`) _.bindAll(thisModel); }); // Success cb(null, models); });};\n\n搞定，这样 waterline 就启动完毕啦，默认加载 api/models 里定义的对象，加载 /config/connections 的里 DB 连接信息。\n\n### 在 Mocha 里使用 waterline\n\n#### 初始化\n\n在 test 目录的 bootstrap.test.js 添加如下代码：\n\n    'use strict';let BuildWaterLine = require('../hack/BuildWaterLine');let _ = require('underscore');let start_time = Date.now()before(function (done) { // Increase the Mocha timeout so that Sails has enough time to lift. this.timeout(10000); // Initialize Waterline BuildWaterLine.buildORM('testMongodb', {migrate: 'drop'}, function (err, models) { if (err) throw err; console.log('buildORM models', Object.keys(models)); console.log('waterline init time %s s', (Date.now() - start_time) / 1000); done(); })});after(function (done) { done(); // here you can clear fixtures, etc.});\n\nBuildWaterLine.buildORM 方法就是上文我们自定义的加载方法，该方法返回的 models 就是每个带查询方法的 model 对象啦。\n\n#### 怎么调用 Model 方法\n\n上面只是返回了 models 对象，怎么在 mocha 的测试文件里使用到这些对象呢，两个方法。\n\n1.  全局化，跟 sails 那样\n\n     _.each(models, function eachInstantiatedModel(thisModel, modelID) { global[modelID] = thisModel; });\n\n需要注意 modelID 的大小写问题哦。把每个 Model 都全局化之后，就可以直接在 mocha 直接调用啦。\n\n2.  拓展到其他对象上\n\n    var _ = require('lodash');let UserDao = require('../dao/UserDao')_.extend(UserDao, models['user']);\n\nlodash 的 extend 提供了对象拓展功能。上文的代码把 user 这个 Model 的方法拓展到了 UserDao 对象上。  \n或者你可以将 Model 拓展到 api/models 里的同名对象。这话听起来是不是很奇怪？这里有个细节你需要了解：  \n**sails 里全局的 Model 对象，例如 User ，和你在 api/models/User.js 对象是不一样的哦**  \n至于为什么，你自己去 Google 吧。\n\n做好拓展后，在测试文件里你只需要这样引入\n\n    let UserDao = require('......../UserDao');UserDao.create({phone: '13848965325'}, (err, cUser) => { should.exist(cUser); done(err)})\n\n## 结果\n\n单独加载 waterline 耗时\n\n    waterline init time 0.532 s\n\nsails 启动耗时\n\n    sails start time 3.122 s\n\n这个对比结果是基于新建的 sails 项目，只有4个 Model 文件。\n\n## 源码\n\n[https://github.com/myfjdthink/CodeNode/tree/master/sails/waterline_init](https://github.com/myfjdthink/CodeNode/tree/master/sails/waterline_init)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%0A%23%u5355%u72EC%u6D4B%u8BD5%20waterline%0A%0A%u672C%u6587%u4E3B%u65E8%uFF1A%u66F4%u7B80%u5355%u66F4%u5FEB%u901F%u5730%u6D4B%u8BD5%20sails%20Model%20%u64CD%u4F5C%u3002%0A%0Awaterline%20%u662F%20sails%20%u91CC%u4F7F%u7528%u7684%20orm%20%u5DE5%u5177%u3002%0Asails%20%u5B98%u65B9%u63D0%u4F9B%u4E86%20mocha%20%u7684%u6D4B%u8BD5%u4F8B%u5B50%20%5BTesting%20%7C%20Sails.js%20Documentation%5D%28http%3A//sailsjs.org/documentation/concepts/testing%29%0A%u5176%u539F%u7406%u4E3B%u8981%u662F%u5728%20mocha%20%u542F%u52A8%u4E4B%u524D%uFF0C%u5148%u542F%u52A8%20sails%uFF0C%u8FD9%u6837%u5168%u5C40%u53D8%u91CF%20sails%20%u4EE5%u53CA%u5168%u5C40%20Model%20%u3001Service%20%u5BF9%u8C61%u5C31%u751F%u6210%u4E86%uFF0C%u4E4B%u540E%u5C31%u53EF%u4EE5%u9488%u5BF9%20sails%20%u7684%u529F%u80FD%u8FDB%u884C%u6D4B%u8BD5%u4E86%u3002%0A%u5728%20test%20%u76EE%u5F55%u7684%20bootstrap.test.js%20%u6DFB%u52A0%u5982%u4E0B%u4EE3%u7801%uFF1A%0A%0A%60%60%60%0Avar%20sails%20%3D%20require%28%27sails%27%29%3B%0A%0Abefore%28function%28done%29%20%7B%0A%0A%20%20//%20Increase%20the%20Mocha%20timeout%20so%20that%20Sails%20has%20enough%20time%20to%20lift.%0A%20%20this.timeout%285000%29%3B%0A%0A%20%20sails.lift%28%7B%0A%20%20%20%20//%20configuration%20for%20testing%20purposes%0A%20%20%7D%2C%20function%28err%2C%20server%29%20%7B%0A%20%20%20%20if%20%28err%29%20return%20done%28err%29%3B%0A%20%20%20%20//%20here%20you%20can%20load%20fixtures%2C%20etc.%0A%20%20%20%20done%28err%2C%20sails%29%3B%0A%20%20%7D%29%3B%0A%7D%29%3B%0A%0Aafter%28function%28done%29%20%7B%0A%20%20//%20here%20you%20can%20clear%20fixtures%2C%20etc.%0A%20%20sails.lower%28done%29%3B%0A%7D%29%3B%0A%60%60%60%0A%u770B%u8D77%u6765%u5F88%u7B80%u5355%u5BF9%u4E0D%u5BF9%u3002%0A%u662F%u5F88%u7B80%u5355%uFF0C%u4F46%u662F%uFF0C%u7528%u8FC7%20sails%20%u7684%u7AE5%u978B%u6709%u6E05%u695A%uFF0C%u9879%u76EE%u7A0D%u5FAE%u5927%u4E00%u70B9%u7684%u65F6%u5019%uFF0Csails%20%u7684%u542F%u52A8%u901F%u5EA6%u6709%u70B9%u6162%uFF0C%u5047%u8BBE%u4F60%u53EA%u662F%u60F3%u6D4B%u8BD5%u4E00%u4E2A%20model%20%u7684%u4E00%u4E2A%u7B80%u5355%u64CD%u4F5C%uFF0C%u4F60%u8FD8%u662F%u9700%u8981%u542F%u52A8%u6574%u4E2A%20sails%u3002%u6BCF%u6B21%u64CD%u4F5C%u4F60%u90FD%u9700%u8981%u7B49%u5F85%u51E0%u5341%u79D2%u7684%u65F6%u95F4%u3002%u3002%u3002%0A%u56FD%u5916%u67D0%u4F4D%u7AE5%u978B%u8FD8%u4E13%u95E8%u5410%u69FD%u4E86%u8FD9%u4E2A%u4E8B%u60C5%uFF1A%0A-%20sails%20%u6D4B%u8BD5%u6162%u6210%u72D7%u5566%20%5Bnode-require-is-dog-slow%5D%28https%3A//kev.inburke.com/kevin/node-require-is-dog-slow/%29%0A-%20%u5410%u69FD%20sails%20%u548C%20waterline%20%u7684%u5404%u79CD%u95EE%u9898%20%5Bdont-use-sails-or-waterline%5D%28https%3A//kev.inburke.com/kevin/dont-use-sails-or-waterline/%29%20%0A%0A%u597D%u5427%uFF0C%u8FD9%u4E2A%u95EE%u9898%u7684%u786E%u662F%u5B58%u5728%u7684%uFF0C%u90A3%u8981%u600E%u4E48%u89E3%u51B3%u5462%uFF0C%u5982%u679C%u5C1D%u8BD5%u628A%u5BF9%20controller%20%u548C%20service%uFF08%u64CD%u4F5C%u6570%u636E%u5E93%uFF09%u7684%u6D4B%u8BD5%u5206%u5F00%uFF0C%u90A3%u4E48%u5728%u6D4B%u8BD5%20service%20%u7684%u65F6%u5019%u53EA%u52A0%u8F7D%20orm%20%u4F1A%u4E0D%u4F1A%u5FEB%u4E00%u70B9%u5462%uFF1F%u6765%u8BD5%u4E00%u8BD5%u5427%u3002%0A%0A%23%23%u5355%u72EC%u52A0%u8F7D%20waterline%0A%23%23%23%u76F8%u5173%u6587%u6863%0A1.%20waterline%20%u7684%u5B98%u65B9%u6587%u6863%u63D0%u4F9B%u4E86%20%5B%20getting%20started%20%u793A%u4F8B%5D%28https%3A//github.com/balderdashy/waterline-docs/blob/master/introduction/getting-started.md%29%0A%0A%u6BD4%u8F83%u7B80%u5355%uFF0C%u793A%u4F8B%u91CC%u8FDE%u63A5%u7684%u662F%u5185%u5B58%u6570%u636E%u5E93%uFF0C%u6CA1%u6709%u63D0%u4F9B%u600E%u4E48%u914D%u7F6E%u8FDE%u63A5%20mongo%20%u7684%u4FE1%u606F%u3002%0A%0A2.%20sails%20%u7684%u4EBA%u5458%u4E5F%u63D0%u4F9B%u4E86%u4E00%u4E2A%20Express%20%u91CC%u4F7F%u7528%20waterline%20%u7684%u793A%u4F8B%20%5BWaterline%20v0.10%20Express%20Example.js%5D%28https%3A//gist.github.com/mikermcneil/8443381%29%0A%0A%u8DDF%u4E0A%u4E00%u4E2A%u4F8B%u5B50%u540C%u6837%u7684%u95EE%u9898%uFF0C%u8FD8%u662F%u6CA1%u8BB2%u600E%u4E48%u914D%u7F6E%20mongo%u3002%0A%21%5BAlt%20text%5D%28./%u5751%u7239.jpg%29%0A%0A%23%23%23%u81EA%u5DF1%u5B9E%u73B0%0A%0A%u65E2%u7136%u7F51%u4E0A%u7684%u4F8B%u5B50%u4E0D%u9760%u8C31%uFF0C%u90A3%u4E48%u5C31%u53BB%u6252%20sails%20%u7684%u6E90%u7801%u5427%u3002%0A%u8BA9%u6211%u4EEC%u5C0F%u5FC3%u7FFC%u7FFC%u5730%u6253%u5F00%20node_module%20%u4E0B%u7684%20sails%20%u76EE%u5F55%0A%21%5BAlt%20text%5D%28./1461308934571.png%29%0A%0A%u989D%uFF0C%u597D%u76F4%u63A5%uFF0C%u6587%u4EF6%u540D%u5DF2%u7ECF%u544A%u8BC9%u6211%u4EEC%20waterline%20%u662F%u5728%u54EA%u91CC%u521D%u59CB%u5316%u7684%u4E86%u3002%u70B9%u8FDB%u53BB%u770B%u770B%u5427%u3002%0A%0A%60%60%60%0Amodule.exports%20%3D%20function%20howto_buildORM%28sails%29%20%7B%0A%20%20return%20function%20buildORM%28modelDefs%2C%20cb%29%20%7B%0A%20%20%20%20//%20%u6765%u81EA%20Nick%20%u6CE8%u91CA%20%u8FD9%u91CC%u62FF%u5230%u9879%u76EE%u7684%u5B9A%u4E49%u7684%20Model%20%u7136%u540E%u9010%u4E2A%20waterline.loadCollection%0A%20%20%20%20//%20-%3E%20Instantiate%20ORM%20in%20memory.%0A%20%20%20%20//%20-%3E%20Iterate%20through%20each%20model%20definition%3A%0A%20%20%20%20//%20%20%20%20-%3E%20Create%20a%20proper%20Waterline%20Collection%20for%20each%20model%0A%20%20%20%20//%20%20%20%20-%3E%20then%20register%20it%20w/%20the%20ORM.%0A%20%20%20%20sails.log.verbose%28%27Starting%20ORM...%27%29%3B%0A%20%20%20%20var%20waterline%20%3D%20new%20Waterline%28%29%3B%0A%20%20%20%20_.each%28modelDefs%2C%20function%20loadModelsIntoWaterline%28modelDef%2C%20modelID%29%20%7B%0A%20%20%20%20%20%20sails.log.silly%28%27Registering%20model%20%60%27%20+%20modelID%20+%20%27%60%20in%20Waterline%20%28ORM%29%27%29%3B%0A%20%20%20%20%20%20waterline.loadCollection%28Waterline.Collection.extend%28modelDef%29%29%3B%0A%20%20%20%20%7D%29%3B%0A%0A%20%20%20%20//%20%u6765%u81EA%20Nick%20%u6CE8%u91CA%20%u62FF%u7CFB%u7EDF%u914D%u7F6E%u7684%20connections%0A%20%20%20%20//%20Find%20all%20the%20connections%20used%0A%20%20%20%20var%20connections%20%3D%20_.reduce%28sails.adapters%2C%20function%20getConnectionsInPlay%28connections%2C%20adapter%2C%20adapterKey%29%20%7B%0A%20%20%20%20%20%20_.each%28sails.config.connections%2C%20function%28connection%2C%20connectionKey%29%20%7B%0A%20%20%20%20%20%20%20%20if%20%28adapterKey%20%3D%3D%3D%20connection.adapter%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20connections%5BconnectionKey%5D%20%3D%20connection%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%20%20//console.log%28%27connections%27%2C%20connections%29%3B%0A%20%20%20%20%20%20return%20connections%3B%0A%20%20%20%20%7D%2C%20%7B%7D%29%3B%0A%20%20%20%20%0A%20%20%20%20var%20appDefaults%20%3D%20sails.config.models%3B%0A%20%20%20%20//%20-%3E%20%22Initialize%22%20ORM%0A%20%20%20%20//%20%20%20%20%3A%20This%20performs%20tasks%20like%20managing%20the%20schema%20across%20associations%2C%0A%20%20%20%20//%20%20%20%20%3A%20hooking%20up%20models%20to%20their%20connections%2C%20and%20auto-migrations.%0A%20%20%20%20waterline.initialize%28%7B%0A%20%20%20%20%20%20adapters%3A%20sails.adapters%2C%0A%20%20%20%20%20%20connections%3A%20connections%2C%0A%20%20%20%20%20%20defaults%3A%20appDefaults%0A%20%20%20%20%7D%2C%20function%20%28err%2C%20orm%29%20%7B%0A%20%20%20%20%20%20if%20%28err%29%20return%20cb%28err%29%3B%0A%0A%20%20%20%20%20%20var%20models%20%3D%20orm.collections%20%7C%7C%20%5B%5D%3B%0A%0A%20%20%20%20%20%20_.each%28models%2C%20function%20eachInstantiatedModel%28thisModel%2C%20modelID%29%20%7B%0A%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20//%20%u6765%u81EA%20Nick%20%u6CE8%u91CA%20%u8FD9%u4E2A%u64CD%u4F5C%u4E0D%u80FD%u7701%0A%20%20%20%20%20%20%20%20_.bindAll%28thisModel%29%3B%0A%0A%20%20%20%20%20%20%20%20......%0A%20%20%20%20%20%20%20%20......%0A%20%20%20%20%20%20%20%20......%0A%20%20%20%20%20%20%20%20......%0A%0A%20%20%20%20%20%20%20%20sails.models%5BmodelID%5D%20%3D%20thisModel%3B%0A%0A%20%20%20%20%20%20%20%20//%20%u914D%u7F6E%u5168%u5C40%20Models%0A%20%20%20%20%20%20%20%20if%20%28sails.config.globals%20%26%26%20sails.config.globals.models%29%20%7B%0A%20%20%20%20%20%20%20%20%20%20var%20globalName%20%3D%20sails.models%5BmodelID%5D.globalId%20%7C%7C%20sails.models%5BmodelID%5D.identity%3B%0A%20%20%20%20%20%20%20%20%20%20global%5BglobalName%5D%20%3D%20thisModel%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%20%20cb%28%29%3B%0A%20%20%20%20%7D%29%3B%0A%20%20%7D%3B%0A%7D%3B%0A%60%60%60%0A%0A%0A%u5427%u5566%u5427%u5566%u4E00%u5927%u5806%uFF0C%u4ECE%u8FD9%u6E90%u7801%u53EF%u4EE5%u5F97%u5230%u4E24%u4E2A%u5173%u952E%u7684%u4FE1%u606F%uFF0C%0A1.%20%u8981%u5148%u628A%20api/model%20%u91CC%u5B9A%u4E49%u7684%20models%20%u90FD%20load%20into%20waterline%u3002%0A2.%20waterline.initialize%20%u7684%u65F6%u5019%u9700%u89813%u4E2A%u53C2%u6570%uFF1A%0A%0A-%20adapters%3A%20%20%u4E5F%u5C31%u662F%u90A3%u4E2A%20%u2018sails-mongo%u2019%0A-%20connections%3A%20%20mongo%20%u8FDE%u63A5%u7684%u914D%u7F6E%u4FE1%u606F%0A-%20defaults%3A%20%20%u8FDE%u63A5%u65B9%u5F0F%uFF0C%u5C31%u662F%20models.js%20%u91CC%u914D%u7F6E%u7684%u90A3%u4E2A%20migrate%0A%0A%23%23%23%23%20load%20models%0A%20%0A%20%u5148%u89E3%u51B3%u7B2C%u4E00%u4E2A%u95EE%u9898%uFF0C%20load%20models%uFF0C%u6E90%u7801%u91CC%u6682%u65F6%u6CA1%u770B%u5230%u600E%u4E48%u5B9E%u73B0%u7684%uFF0C%u81EA%u5DF1%u5B9E%u73B0%u4E5F%u4E0D%u96BE%uFF1A%0A%0A%60%60%60%0A%20/**%0A%20*%20require%20api/models%20%u91CC%u9762%u7684%u6BCF%u4E2A%u5BF9%u8C61%0A%20*%20@param%20connection%20%u6BCF%u4E2A%20models%20%u914D%u7F6E%u7684%u9ED8%u8BA4%20connection%0A%20*%20@returns%20%7B%7B%7D%7D%0A%20*/%0Afunction%20getModelDefs%28connection%29%20%7B%0A%20%20console.log%28%27Loading%20app%20models...%27%29%3B%0A%20%20let%20models%20%3D%20%7B%7D%3B%0A%20%20let%20sourceFolder%20%3D%20process.cwd%28%29%20+%20%27/api/models%27%3B%0A%20%20let%20files%20%3D%20fs.readdirSync%28sourceFolder%29%3B%0A%20%20for%20%28let%20i%20%3D%200%3B%20i%20%3C%20files.length%3B%20i++%29%20%7B%0A%20%20%20%20try%20%7B%0A%20%20%20%20%20%20if%20%28files%5Bi%5D.includes%28%27.js%27%29%29%20%7B%0A%20%20%20%20%20%20%20%20let%20model%20%3D%20require%28%27../api/models/%27%20+%20files%5Bi%5D%29%3B%0A%20%20%20%20%20%20%20%20let%20identity%20%3D%20files%5Bi%5D.toLowerCase%28%29.replace%28%27.js%27%2C%20%27%27%29%3B%0A%20%20%20%20%20%20%20%20console.log%28%27found%20model%27%2C%20identity%29%3B%0A%20%20%20%20%20%20%20%20model.identity%20%3D%20identity%3B%0A%20%20%20%20%20%20%20%20model.connection%20%3D%20connection%3B%0A%20%20%20%20%20%20%20%20models%5Bidentity%5D%20%3D%20model%3B%0A%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%20catch%20%28err%29%20%7B%0A%20%20%20%20%20%20console.log%28%27extend%20model%20err%27%2C%20err.stack%20%7C%7C%20err%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%0A%20%20return%20models%0A%7D%0A%60%60%60%0A%23%23%23%23%20waterline%20initialize%0A%0A%u597D%u4E86%uFF0C%u63A5%u4E0B%u6765%u662F%u7B2C%u4E8C%u4E2A%u95EE%u9898%20waterline%20initialize%u3002%0A%0A%201.%20%u5148%u62FF%u5230%u9879%u76EE%u91CC%u7684%20/config/connections%20%u914D%u7F6E%uFF1A%0A%0A%60%60%60%0A%20/**%0A%20*%20%u8BFB%u53D6%u7CFB%u7EDF%u7684%20connections%20%u914D%u7F6E%0A%20*%20@param%20connectionName%20%u6307%u5B9A%u7684%u8FDE%u63A5%0A%20*%20@returns%20%7BObject%7D%0A%20*/%0Afunction%20getConnections%28connectionName%29%20%7B%0A%20%20let%20connections%20%3D%20require%28%27../config/connections%27%29%3B%0A%20%20if%20%28connectionName%29%20%7B%0A%20%20%20%20let%20result%20%3D%20%7B%7D%3B%0A%20%20%20%20result%5BconnectionName%5D%20%3D%20connections.connections%5BconnectionName%5D%3B%0A%20%20%20%20return%20result%0A%20%20%7D%20else%20%7B%0A%20%20%20%20return%20connections.connections%0A%20%20%7D%0A%7D%0A%60%60%60%0A%0A%0A2.%20%u51C6%u5907%u5B8C%u6BD5%uFF0C%u8C03%u7528%20waterline.initialize%0A%0A%60%60%60%0Amodule.exports.buildORM%20%3D%20function%20%28connectionName%2C%20appDefaults%2C%20cb%29%20%7B%0A%20%20//%20-%3E%20Instantiate%20ORM%20in%20memory.%0A%20%20//%20-%3E%20Iterate%20through%20each%20model%20definition%3A%0A%20%20//%20%20%20%20-%3E%20Create%20a%20proper%20Waterline%20Collection%20for%20each%20model%0A%20%20//%20%20%20%20-%3E%20then%20register%20it%20w/%20the%20ORM.%0A%20%20console.log%28%27Starting%20ORM...%27%29%3B%0A%20%20if%20%28%21connectionName%20%7C%7C%20%21appDefaults%29%20%7B%0A%20%20%20%20return%20cb%28%27miss%20connectionName%20or%20appDefaults%27%29%0A%20%20%7D%0A%20%20appDefaults.connection%20%3D%20connectionName%3B%0A%20%20let%20modelDefs%20%3D%20getModelDefs%28connectionName%29%3B%0A%20%20let%20waterline%20%3D%20new%20Waterline%28%29%3B%0A%20%20_.each%28modelDefs%2C%20function%20loadModelsIntoWaterline%28modelDef%2C%20modelID%29%20%7B%0A%20%20%20%20console.log%28%27Registering%20model%20%60%27%20+%20modelID%20+%20%27%60%20in%20Waterline%20%28ORM%29%27%29%3B%0A%20%20%20%20waterline.loadCollection%28Waterline.Collection.extend%28modelDef%29%29%3B%0A%20%20%7D%29%3B%0A%0A%20%20//%20Find%20all%20the%20connections%20used%0A%20%20let%20connections%20%3D%20getConnections%28connectionName%29%3B%0A%20%20let%20adapters%20%3D%20%7B%0A%20%20%20%20%27sails-mongo%27%3A%20sailsMongoAdapter%0A%20%20%7D%3B%0A%0A%20%20console.log%28%27buildORM%20appDefaults%27%2C%20appDefaults%29%3B%0A%20%20console.log%28%27buildORM%20connections%27%2C%20connections%29%3B%0A%20%20console.log%28%27buildORM%20adapters%27%2C%20Object.keys%28adapters%29%29%3B%0A%20%20//%20-%3E%20%22Initialize%22%20ORM%0A%20%20//%20%20%20%20%3A%20This%20performs%20tasks%20like%20managing%20the%20schema%20across%20associations%2C%0A%20%20//%20%20%20%20%3A%20hooking%20up%20models%20to%20their%20connections%2C%20and%20auto-migrations.%0A%20%20waterline.initialize%28%7B%0A%20%20%20%20adapters%3A%20adapters%2C%0A%20%20%20%20connections%3A%20connections%2C%0A%20%20%20%20defaults%3A%20appDefaults%0A%20%20%7D%2C%20function%20%28err%2C%20orm%29%20%7B%0A%20%20%20%20if%20%28err%29%20return%20cb%28err%29%3B%0A%20%20%20%20let%20models%20%3D%20orm.collections%20%7C%7C%20%5B%5D%3B%0A%20%20%20%20_.each%28models%2C%20function%20eachInstantiatedModel%28thisModel%2C%20modelID%29%20%7B%0A%20%20%20%20%20%20//%20Bind%20context%20for%20models%0A%20%20%20%20%20%20//%20%28this%20%28breaks%3F%29allows%20usage%20with%20tools%20like%20%60async%60%29%0A%20%20%20%20%20%20_.bindAll%28thisModel%29%3B%0A%20%20%20%20%7D%29%3B%0A%20%20%20%20//%20Success%0A%20%20%20%20cb%28null%2C%20models%29%3B%0A%20%20%7D%29%3B%0A%7D%3B%0A%60%60%60%0A%0A%u641E%u5B9A%uFF0C%u8FD9%u6837%20waterline%20%u5C31%u542F%u52A8%u5B8C%u6BD5%u5566%uFF0C%u9ED8%u8BA4%u52A0%u8F7D%20api/models%20%u91CC%u5B9A%u4E49%u7684%u5BF9%u8C61%uFF0C%u52A0%u8F7D%20/config/connections%20%20%u7684%u91CC%20DB%20%u8FDE%u63A5%u4FE1%u606F%u3002%0A%0A%23%23%23%20%u5728%20Mocha%20%u91CC%u4F7F%u7528%20waterline%0A%0A%23%23%23%23%u521D%u59CB%u5316%0A%0A%u5728%20test%20%u76EE%u5F55%u7684%20bootstrap.test.js%20%u6DFB%u52A0%u5982%u4E0B%u4EE3%u7801%uFF1A%0A%0A%60%60%60%0A%27use%20strict%27%3B%0Alet%20BuildWaterLine%20%3D%20require%28%27../hack/BuildWaterLine%27%29%3B%0Alet%20_%20%3D%20require%28%27underscore%27%29%3B%0Alet%20start_time%20%3D%20Date.now%28%29%0Abefore%28function%20%28done%29%20%7B%0A%20%20//%20Increase%20the%20Mocha%20timeout%20so%20that%20Sails%20has%20enough%20time%20to%20lift.%0A%20%20this.timeout%2810000%29%3B%0A%0A%20%20//%20Initialize%20Waterline%0A%20%20BuildWaterLine.buildORM%28%27testMongodb%27%2C%20%7Bmigrate%3A%20%27drop%27%7D%2C%20function%20%28err%2C%20models%29%20%7B%0A%20%20%20%20if%20%28err%29%20throw%20err%3B%0A%20%20%20%20console.log%28%27buildORM%20models%27%2C%20Object.keys%28models%29%29%3B%0A%20%20%20%20console.log%28%27waterline%20init%20time%20%25s%20s%27%2C%20%28Date.now%28%29%20-%20start_time%29%20/%201000%29%3B%0A%20%20%20%20done%28%29%3B%0A%20%20%7D%29%0A%7D%29%3B%0A%0Aafter%28function%20%28done%29%20%7B%0A%20%20done%28%29%3B%0A%20%20//%20here%20you%20can%20clear%20fixtures%2C%20etc.%0A%7D%29%3B%0A%60%60%60%0A%0ABuildWaterLine.buildORM%20%u65B9%u6CD5%u5C31%u662F%u4E0A%u6587%u6211%u4EEC%u81EA%u5B9A%u4E49%u7684%u52A0%u8F7D%u65B9%u6CD5%uFF0C%u8BE5%u65B9%u6CD5%u8FD4%u56DE%u7684%20models%20%u5C31%u662F%u6BCF%u4E2A%u5E26%u67E5%u8BE2%u65B9%u6CD5%u7684%20model%20%u5BF9%u8C61%u5566%u3002%0A%0A%23%23%23%23%u600E%u4E48%u8C03%u7528%20Model%20%u65B9%u6CD5%0A%0A%u4E0A%u9762%u53EA%u662F%u8FD4%u56DE%u4E86%20models%20%u5BF9%u8C61%uFF0C%u600E%u4E48%u5728%20mocha%20%u7684%u6D4B%u8BD5%u6587%u4EF6%u91CC%u4F7F%u7528%u5230%u8FD9%u4E9B%u5BF9%u8C61%u5462%uFF0C%u4E24%u4E2A%u65B9%u6CD5%u3002%0A1.%20%u5168%u5C40%u5316%uFF0C%u8DDF%20sails%20%u90A3%u6837%0A%0A%60%60%60%0A%20_.each%28models%2C%20function%20eachInstantiatedModel%28thisModel%2C%20modelID%29%20%7B%0A%09%20global%5BmodelID%5D%20%3D%20thisModel%3B%0A%20%7D%29%3B%0A%60%60%60%0A%0A%u9700%u8981%u6CE8%u610F%20modelID%20%u7684%u5927%u5C0F%u5199%u95EE%u9898%u54E6%u3002%u628A%u6BCF%u4E2A%20Model%20%u90FD%u5168%u5C40%u5316%u4E4B%u540E%uFF0C%u5C31%u53EF%u4EE5%u76F4%u63A5%u5728%20mocha%20%u76F4%u63A5%u8C03%u7528%u5566%u3002%0A%0A2.%20%u62D3%u5C55%u5230%u5176%u4ED6%u5BF9%u8C61%u4E0A%0A%0A%60%60%60%0Avar%20_%20%3D%20require%28%27lodash%27%29%3B%0Alet%20UserDao%20%3D%20require%28%27../dao/UserDao%27%29%0A_.extend%28UserDao%2C%20models%5B%27user%27%5D%29%3B%0A%60%60%60%0A%0Alodash%20%u7684%20extend%20%u63D0%u4F9B%u4E86%u5BF9%u8C61%u62D3%u5C55%u529F%u80FD%u3002%u4E0A%u6587%u7684%u4EE3%u7801%u628A%20user%20%u8FD9%u4E2A%20Model%20%u7684%u65B9%u6CD5%u62D3%u5C55%u5230%u4E86%20UserDao%20%u5BF9%u8C61%u4E0A%u3002%0A%u6216%u8005%u4F60%u53EF%u4EE5%u5C06%20Model%20%u62D3%u5C55%u5230%20api/models%20%20%u91CC%u7684%u540C%u540D%u5BF9%u8C61%u3002%u8FD9%u8BDD%u542C%u8D77%u6765%u662F%u4E0D%u662F%u5F88%u5947%u602A%uFF1F%u8FD9%u91CC%u6709%u4E2A%u7EC6%u8282%u4F60%u9700%u8981%u4E86%u89E3%uFF1A%0A**sails%20%20%u91CC%u5168%u5C40%u7684%20Model%20%u5BF9%u8C61%uFF0C%u4F8B%u5982%20User%20%uFF0C%u548C%u4F60%u5728%20api/models/User.js%20%u5BF9%u8C61%u662F%u4E0D%u4E00%u6837%u7684%u54E6**%0A%u81F3%u4E8E%u4E3A%u4EC0%u4E48%uFF0C%u4F60%u81EA%u5DF1%u53BB%20Google%20%u5427%u3002%0A%0A%u505A%u597D%u62D3%u5C55%u540E%uFF0C%u5728%u6D4B%u8BD5%u6587%u4EF6%u91CC%u4F60%u53EA%u9700%u8981%u8FD9%u6837%u5F15%u5165%0A%0A%60%60%60%0Alet%20UserDao%20%3D%20require%28%27......../UserDao%27%29%3B%0AUserDao.create%28%7Bphone%3A%20%2713848965325%27%7D%2C%20%28err%2C%20cUser%29%20%3D%3E%20%7B%0A%20%20%20should.exist%28cUser%29%3B%0A%20%20%20done%28err%29%0A%7D%29%0A%60%60%60%0A%0A%23%23%u7ED3%u679C%0A%u5355%u72EC%u52A0%u8F7D%20waterline%20%u8017%u65F6%0A%0A%60%60%60%0Awaterline%20init%20time%200.532%20s%0A%60%60%60%0A%0Asails%20%u542F%u52A8%u8017%u65F6%0A%0A%60%60%60%0Asails%20start%20time%203.122%20s%0A%60%60%60%0A%0A%u8FD9%u4E2A%u5BF9%u6BD4%u7ED3%u679C%u662F%u57FA%u4E8E%u65B0%u5EFA%u7684%20sails%20%u9879%u76EE%uFF0C%u53EA%u67094%u4E2A%20Model%20%u6587%u4EF6%u3002%0A%0A%23%23%u6E90%u7801%0Ahttps%3A//github.com/myfjdthink/CodeNode/tree/master/sails/waterline_init%0A%0A%0A%0A%0A</center>"
  },
  {
    "title": "使用 Webstorm 的 N 个理由",
    "created": "2016-03-15T06:52:51.000Z",
    "updated": "2016-06-03T01:49:20.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=512c1bd4-a467-494b-928c-b075fe876de2&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n## 使用 Webstorm 的 N 个理由\n\n### 导航\n\n#### 文件跳转+搜索\n\n#### 方法跳转+引用\n\n*   跳转到变量定义的地方 ctrl+b\n*   查询引用变量的位置(雾, 不太准确, 勉强够用), 不太准确的原因是 js 是动态类型的语言, 动态类型判断引用关系会比较麻烦.  \n    古语有云:”动态类型一时爽，代码重构火葬场”,\n\n*   上/下一个光标位置 win + [ ]\n\n*   一个编辑位置 win+shitf+<–\n\n#### 文件结构 快速跳转方法\n\n文件结构视图, 查看当前文件的所有元素.\n\n <en-media longdesc=\"./1458198081478.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"fc4fdaf6849d033d42be05ded02f9517\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">好用的地方是支持搜索, 可以快速跳转到你要的方法.</en-media>\n\n<en-media longdesc=\"./1458198181542.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"9c731402f2d8eefd7bac1f9a8904815a\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### 书签\n\n经常编辑的功能 就加个书签吧\n\n<en-media longdesc=\"./1458212587091.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"d2b693d034fc1914c013ad68fffa2110\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### 编辑\n\n#### 重构\n\nrename 神器\n\n<en-media longdesc=\"./rename.gif\" alt=\"Alt text\" title=\"\" type=\"image/gif\" hash=\"c6c44406625622b8182862bde1b54cda\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\nvariable 将表达式抽出为变量(消灭重复表达式)\n\n<en-media longdesc=\"./variable.gif\" alt=\"Alt text\" title=\"\" type=\"image/gif\" hash=\"53e3f62a69a8603e12c1f630d4f3c9a6\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\ninline variable 的反操作, 适合这个变量只使用了一次的时候\n\n<en-media longdesc=\"./inline.gif\" alt=\"Alt text\" title=\"\" type=\"image/gif\" hash=\"6a6421feb658508a15eb82d70172febd\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\nparameter\n\n#### 自定义模板\n\nlive template\n\n <en-media longdesc=\"./livetempalte.gif\" alt=\"Alt text\" title=\"\" type=\"image/gif\" hash=\"62fb7bba51d3c130943996ccdd03b274\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">将常用的方法抽出为模板, 再也不用 Ctrl+CV 了.</en-media>\n\n#### format + validate\n\n*   自带 format 工具,也支持 eslint 等工具, 实时检查代码格式或 error\n*   找出未被使用的变量\n*   使用 F2 跳到错误位置\n\n#### 方便你快速编辑的\n\n*   选择块代码 alt+up 用鼠标小心翼翼地选择一小段代码真的很累的.\n*   复制行 win+d 写一个列表的时候常用\n*   删除行 + win 能少按几下是几下\n*   vim 插件 vim 党\n\n### 版本控制\n\n#### change list\n\n变更列表, 方便区分不同任务的变更, 避免提交暂时不需要提交的东西. 也方便 code review\n\n <en-media longdesc=\"./1458188187310.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"59cac80653977a330c28871d210a7192\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">建议配合 Task 功能使用.</en-media>\n\nchange list 还有个不易发现的神级功能, Shelve Changes 搁置提交列表  \n如果你改动一堆文件, 然后你想切换分支, 但是 git 冲突不让你切换, 在之前你的选择只有两个\n\n*   commit 当前的修改\n*   放弃  \n    Shelve Changes 提供第三个选择, 把这堆修改搁置, 这样 git 就不会冲突了.\n\n#### 对比视图\n\ncode review 神器  \n配合 change list 提交代码之前 review 一下本次修改的代码.\n\n<en-media longdesc=\"./1458197847170.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"9b39112f4e0b0b33a08bcafeeea1057a\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### 解决冲突\n\n非常实用的功能, 简单的冲突还能手动解决, 复杂的冲突只能依赖这个工具了.\n\n <en-media longdesc=\"./1458210642021.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"c9c7ba890c1ab9fd663acaaaf33173ff\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">左侧的代码是你的, 右边的是 server 的, 中间是合并的结果.  \n首先接受不冲突的更新, 然后手动选择你需要的修改, << 表示接受, X表示放弃.</en-media>\n\n<en-media longdesc=\"./1458210771574.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"66dbe036dfa90a8e451912e34f28c859\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### git 历史\n\n在行号后面点击右键, 选择 Annotate 可以查看代码的最后修改人.  \n在当前文件点击右键, 选择 Git –> show history 则可以查看该文件的提交历史.\n\n<en-media longdesc=\"./1458197585180.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"c2db73506413321fab269a11be5401c1\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n选中一个提交, 点击右键选择 Compare (或者按下 Ctrl + D ), 可以打开对比视图, 查看本地提交修改了哪些东西.\n\n#### 本地历史\n\n一般用不上, 但是关键时刻能救你一命的功能.  \n详细记录你每一次修改, 如果你 git 上误操作, 代码被吃了, 在这里还能找回来.\n\n<en-media longdesc=\"./1458189018646.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"a5fc3d29337430a431353f10a569147e\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### RUN 程序运行\n\n#### RUN\n\n快速定位出错位置\n\n <en-media longdesc=\"./1458212902535.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"d406ddcee636117d925a0820c038a045\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">方便搜索 log 不要再用 ####### 来定位 log 了. 你有 Ctrl+ F</en-media>\n\n<en-media longdesc=\"./1458212985480.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"a4adbe2c86cd8e5058f1fbc9ed4550fd\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### Debug\n\nDebug 的清晰度会比 log 高很多, 可以方便地查看上下文, 可以更快的找出问题.\n\n<en-media longdesc=\"./1458213140673.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"3a328a93d2af7fef85f63e9451203339\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\nDebug 整个工程的话, 速度非常慢, 不建议使用. 推荐用来 Debug 单文件执行.\n\n#### TEST\n\n配置 Mocha 运行环境 (注意: Webstorm 11 对 Mocha 的支持出现了问题)\n\n <en-media longdesc=\"./1458188587935.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"b934598a366e3b8f12aa9fb1ba02cede\" style=\"border: 0; vertical-align: middle; max-width: 100%;\">清晰的视图,快速定位 log. 抛弃那种 ============ 的 log 方式吧.</en-media>\n\n<en-media longdesc=\"./1458188781779.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"4e259b8b9bf7b89509bb8cb408bdcffb\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### 集成\n\n集成第三方的项目管理工具到 Task 功能\n\n#### Trello\n\n#### Jira\n\n<en-media longdesc=\"./1458053508050.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"e99537c6fe582e2463ecbc7221d0da37\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n<en-media longdesc=\"./1458053548773.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"d35b29f564ef74cb8c10baa7ac224702\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n<en-media longdesc=\"./1458209113328.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"621d9c9aa453baf3b0e217601e591da3\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n### 开发工具的选择\n\n开发工具和编程语言一样, 没有最好的, 只有最合适的.  \n合适的工具只是为了提升开发效率而已.\n\n### 跑题\n\n1.  推荐开发环境升级 sails 和 sails-mongo 到最新版.\n\nnpm install sails@latest  \nnpm install sails@latest -g  \nnpm install sails-mongo@latest  \nnpm install sails-hook-autoreload\n\n2.  推荐使用马克飞象编辑器\n\n<center style=\"display:none\">%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%0A%23%23%20%u4F7F%u7528%20Webstorm%20%u7684%20N%20%u4E2A%u7406%u7531%0A%0A%23%23%23%u5BFC%u822A%0A%23%23%23%23%u6587%u4EF6%u8DF3%u8F6C+%u641C%u7D22%0A%0A%23%23%23%23%u65B9%u6CD5%u8DF3%u8F6C+%u5F15%u7528%0A-%20%u8DF3%u8F6C%u5230%u53D8%u91CF%u5B9A%u4E49%u7684%u5730%u65B9%20ctrl+b%0A-%20%u67E5%u8BE2%u5F15%u7528%u53D8%u91CF%u7684%u4F4D%u7F6E%28%u96FE%2C%20%u4E0D%u592A%u51C6%u786E%2C%20%u52C9%u5F3A%u591F%u7528%29%2C%20%20%u4E0D%u592A%u51C6%u786E%u7684%u539F%u56E0%u662F%20js%20%u662F%u52A8%u6001%u7C7B%u578B%u7684%u8BED%u8A00%2C%20%u52A8%u6001%u7C7B%u578B%u5224%u65AD%u5F15%u7528%u5173%u7CFB%u4F1A%u6BD4%u8F83%u9EBB%u70E6.%0A%u53E4%u8BED%u6709%u4E91%3A%22%u52A8%u6001%u7C7B%u578B%u4E00%u65F6%u723D%uFF0C%u4EE3%u7801%u91CD%u6784%u706B%u846C%u573A%22%2C%20%0A%0A%0A-%20%u4E0A/%u4E0B%u4E00%u4E2A%u5149%u6807%u4F4D%u7F6E%20%20%20win%20+%20%5B%20%5D%0A-%20%u4E00%u4E2A%u7F16%u8F91%u4F4D%u7F6E%20win+shitf+%3C--%0A%23%23%23%23%u6587%u4EF6%u7ED3%u6784%20%u5FEB%u901F%u8DF3%u8F6C%u65B9%u6CD5%0A%u6587%u4EF6%u7ED3%u6784%u89C6%u56FE%2C%20%u67E5%u770B%u5F53%u524D%u6587%u4EF6%u7684%u6240%u6709%u5143%u7D20.%0A%21%5BAlt%20text%5D%28./1458198081478.png%29%0A%u597D%u7528%u7684%u5730%u65B9%u662F%u652F%u6301%u641C%u7D22%2C%20%u53EF%u4EE5%u5FEB%u901F%u8DF3%u8F6C%u5230%u4F60%u8981%u7684%u65B9%u6CD5.%0A%21%5BAlt%20text%5D%28./1458198181542.png%29%0A%0A%23%23%23%23%u4E66%u7B7E%0A%u7ECF%u5E38%u7F16%u8F91%u7684%u529F%u80FD%20%u5C31%u52A0%u4E2A%u4E66%u7B7E%u5427%0A%21%5BAlt%20text%5D%28./1458212587091.png%29%0A%0A%0A%23%23%23%20%u7F16%u8F91%0A%23%23%23%23%u91CD%u6784%0Arename%20%u795E%u5668%0A%21%5BAlt%20text%5D%28./rename.gif%29%0A%0Avariable%20%20%u5C06%u8868%u8FBE%u5F0F%u62BD%u51FA%u4E3A%u53D8%u91CF%28%u6D88%u706D%u91CD%u590D%u8868%u8FBE%u5F0F%29%0A%21%5BAlt%20text%5D%28./variable.gif%29%0A%0Ainline%20%20%20variable%20%u7684%u53CD%u64CD%u4F5C%2C%20%u9002%u5408%u8FD9%u4E2A%u53D8%u91CF%u53EA%u4F7F%u7528%u4E86%u4E00%u6B21%u7684%u65F6%u5019%0A%21%5BAlt%20text%5D%28./inline.gif%29%0A%0Aparameter%0A%23%23%23%23%u81EA%u5B9A%u4E49%u6A21%u677F%0Alive%20template%0A%21%5BAlt%20text%5D%28./livetempalte.gif%29%0A%u5C06%u5E38%u7528%u7684%u65B9%u6CD5%u62BD%u51FA%u4E3A%u6A21%u677F%2C%20%u518D%u4E5F%u4E0D%u7528%20Ctrl+CV%20%u4E86.%0A%23%23%23%23format%20+%20validate%0A-%20%u81EA%u5E26%20format%20%u5DE5%u5177%2C%u4E5F%u652F%u6301%20eslint%20%u7B49%u5DE5%u5177%2C%20%u5B9E%u65F6%u68C0%u67E5%u4EE3%u7801%u683C%u5F0F%u6216%20error%0A-%20%u627E%u51FA%u672A%u88AB%u4F7F%u7528%u7684%u53D8%u91CF%0A-%20%u4F7F%u7528%20F2%20%u8DF3%u5230%u9519%u8BEF%u4F4D%u7F6E%0A%23%23%23%23%u65B9%u4FBF%u4F60%u5FEB%u901F%u7F16%u8F91%u7684%0A-%20%u9009%u62E9%u5757%u4EE3%u7801%20%20alt+up%20%20%u7528%u9F20%u6807%u5C0F%u5FC3%u7FFC%u7FFC%u5730%u9009%u62E9%u4E00%u5C0F%u6BB5%u4EE3%u7801%u771F%u7684%u5F88%u7D2F%u7684.%0A-%20%u590D%u5236%u884C%20win+d%20%20%20%u5199%u4E00%u4E2A%u5217%u8868%u7684%u65F6%u5019%u5E38%u7528%0A-%20%u5220%u9664%u884C%20+%20win%20%20%20%20%u80FD%u5C11%u6309%u51E0%u4E0B%u662F%u51E0%u4E0B%0A-%20vim%20%u63D2%u4EF6%09%09%09vim%20%u515A%0A%0A%23%23%23%u7248%u672C%u63A7%u5236%0A%23%23%23%23change%20list%20%0A%u53D8%u66F4%u5217%u8868%2C%20%u65B9%u4FBF%u533A%u5206%u4E0D%u540C%u4EFB%u52A1%u7684%u53D8%u66F4%2C%20%u907F%u514D%u63D0%u4EA4%u6682%u65F6%u4E0D%u9700%u8981%u63D0%u4EA4%u7684%u4E1C%u897F.%20%u4E5F%u65B9%u4FBF%20code%20review%0A%21%5BAlt%20text%5D%28./1458188187310.png%29%0A%u5EFA%u8BAE%u914D%u5408%20Task%20%u529F%u80FD%u4F7F%u7528.%0A%0Achange%20list%20%u8FD8%u6709%u4E2A%u4E0D%u6613%u53D1%u73B0%u7684%u795E%u7EA7%u529F%u80FD%2C%20%20Shelve%20Changes%20%u6401%u7F6E%u63D0%u4EA4%u5217%u8868%0A%u5982%u679C%u4F60%u6539%u52A8%u4E00%u5806%u6587%u4EF6%2C%20%u7136%u540E%u4F60%u60F3%u5207%u6362%u5206%u652F%2C%20%u4F46%u662F%20git%20%u51B2%u7A81%u4E0D%u8BA9%u4F60%u5207%u6362%2C%20%u5728%u4E4B%u524D%u4F60%u7684%u9009%u62E9%u53EA%u6709%u4E24%u4E2A%0A-%20commit%20%u5F53%u524D%u7684%u4FEE%u6539%0A-%20%u653E%u5F03%0AShelve%20Changes%20%u63D0%u4F9B%u7B2C%u4E09%u4E2A%u9009%u62E9%2C%20%u628A%u8FD9%u5806%u4FEE%u6539%u6401%u7F6E%2C%20%u8FD9%u6837%20git%20%u5C31%u4E0D%u4F1A%u51B2%u7A81%u4E86.%0A%0A%23%23%23%23%u5BF9%u6BD4%u89C6%u56FE%0Acode%20review%20%u795E%u5668%0A%u914D%u5408%20change%20list%20%u63D0%u4EA4%u4EE3%u7801%u4E4B%u524D%20review%20%u4E00%u4E0B%u672C%u6B21%u4FEE%u6539%u7684%u4EE3%u7801.%0A%21%5BAlt%20text%5D%28./1458197847170.png%29%0A%0A%23%23%23%23%u89E3%u51B3%u51B2%u7A81%0A%u975E%u5E38%u5B9E%u7528%u7684%u529F%u80FD%2C%20%u7B80%u5355%u7684%u51B2%u7A81%u8FD8%u80FD%u624B%u52A8%u89E3%u51B3%2C%20%u590D%u6742%u7684%u51B2%u7A81%u53EA%u80FD%u4F9D%u8D56%u8FD9%u4E2A%u5DE5%u5177%u4E86.%0A%21%5BAlt%20text%5D%28./1458210642021.png%29%0A%u5DE6%u4FA7%u7684%u4EE3%u7801%u662F%u4F60%u7684%2C%20%u53F3%u8FB9%u7684%u662F%20server%20%u7684%2C%20%u4E2D%u95F4%u662F%u5408%u5E76%u7684%u7ED3%u679C.%0A%u9996%u5148%u63A5%u53D7%u4E0D%u51B2%u7A81%u7684%u66F4%u65B0%2C%20%u7136%u540E%u624B%u52A8%u9009%u62E9%u4F60%u9700%u8981%u7684%u4FEE%u6539%2C%20%3C%3C%20%u8868%u793A%u63A5%u53D7%2C%20X%u8868%u793A%u653E%u5F03.%0A%21%5BAlt%20text%5D%28./1458210771574.png%29%0A%0A%23%23%23%23git%20%u5386%u53F2%0A%u5728%u884C%u53F7%u540E%u9762%u70B9%u51FB%u53F3%u952E%2C%20%u9009%u62E9%20Annotate%20%u53EF%u4EE5%u67E5%u770B%u4EE3%u7801%u7684%u6700%u540E%u4FEE%u6539%u4EBA.%20%0A%u5728%u5F53%u524D%u6587%u4EF6%u70B9%u51FB%u53F3%u952E%2C%20%u9009%u62E9%20Git%20--%3E%20show%20history%20%u5219%u53EF%u4EE5%u67E5%u770B%u8BE5%u6587%u4EF6%u7684%u63D0%u4EA4%u5386%u53F2.%0A%21%5BAlt%20text%5D%28./1458197585180.png%29%0A%0A%u9009%u4E2D%u4E00%u4E2A%u63D0%u4EA4%2C%20%u70B9%u51FB%u53F3%u952E%u9009%u62E9%20Compare%20%28%u6216%u8005%u6309%u4E0B%20Ctrl%20+%20D%20%29%2C%20%u53EF%u4EE5%u6253%u5F00%u5BF9%u6BD4%u89C6%u56FE%2C%20%u67E5%u770B%u672C%u5730%u63D0%u4EA4%u4FEE%u6539%u4E86%u54EA%u4E9B%u4E1C%u897F.%20%0A%23%23%23%23%u672C%u5730%u5386%u53F2%0A%u4E00%u822C%u7528%u4E0D%u4E0A%2C%20%u4F46%u662F%u5173%u952E%u65F6%u523B%u80FD%u6551%u4F60%u4E00%u547D%u7684%u529F%u80FD.%0A%u8BE6%u7EC6%u8BB0%u5F55%u4F60%u6BCF%u4E00%u6B21%u4FEE%u6539%2C%20%u5982%u679C%u4F60%20git%20%u4E0A%u8BEF%u64CD%u4F5C%2C%20%u4EE3%u7801%u88AB%u5403%u4E86%2C%20%u5728%u8FD9%u91CC%u8FD8%u80FD%u627E%u56DE%u6765.%0A%21%5BAlt%20text%5D%28./1458189018646.png%29%0A%0A%23%23%23RUN%20%u7A0B%u5E8F%u8FD0%u884C%0A%23%23%23%23RUN%0A%u5FEB%u901F%u5B9A%u4F4D%u51FA%u9519%u4F4D%u7F6E%0A%21%5BAlt%20text%5D%28./1458212902535.png%29%0A%u65B9%u4FBF%u641C%u7D22%20log%20%u4E0D%u8981%u518D%u7528%20%23%23%23%23%23%23%23%20%u6765%u5B9A%u4F4D%20log%20%u4E86.%20%u4F60%u6709%20Ctrl+%20F%0A%21%5BAlt%20text%5D%28./1458212985480.png%29%0A%0A%23%23%23%23Debug%0ADebug%20%u7684%u6E05%u6670%u5EA6%u4F1A%u6BD4%20log%20%u9AD8%u5F88%u591A%2C%20%u53EF%u4EE5%u65B9%u4FBF%u5730%u67E5%u770B%u4E0A%u4E0B%u6587%2C%20%u53EF%u4EE5%u66F4%u5FEB%u7684%u627E%u51FA%u95EE%u9898.%20%0A%21%5BAlt%20text%5D%28./1458213140673.png%29%0A%0ADebug%20%u6574%u4E2A%u5DE5%u7A0B%u7684%u8BDD%2C%20%u901F%u5EA6%u975E%u5E38%u6162%2C%20%u4E0D%u5EFA%u8BAE%u4F7F%u7528.%20%u63A8%u8350%u7528%u6765%20Debug%20%u5355%u6587%u4EF6%u6267%u884C.%0A%0A%23%23%23%23TEST%0A%0A%u914D%u7F6E%20Mocha%20%u8FD0%u884C%u73AF%u5883%20%28%u6CE8%u610F%3A%20Webstorm%2011%20%u5BF9%20Mocha%20%u7684%u652F%u6301%u51FA%u73B0%u4E86%u95EE%u9898%29%0A%21%5BAlt%20text%5D%28./1458188587935.png%29%0A%u6E05%u6670%u7684%u89C6%u56FE%2C%u5FEB%u901F%u5B9A%u4F4D%20log.%20%20%u629B%u5F03%u90A3%u79CD%20%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%3D%20%u7684%20log%20%u65B9%u5F0F%u5427.%0A%21%5BAlt%20text%5D%28./1458188781779.png%29%0A%0A%23%23%23%u96C6%u6210%0A%u96C6%u6210%u7B2C%u4E09%u65B9%u7684%u9879%u76EE%u7BA1%u7406%u5DE5%u5177%u5230%20Task%20%u529F%u80FD%0A%23%23%23%23Trello%0A%23%23%23%23Jira%0A%21%5BAlt%20text%5D%28./1458053508050.png%29%0A%21%5BAlt%20text%5D%28./1458053548773.png%29%0A%21%5BAlt%20text%5D%28./1458209113328.png%29%0A%0A%23%23%23%u5F00%u53D1%u5DE5%u5177%u7684%u9009%u62E9%0A%0A%u5F00%u53D1%u5DE5%u5177%u548C%u7F16%u7A0B%u8BED%u8A00%u4E00%u6837%2C%20%20%u6CA1%u6709%u6700%u597D%u7684%2C%20%u53EA%u6709%u6700%u5408%u9002%u7684.%0A%u5408%u9002%u7684%u5DE5%u5177%u53EA%u662F%u4E3A%u4E86%u63D0%u5347%u5F00%u53D1%u6548%u7387%u800C%u5DF2.%0A%0A%23%23%23%u8DD1%u9898%0A1.%20%u63A8%u8350%u5F00%u53D1%u73AF%u5883%u5347%u7EA7%20sails%20%u548C%20sails-mongo%20%20%u5230%u6700%u65B0%u7248.%0A%0Anpm%20install%20sails@latest%0Anpm%20install%20sails@latest%20-g%0Anpm%20install%20sails-mongo@latest%0Anpm%20install%20sails-hook-autoreload%0A%0A2.%20%u63A8%u8350%u4F7F%u7528%u9A6C%u514B%u98DE%u8C61%u7F16%u8F91%u5668%0A%0A</center>"
  },
  {
    "title": "基于 waterline 的简单事务处理",
    "created": "2016-03-21T19:10:03.000Z",
    "updated": "2016-06-03T01:48:44.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=259482b1-69d2-45b0-b52b-33b7b37bd509&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n# 基于 waterline 的简单事务处理\n\n## 安装\n\n`$ npm install waterline-transact`\n\n## 配置\n\n需要配合 [Sails.js](http://sailsjs.org/) 使用\n\n在 sails 的`./api/model` 添加一个 Model  \nTransaction.js\n\nmodule.exports = {\n\n     attributes: { //事务名 name: {type: 'string'}, //保存事务处理的一些消息，例如事务处理失败原因。 msg: {type: 'string'}, //事务状态 start,pending,finish,canceling,rollback... state: {type: 'string'}, start_time: {type: 'date'}, end_time: {type: 'date'}, //事务操作的文档 /** * { * coll 操作的表 * act 动作 insert or update * docId 操作的对象的id * data 操作对象的数据 * pre update操作时，对象在update之前的状态 * time 时间戳 * } */ changes: {type: 'array'} }};\n\n这个 Model 用于保存事务的操作记录。\n\n在 bootsstrap.js 里将 sails 对象传入\n\n    var Transact = require('waterline-transact');Transact.init(sails);\n\n## 使用\n\n这个库在封装了 waterline 的 create 和 update 方法，需要事务操作时，使用本库提供的 txCreate 和 txUpdate 方法来替代。这样就会自动记录本次操作，方便回滚。\n\n    var Transact = require('waterline-transact');Transact.transactionManager(\"正常事务\", function (transactionId, taskCallback) { /** * @User Model * @transactionId 事务ID * @user_data 本次create操作保存的数据 *  */ Transact.txCreate(User, transactionId, user_data, function (err, cUser) { taskCallback(err, cUser); });}, function (err, result) { //do some thing})\n\n## 测试\n\n需要在 sails 的`./api/model` 添加一个 Model  \nUser.js\n\n    module.exports = { attributes: { phone : { type: 'string', unique: true}, created_from: { type: 'string'}, }};\n\n将 test 目录下的 WaterLineTransct.test.js 放入 sails 的测试目录中，启动 sails 的测试即可。\n\n## Dependencies\n\n*   [Async.js](https://github.com/caolan/async)\n\n## License\n\n[The MIT License](http://opensource.org/licenses/MIT)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%23%20%u57FA%u4E8E%20waterline%20%u7684%u7B80%u5355%u4E8B%u52A1%u5904%u7406%0A%0A%0A%23%23%20%u5B89%u88C5%0A%0A%60%24%20npm%20install%20waterline-transact%60%0A%0A%23%23%20%u914D%u7F6E%0A%0A%u9700%u8981%u914D%u5408%20%20%5BSails.js%5D%28http%3A//sailsjs.org/%29%20%20%u4F7F%u7528%0A%0A%u5728%20sails%20%u7684%60./api/model%60%20%u6DFB%u52A0%u4E00%u4E2A%20Model%20%0ATransaction.js%0A%0Amodule.exports%20%3D%20%7B%0A%0A%60%60%60%0A%20%20attributes%3A%20%7B%0A%20%20%20%20//%u4E8B%u52A1%u540D%0A%20%20%20%20name%3A%20%7Btype%3A%20%27string%27%7D%2C%0A%20%20%20%20//%u4FDD%u5B58%u4E8B%u52A1%u5904%u7406%u7684%u4E00%u4E9B%u6D88%u606F%uFF0C%u4F8B%u5982%u4E8B%u52A1%u5904%u7406%u5931%u8D25%u539F%u56E0%u3002%0A%20%20%20%20msg%3A%20%7Btype%3A%20%27string%27%7D%2C%0A%20%20%20%20//%u4E8B%u52A1%u72B6%u6001%20start%2Cpending%2Cfinish%2Ccanceling%2Crollback...%0A%20%20%20%20state%3A%20%7Btype%3A%20%27string%27%7D%2C%0A%20%20%20%20start_time%3A%20%7Btype%3A%20%27date%27%7D%2C%0A%20%20%20%20end_time%3A%20%7Btype%3A%20%27date%27%7D%2C%0A%20%20%20%20//%u4E8B%u52A1%u64CD%u4F5C%u7684%u6587%u6863%0A%20%20%20%20/**%0A%20%20%20%20%20*%20%7B%0A%20%20%20%20%20*%20coll%20%20%20%u64CD%u4F5C%u7684%u8868%0A%20%20%20%20%20*%20act%20%20%20%20%u52A8%u4F5C%20%20insert%20or%20update%0A%20%20%20%20%20*%20docId%20%20%u64CD%u4F5C%u7684%u5BF9%u8C61%u7684id%0A%20%20%20%20%20*%20data%20%20%20%u64CD%u4F5C%u5BF9%u8C61%u7684%u6570%u636E%0A%20%20%20%20%20*%20pre%20%20%20%20update%u64CD%u4F5C%u65F6%uFF0C%u5BF9%u8C61%u5728update%u4E4B%u524D%u7684%u72B6%u6001%0A%20%20%20%20%20*%20time%20%20%20%u65F6%u95F4%u6233%0A%20%20%20%20%20*%20%7D%0A%20%20%20%20%20*/%0A%20%20%20%20changes%3A%20%7Btype%3A%20%27array%27%7D%0A%20%20%7D%0A%7D%3B%0A%60%60%60%0A%0A%u8FD9%u4E2A%20Model%20%u7528%u4E8E%u4FDD%u5B58%u4E8B%u52A1%u7684%u64CD%u4F5C%u8BB0%u5F55%u3002%0A%0A%u5728%20bootsstrap.js%20%u91CC%u5C06%20sails%20%u5BF9%u8C61%u4F20%u5165%0A%0A%60%60%60%0Avar%20Transact%20%3D%20require%28%27waterline-transact%27%29%3B%0ATransact.init%28sails%29%3B%0A%60%60%60%0A%0A%23%23%u4F7F%u7528%0A%u8FD9%u4E2A%u5E93%u5728%u5C01%u88C5%u4E86%20waterline%20%u7684%20create%20%u548C%20update%20%u65B9%u6CD5%uFF0C%u9700%u8981%u4E8B%u52A1%u64CD%u4F5C%u65F6%uFF0C%u4F7F%u7528%u672C%u5E93%u63D0%u4F9B%u7684%20txCreate%20%u548C%20txUpdate%20%u65B9%u6CD5%u6765%u66FF%u4EE3%u3002%u8FD9%u6837%u5C31%u4F1A%u81EA%u52A8%u8BB0%u5F55%u672C%u6B21%u64CD%u4F5C%uFF0C%u65B9%u4FBF%u56DE%u6EDA%u3002%0A%60%60%60%0Avar%20Transact%20%3D%20require%28%27waterline-transact%27%29%3B%0ATransact.transactionManager%28%22%u6B63%u5E38%u4E8B%u52A1%22%2C%20function%20%28transactionId%2C%20taskCallback%29%20%7B%0A%20%20/**%0A%20%20%20*%20@User%20Model%0A%20%20%20*%20@transactionId%20%u4E8B%u52A1ID%0A%20%20%20*%20@user_data%20%u672C%u6B21create%u64CD%u4F5C%u4FDD%u5B58%u7684%u6570%u636E%0A%20%20%20*%20%0A%20%20%20*/%0A%20%20Transact.txCreate%28User%2C%20transactionId%2C%20user_data%2C%20function%20%28err%2C%20cUser%29%20%7B%0A%20%20%20%20taskCallback%28err%2C%20cUser%29%3B%0A%20%20%7D%29%3B%0A%20%20%0A%7D%2C%20function%20%28err%2C%20result%29%20%7B%0A%20%20//do%20some%20thing%0A%7D%29%0A%60%60%60%0A%0A%23%23%u6D4B%u8BD5%0A%u9700%u8981%u5728%20sails%20%u7684%60./api/model%60%20%u6DFB%u52A0%u4E00%u4E2A%20Model%20%0AUser.js%0A%0A%60%60%60%0Amodule.exports%20%3D%20%7B%0A%20%20attributes%3A%20%7B%0A%20%20%20%20phone%20%3A%20%7B%20type%3A%20%27string%27%2C%20unique%3A%20true%7D%2C%0A%20%20%20%20created_from%3A%20%7B%20type%3A%20%27string%27%7D%2C%0A%0A%20%20%7D%0A%7D%3B%0A%60%60%60%0A%0A%u5C06%20test%20%u76EE%u5F55%u4E0B%u7684%20WaterLineTransct.test.js%20%u653E%u5165%20sails%20%u7684%u6D4B%u8BD5%u76EE%u5F55%u4E2D%uFF0C%u542F%u52A8%20sails%20%u7684%u6D4B%u8BD5%u5373%u53EF%u3002%0A%0A%23%23%20Dependencies%0A%0A*%20%5BAsync.js%5D%28https%3A//github.com/caolan/async%29%0A%0A%23%23%20License%0A%0A%5BThe%20MIT%20License%5D%28http%3A//opensource.org/licenses/MIT%29%0A</center>"
  },
  {
    "title": "Sails 关闭自动路由 Automatic Routes 功能。",
    "created": "2016-03-21T19:08:35.000Z",
    "updated": "2016-06-03T01:48:33.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=e53a3c0a-9834-4fdf-8afe-4099aad09a75&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n### Sails 关闭自动路由 Automatic Routes 功能。\n\nSails 中的路由两种：Custom Routes 和 Automatic Routes，自定义路由和自动路由。详见文档：  \n[Sails Routes](http://sailsjs-documentation.readthedocs.org/en/latest/concepts/Routes/)\n\n自定义路由就是我们在 routes.js 中为指定的 url 分配处理的 Action 如：\n\n    'post /purchase/pay':{ controller:'PurchaseController', action: 'pay'}\n\n自动路由则是，我们在 sails 中添加了 PurchaseController 并添加了 pay 方法后， 如：\n\n    module.exports = { pay: function () { doSomeThing() }}\n\n可以直接使用 /purchase/pay 访问，**Post 和 Get 方式均可**\n\n现在有个问题就是，我们希望只有 Post 请求才被处理，但是 Sails 的路由机制是，先在自定义路由 routes.js 中匹配，没有结果则在**自动路由中匹配**。  \n所以我们使用 get /purchase/pay 方式请求的话，虽然该请求被自定义路由的 Post 过滤掉，但是请求还是是会被自动路由处理的。这算是 Sails 的缺陷（这应该算是个 BUG 吧，哈哈。），还不够智能。\n\n要实现我们的目的，我们需要**关闭自动路由功能**。 sails 提供了此项配置，在 PurchaseController 添加以下配置：\n\n    module.exports = purchase = {_config: { actions: false, //关闭自动路由 shortcuts: false, rest: false},buy: function () { doSomeThing()}}\n\n这样就行啦，关于该配置的详细信息见文档：[sails-config-blueprint](http://sailsjs.org/documentation/reference/configuration/sails-config-blueprint)  \n还可以顺便关闭 Rest 接口功能。\n\nStackoverflow 上有人问了类似的问题，也可以参考下：  \n[http://stackoverflow.com/questions/26921889/disabling-default-sails-js-routes](http://stackoverflow.com/questions/26921889/disabling-default-sails-js-routes)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%23%23%23Sails%20%u5173%u95ED%u81EA%u52A8%u8DEF%u7531%20Automatic%20Routes%20%u529F%u80FD%u3002%0A%0ASails%20%u4E2D%u7684%u8DEF%u7531%u4E24%u79CD%uFF1ACustom%20Routes%20%u548C%20Automatic%20Routes%uFF0C%u81EA%u5B9A%u4E49%u8DEF%u7531%u548C%u81EA%u52A8%u8DEF%u7531%u3002%u8BE6%u89C1%u6587%u6863%uFF1A%0A%5BSails%20Routes%5D%28http%3A//sailsjs-documentation.readthedocs.org/en/latest/concepts/Routes/%29%0A%0A%u81EA%u5B9A%u4E49%u8DEF%u7531%u5C31%u662F%u6211%u4EEC%u5728%20routes.js%20%u4E2D%u4E3A%u6307%u5B9A%u7684%20url%20%u5206%u914D%u5904%u7406%u7684%20Action%20%u5982%uFF1A%0A%0A%60%60%60%0A%27post%20/purchase/pay%27%3A%7B%0A%09controller%3A%27PurchaseController%27%2C%0A%09action%3A%20%27pay%27%0A%7D%0A%60%60%60%0A%0A%u81EA%u52A8%u8DEF%u7531%u5219%u662F%uFF0C%u6211%u4EEC%u5728%20sails%20%u4E2D%u6DFB%u52A0%u4E86%20PurchaseController%20%u5E76%u6DFB%u52A0%u4E86%20pay%20%u65B9%u6CD5%u540E%uFF0C%20%u5982%uFF1A%0A%0A%60%60%60%0Amodule.exports%20%3D%20%7B%0A%09pay%3A%20function%20%28%29%20%7B%0A%09%09doSomeThing%28%29%0A%09%7D%0A%7D%0A%60%60%60%0A%0A%u53EF%u4EE5%u76F4%u63A5%u4F7F%u7528%20/purchase/pay%20%u8BBF%u95EE%uFF0C**Post%20%u548C%20Get%20%u65B9%u5F0F%u5747%u53EF**%0A%0A%u73B0%u5728%u6709%u4E2A%u95EE%u9898%u5C31%u662F%uFF0C%u6211%u4EEC%u5E0C%u671B%u53EA%u6709%20Post%20%u8BF7%u6C42%u624D%u88AB%u5904%u7406%uFF0C%u4F46%u662F%20Sails%20%u7684%u8DEF%u7531%u673A%u5236%u662F%uFF0C%u5148%u5728%u81EA%u5B9A%u4E49%u8DEF%u7531%20routes.js%20%u4E2D%u5339%u914D%uFF0C%u6CA1%u6709%u7ED3%u679C%u5219%u5728**%u81EA%u52A8%u8DEF%u7531%u4E2D%u5339%u914D**%u3002%0A%u6240%u4EE5%u6211%u4EEC%u4F7F%u7528%20get%20/purchase/pay%20%u65B9%u5F0F%u8BF7%u6C42%u7684%u8BDD%uFF0C%u867D%u7136%u8BE5%u8BF7%u6C42%u88AB%u81EA%u5B9A%u4E49%u8DEF%u7531%u7684%20Post%20%u8FC7%u6EE4%u6389%uFF0C%u4F46%u662F%u8BF7%u6C42%u8FD8%u662F%u662F%u4F1A%u88AB%u81EA%u52A8%u8DEF%u7531%u5904%u7406%u7684%u3002%u8FD9%u7B97%u662F%20Sails%20%u7684%u7F3A%u9677%uFF08%u8FD9%u5E94%u8BE5%u7B97%u662F%u4E2A%20BUG%20%u5427%uFF0C%u54C8%u54C8%u3002%uFF09%uFF0C%u8FD8%u4E0D%u591F%u667A%u80FD%u3002%0A%0A%u8981%u5B9E%u73B0%u6211%u4EEC%u7684%u76EE%u7684%uFF0C%u6211%u4EEC%u9700%u8981**%u5173%u95ED%u81EA%u52A8%u8DEF%u7531%u529F%u80FD**%u3002%20sails%20%u63D0%u4F9B%u4E86%u6B64%u9879%u914D%u7F6E%uFF0C%u5728%20PurchaseController%20%u6DFB%u52A0%u4EE5%u4E0B%u914D%u7F6E%uFF1A%0A%0A%60%60%60%0Amodule.exports%20%3D%20purchase%20%3D%20%7B%0A%0A_config%3A%20%7B%0A%09actions%3A%20false%2C%20//%u5173%u95ED%u81EA%u52A8%u8DEF%u7531%0A%09shortcuts%3A%20false%2C%0A%09rest%3A%20false%0A%7D%2C%0A%0Abuy%3A%20function%20%28%29%20%7B%0A%09doSomeThing%28%29%0A%7D%0A%0A%7D%0A%60%60%60%0A%0A%u8FD9%u6837%u5C31%u884C%u5566%uFF0C%u5173%u4E8E%u8BE5%u914D%u7F6E%u7684%u8BE6%u7EC6%u4FE1%u606F%u89C1%u6587%u6863%uFF1A%5Bsails-config-blueprint%5D%28http%3A//sailsjs.org/documentation/reference/configuration/sails-config-blueprint%29%0A%u8FD8%u53EF%u4EE5%u987A%u4FBF%u5173%u95ED%20Rest%20%u63A5%u53E3%u529F%u80FD%u3002%0A%0AStackoverflow%20%u4E0A%u6709%u4EBA%u95EE%u4E86%u7C7B%u4F3C%u7684%u95EE%u9898%uFF0C%u4E5F%u53EF%u4EE5%u53C2%u8003%u4E0B%uFF1A%0Ahttp%3A//stackoverflow.com/questions/26921889/disabling-default-sails-js-routes%0A%0A</center>"
  },
  {
    "title": "Sails 修改 http response 的实现",
    "created": "2016-03-22T20:42:44.000Z",
    "updated": "2016-06-03T01:48:18.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=d9828b25-aa42-43fb-af31-977a2b594084&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n### Sails 修改 http response 的实现\n\n#### 需求\n\n需要在某些接口返回的 json 返回值内容，添加一些字段，比如之前接口返回值是：\n\n    { \"code\": 0, \"data\": {}}\n\n现在要添加一个字段，这样子：\n\n    { \"code\": 0, \"data\": {} “newValue” ：‘’}\n\n简单的办法是直接修改接口返回值的地方，但是需要每个接口都要修改一下，不通用也麻烦。\n\nsails 提供了 policy 机制， 其实也就是 express 的 middleware ，提供切片式的操作，可以在这里修改上下文，一般用来做 log 工作。因为 js 闭包的特性，在 policy 里，是可以访问 req（request） 里的属性的，但是无法访问 res（response）里的属性。\n\n既然不能直接访问属性，那就换个思路，在 policy 里替换 res.json 方法，加上我们自定义的内容。  \n这个 policy 的代码如下：\n\n    /** * 查询新券数量 * @param req * @param res * @param next */module.exports = function getNewTicketNums(req, res, next) { var ud = req.param('ud'); var user_id = req.param('user_id'); user_id = user_id || ud; if (!user_id) { console.log('getNewTicketNums 没有 user_id'); return next() } // 保存之前的 json function var end = res.json; res.json = function () { // 把当前 function 参数保存起来 var arg = arguments; try { console.log('modify response value', arg); TreasureHuntService.getNewTicketNums(user_id, function (err, nums) { // 修改了参数 arg[1].hasTicketNews = nums || 0; // 继续执行之前定义的方法. end.apply(res, arg); }); } catch (err) { end.apply(res, arg); } }; next();};\n\n主要是依赖 apply 来实现函数替换。  \n关于 apply 的作用可以看文档 [https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply)\n\nOK，写好这个 policy 之后，我们 sails 的 policies 文件里配置哪个结果需要这个修改功能就可以啦。\n\n    \"getUserAsset\": [\"getNewTicketNums\"],\"demandAssets\": [\"getNewTicketNums\", \"requestAuthentication\"]\n\n参考：  \n[http://blog.csdn.net/puncha/article/details/9137001](http://blog.csdn.net/puncha/article/details/9137001)  \n[https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply](https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply)\n\n<center style=\"display:none\">@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%23%23%23Sails%20%u4FEE%u6539%20http%20response%20%u7684%u5B9E%u73B0%0A%0A%23%23%23%23%u9700%u6C42%0A%u9700%u8981%u5728%u67D0%u4E9B%u63A5%u53E3%u8FD4%u56DE%u7684%20json%20%u8FD4%u56DE%u503C%u5185%u5BB9%uFF0C%u6DFB%u52A0%u4E00%u4E9B%u5B57%u6BB5%uFF0C%u6BD4%u5982%u4E4B%u524D%u63A5%u53E3%u8FD4%u56DE%u503C%u662F%uFF1A%0A%0A%60%60%60%0A%7B%0A%20%20%22code%22%3A%200%2C%0A%20%20%22data%22%3A%20%7B%7D%0A%7D%0A%60%60%60%0A%u73B0%u5728%u8981%u6DFB%u52A0%u4E00%u4E2A%u5B57%u6BB5%uFF0C%u8FD9%u6837%u5B50%uFF1A%0A%0A%60%60%60%0A%7B%0A%20%20%22code%22%3A%200%2C%0A%20%20%22data%22%3A%20%7B%7D%0A%20%20%u201CnewValue%u201D%20%uFF1A%u2018%u2019%0A%7D%0A%60%60%60%0A%0A%u7B80%u5355%u7684%u529E%u6CD5%u662F%u76F4%u63A5%u4FEE%u6539%u63A5%u53E3%u8FD4%u56DE%u503C%u7684%u5730%u65B9%uFF0C%u4F46%u662F%u9700%u8981%u6BCF%u4E2A%u63A5%u53E3%u90FD%u8981%u4FEE%u6539%u4E00%u4E0B%uFF0C%u4E0D%u901A%u7528%u4E5F%u9EBB%u70E6%u3002%0A%0Asails%20%u63D0%u4F9B%u4E86%20policy%20%u673A%u5236%uFF0C%20%u5176%u5B9E%u4E5F%u5C31%u662F%20express%20%u7684%20middleware%20%uFF0C%u63D0%u4F9B%u5207%u7247%u5F0F%u7684%u64CD%u4F5C%uFF0C%u53EF%u4EE5%u5728%u8FD9%u91CC%u4FEE%u6539%u4E0A%u4E0B%u6587%uFF0C%u4E00%u822C%u7528%u6765%u505A%20%20log%20%20%u5DE5%u4F5C%u3002%u56E0%u4E3A%20js%20%u95ED%u5305%u7684%u7279%u6027%uFF0C%u5728%20policy%20%u91CC%uFF0C%u662F%u53EF%u4EE5%u8BBF%u95EE%20req%uFF08request%uFF09%20%u91CC%u7684%u5C5E%u6027%u7684%uFF0C%u4F46%u662F%u65E0%u6CD5%u8BBF%u95EE%20res%uFF08response%uFF09%u91CC%u7684%u5C5E%u6027%u3002%0A%0A%u65E2%u7136%u4E0D%u80FD%u76F4%u63A5%u8BBF%u95EE%u5C5E%u6027%uFF0C%u90A3%u5C31%u6362%u4E2A%u601D%u8DEF%uFF0C%u5728%20policy%20%u91CC%u66FF%u6362%20res.json%20%u65B9%u6CD5%uFF0C%u52A0%u4E0A%u6211%u4EEC%u81EA%u5B9A%u4E49%u7684%u5185%u5BB9%u3002%0A%u8FD9%u4E2A%20policy%20%u7684%u4EE3%u7801%u5982%u4E0B%uFF1A%0A%0A%60%60%60%0A/**%0A%20*%20%u67E5%u8BE2%u65B0%u5238%u6570%u91CF%0A%20*%20@param%20req%0A%20*%20@param%20res%0A%20*%20@param%20next%0A%20*/%0Amodule.exports%20%3D%20function%20getNewTicketNums%28req%2C%20res%2C%20next%29%20%7B%0A%20%20var%20ud%20%3D%20req.param%28%27ud%27%29%3B%0A%20%20var%20user_id%20%3D%20req.param%28%27user_id%27%29%3B%0A%20%20user_id%20%3D%20user_id%20%7C%7C%20ud%3B%0A%20%20if%20%28%21user_id%29%20%7B%0A%20%20%20%20console.log%28%27getNewTicketNums%20%u6CA1%u6709%20user_id%27%29%3B%0A%20%20%20%20return%20next%28%29%0A%20%20%7D%0A%20%20//%20%u4FDD%u5B58%u4E4B%u524D%u7684%20json%20function%0A%20%20var%20end%20%3D%20res.json%3B%0A%20%20res.json%20%3D%20function%20%28%29%20%7B%0A%20%20%20%20//%20%u628A%u5F53%u524D%20function%20%u53C2%u6570%u4FDD%u5B58%u8D77%u6765%0A%20%20%20%20var%20arg%20%3D%20arguments%3B%0A%20%20%20%20try%20%7B%0A%20%20%20%20%20%20console.log%28%27modify%20response%20value%27%2C%20arg%29%3B%0A%20%20%20%20%20%20TreasureHuntService.getNewTicketNums%28user_id%2C%20function%20%28err%2C%20nums%29%20%7B%0A%20%20%20%20%20%20%20%20//%20%u4FEE%u6539%u4E86%u53C2%u6570%0A%20%20%20%20%20%20%20%20arg%5B1%5D.hasTicketNews%20%3D%20nums%20%7C%7C%200%3B%0A%20%20%20%20%20%20%20%20//%20%u7EE7%u7EED%u6267%u884C%u4E4B%u524D%u5B9A%u4E49%u7684%u65B9%u6CD5.%0A%20%20%20%20%20%20%20%20end.apply%28res%2C%20arg%29%3B%0A%20%20%20%20%20%20%7D%29%3B%0A%20%20%20%20%7D%20catch%20%28err%29%20%7B%0A%20%20%20%20%20%20end.apply%28res%2C%20arg%29%3B%0A%20%20%20%20%7D%0A%20%20%7D%3B%0A%20%20next%28%29%3B%0A%7D%3B%0A%60%60%60%0A%20%u4E3B%u8981%u662F%u4F9D%u8D56%20apply%20%u6765%u5B9E%u73B0%u51FD%u6570%u66FF%u6362%u3002%0A%u5173%u4E8E%20apply%20%u7684%u4F5C%u7528%u53EF%u4EE5%u770B%u6587%u6863%20https%3A//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply%0A%0AOK%uFF0C%u5199%u597D%u8FD9%u4E2A%20policy%20%u4E4B%u540E%uFF0C%u6211%u4EEC%20sails%20%u7684%20policies%20%u6587%u4EF6%u91CC%u914D%u7F6E%u54EA%u4E2A%u7ED3%u679C%u9700%u8981%u8FD9%u4E2A%u4FEE%u6539%u529F%u80FD%u5C31%u53EF%u4EE5%u5566%u3002%0A%0A%60%60%60%0A%22getUserAsset%22%3A%20%5B%22getNewTicketNums%22%5D%2C%0A%22demandAssets%22%3A%20%5B%22getNewTicketNums%22%2C%20%22requestAuthentication%22%5D%0A%60%60%60%0A%0A%u53C2%u8003%uFF1A%0Ahttp%3A//blog.csdn.net/puncha/article/details/9137001%0Ahttps%3A//developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Function/apply%0A%0A%0A</center>"
  },
  {
    "title": "新的写博客的方式",
    "created": "2016-03-04T03:00:56.000Z",
    "updated": "2016-03-04T03:00:56.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\"><a style=\"position: absolute;color: #FFF;text-decoration: none;font-size: 12px;height: 25px;border-radius: 0;margin-top: -20px;right: 15px;background: rgba(0, 0, 0, 0);border-left: 10px solid #BB3A34;border-right: 10px solid #BB3A34;border-bottom: 5px solid rgba(0, 0, 0, 0);width: 0;text-indent:-100000px;\">Edit</a></del>\n\n### 新的写博客的方式\n\n之前博客都是写在博客园里的：[我的博客](http://www.cnblogs.com/myfjd/)。在博客园里写博客主要是懒，不想折腾。平时我自己使用[马克飞象](https://maxiang.info/)来编辑文章，排版轻松，方便同步到印象笔记，但是马克飞象里的文章放到博客园之后排版就混乱了，博客园对 markdown 的支持太差劲。而且文章也不好管理，笔记里一份，博客里一份，一下子没想到好的解决方案，就这样一直拖着了。\n\n今年开始使用**阿里云**，还是挺方便的，突然想自己搭建博客，比较可定制性比较高，起码可以搞定 markdown 的问题。说做就做，搞定麻烦的备案后，这个博客就搭建好了。使用流行的解决方案 WordPress ，简单快速。\n\nWordPress 有很多支持 markdown 的插件，试了几个，还是不满意，主要是对 markdown 格式的解释不一致，最终出来的文章还是跟我在马克飞象写的格式不一致。\n\n除了格式不一致的问题，还有文章管理的问题，我现在更喜欢在 **Evernote** 里写东西，我需要把写好的东西一个一个搬到博客里，呃，好累。搜索一下，找到一个[同步插件](http://www.biliyu.com/evernote-sync#comment-227)，可以把 Evernote 里特定标签的笔记同步到 WordPress 中，居然还是支持马克飞象的，哈哈。\n\n现在写博客的流程是这样的。\n\n1.  在马克飞象编辑文章\n2.  自动同步文章到 Evernote\n3.  自动同步 Evernote 到 WordPress\n\n所有笔记都在马克飞象管理，然后笔记就自动同步到 Evernote 和 WordPress 啦，非常轻松，而且修改久文章也会自动更新到两个地方。\n\n<center style=\"display:none\">%23%23%23%u65B0%u7684%u5199%u535A%u5BA2%u7684%u65B9%u5F0F%0A%0A%u4E4B%u524D%u535A%u5BA2%u90FD%u662F%u5199%u5728%u535A%u5BA2%u56ED%u91CC%u7684%uFF1A%5B%u6211%u7684%u535A%u5BA2%5D%28http%3A//www.cnblogs.com/myfjd/%29%u3002%u5728%u535A%u5BA2%u56ED%u91CC%u5199%u535A%u5BA2%u4E3B%u8981%u662F%u61D2%uFF0C%u4E0D%u60F3%u6298%u817E%u3002%u5E73%u65F6%u6211%u81EA%u5DF1%u4F7F%u7528%5B%u9A6C%u514B%u98DE%u8C61%5D%28https%3A//maxiang.info/%29%u6765%u7F16%u8F91%u6587%u7AE0%uFF0C%u6392%u7248%u8F7B%u677E%uFF0C%u65B9%u4FBF%u540C%u6B65%u5230%u5370%u8C61%u7B14%u8BB0%uFF0C%u4F46%u662F%u9A6C%u514B%u98DE%u8C61%u91CC%u7684%u6587%u7AE0%u653E%u5230%u535A%u5BA2%u56ED%u4E4B%u540E%u6392%u7248%u5C31%u6DF7%u4E71%u4E86%uFF0C%u535A%u5BA2%u56ED%u5BF9%20markdown%20%u7684%u652F%u6301%u592A%u5DEE%u52B2%u3002%u800C%u4E14%u6587%u7AE0%u4E5F%u4E0D%u597D%u7BA1%u7406%uFF0C%u7B14%u8BB0%u91CC%u4E00%u4EFD%uFF0C%u535A%u5BA2%u91CC%u4E00%u4EFD%uFF0C%u4E00%u4E0B%u5B50%u6CA1%u60F3%u5230%u597D%u7684%u89E3%u51B3%u65B9%u6848%uFF0C%u5C31%u8FD9%u6837%u4E00%u76F4%u62D6%u7740%u4E86%u3002%20%20%0A%0A%0A%u4ECA%u5E74%u5F00%u59CB%u4F7F%u7528**%u963F%u91CC%u4E91**%uFF0C%u8FD8%u662F%u633A%u65B9%u4FBF%u7684%uFF0C%u7A81%u7136%u60F3%u81EA%u5DF1%u642D%u5EFA%u535A%u5BA2%uFF0C%u6BD4%u8F83%u53EF%u5B9A%u5236%u6027%u6BD4%u8F83%u9AD8%uFF0C%u8D77%u7801%u53EF%u4EE5%u641E%u5B9A%20markdown%20%u7684%u95EE%u9898%u3002%u8BF4%u505A%u5C31%u505A%uFF0C%u641E%u5B9A%u9EBB%u70E6%u7684%u5907%u6848%u540E%uFF0C%u8FD9%u4E2A%u535A%u5BA2%u5C31%u642D%u5EFA%u597D%u4E86%u3002%u4F7F%u7528%u6D41%u884C%u7684%u89E3%u51B3%u65B9%u6848%20WordPress%20%uFF0C%u7B80%u5355%u5FEB%u901F%u3002%20%20%20%0A%0A%0AWordPress%20%u6709%u5F88%u591A%u652F%u6301%20markdown%20%u7684%u63D2%u4EF6%uFF0C%u8BD5%u4E86%u51E0%u4E2A%uFF0C%u8FD8%u662F%u4E0D%u6EE1%u610F%uFF0C%u4E3B%u8981%u662F%u5BF9%20markdown%20%u683C%u5F0F%u7684%u89E3%u91CA%u4E0D%u4E00%u81F4%uFF0C%u6700%u7EC8%u51FA%u6765%u7684%u6587%u7AE0%u8FD8%u662F%u8DDF%u6211%u5728%u9A6C%u514B%u98DE%u8C61%u5199%u7684%u683C%u5F0F%u4E0D%u4E00%u81F4%u3002%0A%0A%u9664%u4E86%u683C%u5F0F%u4E0D%u4E00%u81F4%u7684%u95EE%u9898%uFF0C%u8FD8%u6709%u6587%u7AE0%u7BA1%u7406%u7684%u95EE%u9898%uFF0C%u6211%u73B0%u5728%u66F4%u559C%u6B22%u5728%20**Evernote**%20%u91CC%u5199%u4E1C%u897F%uFF0C%u6211%u9700%u8981%u628A%u5199%u597D%u7684%u4E1C%u897F%u4E00%u4E2A%u4E00%u4E2A%u642C%u5230%u535A%u5BA2%u91CC%uFF0C%u5443%uFF0C%u597D%u7D2F%u3002%u641C%u7D22%u4E00%u4E0B%uFF0C%u627E%u5230%u4E00%u4E2A%5B%u540C%u6B65%u63D2%u4EF6%5D%28http%3A//www.biliyu.com/evernote-sync%23comment-227%29%uFF0C%u53EF%u4EE5%u628A%20Evernote%20%u91CC%u7279%u5B9A%u6807%u7B7E%u7684%u7B14%u8BB0%u540C%u6B65%u5230%20WordPress%20%u4E2D%uFF0C%u5C45%u7136%u8FD8%u662F%u652F%u6301%u9A6C%u514B%u98DE%u8C61%u7684%uFF0C%u54C8%u54C8%u3002%0A%0A%u73B0%u5728%u5199%u535A%u5BA2%u7684%u6D41%u7A0B%u662F%u8FD9%u6837%u7684%u3002%0A%0A1.%20%u5728%u9A6C%u514B%u98DE%u8C61%u7F16%u8F91%u6587%u7AE0%0A2.%20%u81EA%u52A8%u540C%u6B65%u6587%u7AE0%u5230%20Evernote%0A3.%20%u81EA%u52A8%u540C%u6B65%20Evernote%20%u5230%20WordPress%0A%0A%u6240%u6709%u7B14%u8BB0%u90FD%u5728%u9A6C%u514B%u98DE%u8C61%u7BA1%u7406%uFF0C%u7136%u540E%u7B14%u8BB0%u5C31%u81EA%u52A8%u540C%u6B65%u5230%20Evernote%20%u548C%20WordPress%20%u5566%uFF0C%u975E%u5E38%u8F7B%u677E%uFF0C%u800C%u4E14%u4FEE%u6539%u4E45%u6587%u7AE0%u4E5F%u4F1A%u81EA%u52A8%u66F4%u65B0%u5230%u4E24%u4E2A%u5730%u65B9%u3002</center>"
  },
  {
    "title": "使用 powershell 的 grep 过滤文本",
    "created": "2014-09-17T23:40:50.000Z",
    "updated": "2016-03-03T22:29:55.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=7806d4af-34f2-47b1-af75-275dac0f4ca0&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n## 使用 powershell 的 grep 过滤文本\n\n有个log文件，大小在4M左右，要求找出里面耗时超过100s 的记录。首先想到了强大的 grep ，那么就搞起。  \n先在网上找一下资料，[这篇文章](http://songxj.blog.51cto.com/620981/270962)，有几种方式：\n\n> 第一种：  \n> Get-content somefile.txt|findstr “some_regexp”  \n> Get-content可以换成cat，Powershell已经给他们做了个别名，可真是体谅sheller。  \n> 这种方法算是commandline和Powershell混合，因为findstr是命令行工具，并不是Powershell的cmdlet。  \n> 第二种：  \n> cat somefile.txt | where { $_ -match “some_regexp”}  \n> 纯种Powershell实现了，利用了where过滤  \n> 第三种：  \n> Select-String “some_regexp” somefile.txt  \n> 直接用Select-string的实现。\n\n最后选择的 powershell 命令如下:\n\n    1.cat .\\log.log|where {$_ -match \"\\d{3,}\\.\\d{2,}s\"} >>result.log\n\n用了 **where** 这个， 这个能使用正则， **findstr** 命令不行。里面的正则匹配字符串 **“\\d{3,}.\\d{2,}s”** 也很简单了**，”3个数字.2个数字以上s “的**意思。\n\n最后： 过滤出来的结果放入 result.log\n\n> 17:05:14,884 ltcappserver.node1@ltcappserver http-0.0.0.0-8888-Processor7 DEBUG StrategyActionHelper: - getStrategyInvoiceMap finished … Consumed time:191.028s  \n> 17:05:14,889 ltcappserver.node1@ltcappserver http-0.0.0.0-8888-Processor4 DEBUG StrategyActionHelper: - getStrategyInvoiceMap finished … Consumed time:191.04s  \n> 17:07:19,112 ltcappserver.node1@ltcappserver http-0.0.0.0-8888-Processor7 DEBUG StrategyActionHelper: - setListStrategyAttributes finished … Consumed time:379.082s  \n> 17:07:20,106 ltcappserver.node1@ltcappserver http-0.0.0.0-8888-Processor4 DEBUG StrategyActionHelper: - setListStrategyAttributes finished … Consumed time:381.021s  \n> 17:07:37,449 ltcappserver.node1@ltcappserver http-0.0.0.0-8888-Processor4 DEBUG StrategySearchAction: - setListStrategyAttributes finished … Consumed time:398.364s  \n> 17:25:26,773 ltcappserver.node1@ltcappserver http-0.0.0.0-8888-Processor4 DEBUG cl: - build table data in getClientContractElement finished … Consumed time:1064.296s  \n> 17:25:27,328 ltcappserver.node1@ltcappserver http-0.0.0.0-8888-Processor4 DEBUG cl: - getClientContractElement finished … Consumed time:1064.858s  \n> 17:25:27,328 ltcappserver.node1@ltcappserver http-0.0.0.0-8888-Processor4 DEBUG cl: - buildGTReport finished … Consumed time:1064.87s Free memory: 176198\n\n<center style=\"display:none\">%23%23%u4F7F%u7528%20powershell%20%u7684%20grep%20%20%u8FC7%u6EE4%u6587%u672C%0A%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%0A%u6709%u4E2Alog%u6587%u4EF6%uFF0C%u5927%u5C0F%u57284M%u5DE6%u53F3%uFF0C%u8981%u6C42%u627E%u51FA%u91CC%u9762%u8017%u65F6%u8D85%u8FC7100s%20%u7684%u8BB0%u5F55%u3002%u9996%u5148%u60F3%u5230%u4E86%u5F3A%u5927%u7684%20grep%20%uFF0C%u90A3%u4E48%u5C31%u641E%u8D77%u3002%0A%u5148%u5728%u7F51%u4E0A%u627E%u4E00%u4E0B%u8D44%u6599%uFF0C%5B%u8FD9%u7BC7%u6587%u7AE0%5D%28http%3A//songxj.blog.51cto.com/620981/270962%29%uFF0C%u6709%u51E0%u79CD%u65B9%u5F0F%uFF1A%0A%0A%3E%20%u7B2C%u4E00%u79CD%uFF1A%0AGet-content%20somefile.txt%7Cfindstr%20%22some_regexp%22%0AGet-content%u53EF%u4EE5%u6362%u6210cat%uFF0CPowershell%u5DF2%u7ECF%u7ED9%u4ED6%u4EEC%u505A%u4E86%u4E2A%u522B%u540D%uFF0C%u53EF%u771F%u662F%u4F53%u8C05sheller%u3002%0A%u8FD9%u79CD%u65B9%u6CD5%u7B97%u662Fcommandline%u548CPowershell%u6DF7%u5408%uFF0C%u56E0%u4E3Afindstr%u662F%u547D%u4EE4%u884C%u5DE5%u5177%uFF0C%u5E76%u4E0D%u662FPowershell%u7684cmdlet%u3002%0A%u7B2C%u4E8C%u79CD%uFF1A%0Acat%20somefile.txt%20%7C%20where%20%7B%20%24_%20-match%20%22some_regexp%22%7D%0A%u7EAF%u79CDPowershell%u5B9E%u73B0%u4E86%uFF0C%u5229%u7528%u4E86where%u8FC7%u6EE4%0A%u7B2C%u4E09%u79CD%uFF1A%0ASelect-String%20%22some_regexp%22%20somefile.txt%0A%u76F4%u63A5%u7528Select-string%u7684%u5B9E%u73B0%u3002%0A%0A%u6700%u540E%u9009%u62E9%u7684%20powershell%20%u547D%u4EE4%u5982%u4E0B%3A%0A%0A%20%20%20%20cat%20.%5Clog.log%7Cwhere%20%7B%24_%20-match%20%22%5Cd%7B3%2C%7D%5C.%5Cd%7B2%2C%7Ds%22%7D%20%3E%3Eresult.log%0A%0A%u7528%u4E86%20**where**%20%u8FD9%u4E2A%uFF0C%20%u8FD9%u4E2A%u80FD%u4F7F%u7528%u6B63%u5219%uFF0C%20**findstr**%20%u547D%u4EE4%u4E0D%u884C%u3002%u91CC%u9762%u7684%u6B63%u5219%u5339%u914D%u5B57%u7B26%u4E32%20%20**%22%5Cd%7B3%2C%7D%5C.%5Cd%7B2%2C%7Ds%22**%20%u4E5F%u5F88%u7B80%u5355%u4E86**%uFF0C%223%u4E2A%u6570%u5B57.2%u4E2A%u6570%u5B57%u4EE5%u4E0As%20%22%u7684**%u610F%u601D%u3002%0A%0A%u6700%u540E%uFF1A%20%u8FC7%u6EE4%u51FA%u6765%u7684%u7ED3%u679C%u653E%u5165%20result.log%0A%0A%3E%2017%3A05%3A14%2C884%20ltcappserver.node1@ltcappserver%20http-0.0.0.0-8888-Processor7%20DEBUG%20StrategyActionHelper%3A%20-%20getStrategyInvoiceMap%20finished%20...%20Consumed%20time%3A191.028s%0A17%3A05%3A14%2C889%20ltcappserver.node1@ltcappserver%20http-0.0.0.0-8888-Processor4%20DEBUG%20StrategyActionHelper%3A%20-%20getStrategyInvoiceMap%20finished%20...%20Consumed%20time%3A191.04s%0A17%3A07%3A19%2C112%20ltcappserver.node1@ltcappserver%20http-0.0.0.0-8888-Processor7%20DEBUG%20StrategyActionHelper%3A%20-%20setListStrategyAttributes%20finished%20...%20Consumed%20time%3A379.082s%0A17%3A07%3A20%2C106%20ltcappserver.node1@ltcappserver%20http-0.0.0.0-8888-Processor4%20DEBUG%20StrategyActionHelper%3A%20-%20setListStrategyAttributes%20finished%20...%20Consumed%20time%3A381.021s%0A17%3A07%3A37%2C449%20ltcappserver.node1@ltcappserver%20http-0.0.0.0-8888-Processor4%20DEBUG%20StrategySearchAction%3A%20-%20setListStrategyAttributes%20finished%20...%20Consumed%20time%3A398.364s%0A17%3A25%3A26%2C773%20ltcappserver.node1@ltcappserver%20http-0.0.0.0-8888-Processor4%20DEBUG%20cl%3A%20-%20build%20table%20data%20in%20getClientContractElement%20finished%20...%20Consumed%20time%3A1064.296s%0A17%3A25%3A27%2C328%20ltcappserver.node1@ltcappserver%20http-0.0.0.0-8888-Processor4%20DEBUG%20cl%3A%20-%20getClientContractElement%20finished%20...%20Consumed%20time%3A1064.858s%0A17%3A25%3A27%2C328%20ltcappserver.node1@ltcappserver%20http-0.0.0.0-8888-Processor4%20DEBUG%20cl%3A%20-%20buildGTReport%20finished%20...%20Consumed%20time%3A1064.87s%20%20%20%20%20%20Free%20memory%3A%20176198%0A</center>"
  },
  {
    "title": "马克飞象流程图功能体验",
    "created": "2016-01-07T20:57:18.000Z",
    "updated": "2016-03-03T22:29:21.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=88aef5e6-8d95-455e-80b7-d060502dc739&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n### 马克飞象流程图功能体验\n\n#### 语法\n\n马克飞象提供了流程图功能，所以就试着体验一下。写的时候要这样，过程式的写法，比较乱。  \n<en-media longdesc=\"./1457072672368.png\" alt=\"Alt text\" title=\"\" type=\"image/png\" hash=\"1fecd4a715b81038e33de5d8572d3e2c\" style=\"border: 0; vertical-align: middle; max-width: 100%;\"></en-media>\n\n#### 效果图\n\n <en-media type=\"image/png\" width=\"594.6376953125\" height=\"744.638671875\" longdesc=\"__SVG__33e22fe00aa01fdff51504fa5c40a772\" style=\"border: 0; vertical-align: middle; max-width: 100%; margin-top: 0; margin-bottom: 0;\" hash=\"d1b2bf9f9305b5e4dfed2959925d8bac\"></en-media>\n\n#### 总结\n\n写着挺累的，没有使用画图工具轻松。而且线的方向是无法控制的，会优先往右偏。  \n写简单的流程图的时候适用，复杂的还是老老实实用工具画好了截图吧。\n\n<center style=\"display:none\">%23%23%23%20%u9A6C%u514B%u98DE%u8C61%u6D41%u7A0B%u56FE%u529F%u80FD%u4F53%u9A8C%0A%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%23%23%23%23%u8BED%u6CD5%0A%u9A6C%u514B%u98DE%u8C61%u63D0%u4F9B%u4E86%u6D41%u7A0B%u56FE%u529F%u80FD%uFF0C%u6240%u4EE5%u5C31%u8BD5%u7740%u4F53%u9A8C%u4E00%u4E0B%u3002%u5199%u7684%u65F6%u5019%u8981%u8FD9%u6837%uFF0C%u8FC7%u7A0B%u5F0F%u7684%u5199%u6CD5%uFF0C%u6BD4%u8F83%u4E71%u3002%0A%21%5BAlt%20text%5D%28./1457072672368.png%29%0A%0A%23%23%23%23%u6548%u679C%u56FE%0A%60%60%60flow%0Ast%3D%3Estart%3A%20%u70B9%u51FB%u62BD%u7EA2%u5305%0Ae%3D%3Eend%0Aopc%3D%3Eoperation%3A%20create%u7EA2%u5305%0Aopu%3D%3Eoperation%3A%20update%u7EA2%u5305%0Aopbuy%3D%3Eoperation%3A%20%u8D2D%u4E70%0Aopsent%3D%3Eoperation%3A%20%u8D60%u9001%u4F53%u9A8C%u91D1%0A%0Acond_withdraw%3D%3Econdition%3A%20%u6CA1%u6709%u63D0%u73B0%0Acond_buy%3D%3Econdition%3A%20%u8D2D%u4E70%u91D1%u989D%u6EE11000%0Acond%3D%3Econdition%3A%20%u7EA2%u5305%u5B58%u5728%3F%0Acond_Used%3D%3Econdition%3A%20%u7B2C%u4E00%u6B21%u62BD%u5956%uFF1F%0A%0Ast-%3Econd%0Aopu-%3Eopbuy%0Aopc-%3Eopbuy%0Aopbuy-%3Econd_withdraw%0Acond%28yes%29-%3Econd_Used%0Acond%28no%29-%3Eopc%0Acond_Used%28no%29-%3Eopu%0Acond_Used%28yes%29-%3Eopc%0Acond_withdraw%28yes%29-%3Econd_buy%0Acond_withdraw%28no%29-%3Ee%0Acond_buy%28yes%29-%3Eopsent%0Acond_buy%28no%29-%3Ee%0A%0A%0A%60%60%60%0A%23%23%23%23%u603B%u7ED3%0A%u5199%u7740%u633A%u7D2F%u7684%uFF0C%u6CA1%u6709%u4F7F%u7528%u753B%u56FE%u5DE5%u5177%u8F7B%u677E%u3002%u800C%u4E14%u7EBF%u7684%u65B9%u5411%u662F%u65E0%u6CD5%u63A7%u5236%u7684%uFF0C%u4F1A%u4F18%u5148%u5F80%u53F3%u504F%u3002%0A%u5199%u7B80%u5355%u7684%u6D41%u7A0B%u56FE%u7684%u65F6%u5019%u9002%u7528%uFF0C%u590D%u6742%u7684%u8FD8%u662F%u8001%u8001%u5B9E%u5B9E%u7528%u5DE5%u5177%u753B%u597D%u4E86%u622A%u56FE%u5427%u3002</center>"
  },
  {
    "title": "快速搭建一个监控服务",
    "created": "2016-01-07T20:57:23.000Z",
    "updated": "2016-03-03T22:23:01.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.info/#/?provider=evernote&guid=d00bcefb-3e1a-4a84-a143-7032b8cde940&notebook=%E6%88%91%E5%86%99%E7%9A%84%E4%B8%9C%E8%A5%BF)</del>\n\n### 快速搭建一个监控服务\n\n业务需要，要监控服务每个接口的访问速度和每个接口所花费的时间。同事推荐 statsd ＋ graphite ＋ docker 组合，花了点时间收集一下相关的信息，尝试在阿里云上把这个服务搭建起来。\n\n#### 整个服务的三个关键步骤：\n\n运行服务（阿里云+docker）  \n发送数据（node）  \n收集展示数据（statsd + graphite）\n\n#### 一 安装运行服务：\n\n###### 需要的文档\n\n*   StatsD：是用来收集数据的，收集完数据就发送到其他服务器进行处理。 [http://blog.csdn.net/puncha/article/details/9083061](http://blog.csdn.net/puncha/article/details/9083061)\n\n*   Graphite ：数据分析和报表，使用实例：[http://blog.csdn.net/puncha/article/details/9137001](http://blog.csdn.net/puncha/article/details/9137001)\n\n*   Graphite API ：Graphite有自己的一套 API，这套 API 可以快速地生成报表。 API 文档 [http://graphite-api.readthedocs.org/en/latest/functions.html](http://graphite-api.readthedocs.org/en/latest/functions.html)\n*   statsd-graphite ：上面提到的服务不需要自己安装，已经有人做好了 docker 镜像了，集成了statsd graphite 服务。[https://hub.docker.com/r/hopsoft/graphite-statsd/](https://hub.docker.com/r/hopsoft/graphite-statsd/)。参考里面的文档，下载后运行就可以使用 statsd + graphite 服务了。\n*   docker：Docker相关的问题， 可以看看这篇文档，从入门到实践 [http://dockerpool.com/static/books/docker_practice/install/ubuntu.html](http://dockerpool.com/static/books/docker_practice/install/ubuntu.html)\n\n*   在阿里云上安装 docker 有些地方需要注意 [http://blog.csdn.net/minimicall/article/details/40108305](http://blog.csdn.net/minimicall/article/details/40108305)\n\n*   node-statsd-client ：发送数据也有现成的一个npm包， 是 express 中间件，用于发送信息，如每个接口的访问次数和耗时。详见  \n    npm [https://github.com/msiebuhr/node-statsd-client](https://github.com/msiebuhr/node-statsd-client)  \n    使用例子 [http://blog.csdn.net/puncha/article/details/9137001](http://blog.csdn.net/puncha/article/details/9137001)\n\n在服务都安装好之后，需要在 sails 里安装 express 的中间件 node-statsd-client 用于发送数据。  \n怎么安装？ sails 有文档 [http://sailsjs.org/documentation/concepts/middleware](http://sailsjs.org/documentation/concepts/middleware)。\n\n这里给个示例，修改 sails 项目下的 config/http.js 文件。  \n初始化：\n\n    1.var SDC = new require('statsd-client');2.var statsdClient = new SDC({ host: '112.74.207.91', port: 8125, debug: false }).getChildClient('koala');\n\n添加一个中间件，中间件过滤每个请求，这里做了个比较巧妙的事情，在中间件里替换了 res.end 方法，就可以在响应的时候发送数据了。\n\n    1.statsd_client: function (req, res, next) {2. var startTime = new Date();3. // Shadow end request4. var end = res.end;5. res.end = function () {6. end.apply(res, arguments);7. // Statistics the status code, especailly for 500, 4048. statsdClient.increment('status_codes.' + res.statusCode);9. var timeElapse = new Date() - startTime;10. if (req.route && req.route.path) {11. var path = req.route.path;12. if (Object.prototype.toString.call(path) === '[object RegExp]') {13. path = path.source;14. }15. if (path === \"/\") {16. path = \"root\";17. }18. // Statistics the page hit count and time to render the page19. var key = 'pages.' + req.method.toLowerCase() + '_' + path.replace(/:/g, \"\").replace(/\\//, \"\").replace(/\\//g, \"_\");20. statsdClient.timing(key, timeElapse);21. if (res.statusCode === 404) {22. var key404 = '404.' + req.method.toLowerCase() + '_' + path.replace(/:/g, \"\").replace(/\\//, \"\").replace(/\\//g, \"_\");23. statsdClient.increment(key404);24. }25. }26. };27. next();28.},\n\n上面的代码中一个发送了三个计数器\n\n*   pages.*\n*   statusCode.*\n*   users.*\n\n比较重要的方法是\n\n    1.statsdClient.timing(key, timeElapse);2.3.statsdClient.increment(key404);\n\n发送数据是直接调用 statsd-client 包提供的方法。  \n这个两个方法是记录请求的响应时长和记录 404 状态的次数。\n\n数据发送就搞定了。  \n接下来在 Graphite 的 dashboard 做几个统计，这里提供接口 api  \n查看过去一段时间内平均访问次数最高的10个接口：highestAverage(stats.timers.koala.pages.*.count,10)  \n查看过去一段时间内平均耗时最多的5个接口：highestAverage(stats.timers.koala.pages.*.mean,5)  \n一天内所有接口的访问次数：sumSeries(summarize(stats.timers.koala.pages.*.count,”1d”))\n\n<center style=\"display:none\">%23%23%23%u5FEB%u901F%u642D%u5EFA%u4E00%u4E2A%u76D1%u63A7%u670D%u52A1%0A%0A@%28%u6211%u5199%u7684%u4E1C%u897F%29%5Bposts%5D%0A%0A%u4E1A%u52A1%u9700%u8981%uFF0C%u8981%u76D1%u63A7%u670D%u52A1%u6BCF%u4E2A%u63A5%u53E3%u7684%u8BBF%u95EE%u901F%u5EA6%u548C%u6BCF%u4E2A%u63A5%u53E3%u6240%u82B1%u8D39%u7684%u65F6%u95F4%u3002%u540C%u4E8B%u63A8%u8350%20statsd%20%uFF0B%20graphite%20%uFF0B%20docker%20%u7EC4%u5408%uFF0C%u82B1%u4E86%u70B9%u65F6%u95F4%u6536%u96C6%u4E00%u4E0B%u76F8%u5173%u7684%u4FE1%u606F%uFF0C%u5C1D%u8BD5%u5728%u963F%u91CC%u4E91%u4E0A%u628A%u8FD9%u4E2A%u670D%u52A1%u642D%u5EFA%u8D77%u6765%u3002%0A%0A%23%23%23%23%u6574%u4E2A%u670D%u52A1%u7684%u4E09%u4E2A%u5173%u952E%u6B65%u9AA4%uFF1A%0A%u8FD0%u884C%u670D%u52A1%uFF08%u963F%u91CC%u4E91+docker%uFF09%0A%u53D1%u9001%u6570%u636E%uFF08node%uFF09%0A%u6536%u96C6%u5C55%u793A%u6570%u636E%uFF08statsd%20+%20graphite%uFF09%0A%0A%23%23%23%23%u4E00%20%u5B89%u88C5%u8FD0%u884C%u670D%u52A1%uFF1A%0A%23%23%23%23%23%23%u9700%u8981%u7684%u6587%u6863%0A-%20StatsD%uFF1A%u662F%u7528%u6765%u6536%u96C6%u6570%u636E%u7684%uFF0C%u6536%u96C6%u5B8C%u6570%u636E%u5C31%u53D1%u9001%u5230%u5176%u4ED6%u670D%u52A1%u5668%u8FDB%u884C%u5904%u7406%u3002%20%20http%3A//blog.csdn.net/puncha/article/details/9083061%0A%0A-%20Graphite%20%uFF1A%u6570%u636E%u5206%u6790%u548C%u62A5%u8868%uFF0C%u4F7F%u7528%u5B9E%u4F8B%uFF1Ahttp%3A//blog.csdn.net/puncha/article/details/9137001%0A-%20Graphite%20API%20%uFF1AGraphite%u6709%u81EA%u5DF1%u7684%u4E00%u5957%20API%uFF0C%u8FD9%u5957%20API%20%u53EF%u4EE5%u5FEB%u901F%u5730%u751F%u6210%u62A5%u8868%u3002%20API%20%u6587%u6863%20http%3A//graphite-api.readthedocs.org/en/latest/functions.html%0A-%20statsd-graphite%20%uFF1A%u4E0A%u9762%u63D0%u5230%u7684%u670D%u52A1%u4E0D%u9700%u8981%u81EA%u5DF1%u5B89%u88C5%uFF0C%u5DF2%u7ECF%u6709%u4EBA%u505A%u597D%u4E86%20docker%20%u955C%u50CF%u4E86%uFF0C%u96C6%u6210%u4E86statsd%20graphite%20%u670D%u52A1%u3002https%3A//hub.docker.com/r/hopsoft/graphite-statsd/%u3002%u53C2%u8003%u91CC%u9762%u7684%u6587%u6863%uFF0C%u4E0B%u8F7D%u540E%u8FD0%u884C%u5C31%u53EF%u4EE5%u4F7F%u7528%20statsd%20+%20graphite%20%u670D%u52A1%u4E86%u3002%0A-%20docker%uFF1ADocker%u76F8%u5173%u7684%u95EE%u9898%uFF0C%20%u53EF%u4EE5%u770B%u770B%u8FD9%u7BC7%u6587%u6863%uFF0C%u4ECE%u5165%u95E8%u5230%u5B9E%u8DF5%20http%3A//dockerpool.com/static/books/docker_practice/install/ubuntu.html%0A%0A-%20%u5728%u963F%u91CC%u4E91%u4E0A%u5B89%u88C5%20docker%20%u6709%u4E9B%u5730%u65B9%u9700%u8981%u6CE8%u610F%20http%3A//blog.csdn.net/minimicall/article/details/40108305%0A-%20node-statsd-client%20%uFF1A%u53D1%u9001%u6570%u636E%u4E5F%u6709%u73B0%u6210%u7684%u4E00%u4E2Anpm%u5305%uFF0C%20%u662F%20express%20%u4E2D%u95F4%u4EF6%uFF0C%u7528%u4E8E%u53D1%u9001%u4FE1%u606F%uFF0C%u5982%u6BCF%u4E2A%u63A5%u53E3%u7684%u8BBF%u95EE%u6B21%u6570%u548C%u8017%u65F6%u3002%u8BE6%u89C1%20%0Anpm%20https%3A//github.com/msiebuhr/node-statsd-client%0A%u4F7F%u7528%u4F8B%u5B50%20http%3A//blog.csdn.net/puncha/article/details/9137001%0A%0A%u5728%u670D%u52A1%u90FD%u5B89%u88C5%u597D%u4E4B%u540E%uFF0C%u9700%u8981%u5728%20sails%20%u91CC%u5B89%u88C5%20express%20%u7684%u4E2D%u95F4%u4EF6%20node-statsd-client%20%u7528%u4E8E%u53D1%u9001%u6570%u636E%u3002%0A%u600E%u4E48%u5B89%u88C5%uFF1F%20sails%20%u6709%u6587%u6863%20http%3A//sailsjs.org/documentation/concepts/middleware%u3002%0A%0A%u8FD9%u91CC%u7ED9%u4E2A%u793A%u4F8B%uFF0C%u4FEE%u6539%20sails%20%u9879%u76EE%u4E0B%u7684%20config/http.js%20%u6587%u4EF6%u3002%0A%u521D%u59CB%u5316%uFF1A%0A%0A%60%60%60%0Avar%20SDC%20%3D%20new%20require%28%27statsd-client%27%29%3B%0Avar%20statsdClient%20%3D%20new%20SDC%28%7B%20host%3A%20%27112.74.207.91%27%2C%20port%3A%208125%2C%20debug%3A%20false%20%7D%29.getChildClient%28%27koala%27%29%3B%0A%60%60%60%0A%0A%u6DFB%u52A0%u4E00%u4E2A%u4E2D%u95F4%u4EF6%uFF0C%u4E2D%u95F4%u4EF6%u8FC7%u6EE4%u6BCF%u4E2A%u8BF7%u6C42%uFF0C%u8FD9%u91CC%u505A%u4E86%u4E2A%u6BD4%u8F83%u5DE7%u5999%u7684%u4E8B%u60C5%uFF0C%u5728%u4E2D%u95F4%u4EF6%u91CC%u66FF%u6362%u4E86%20res.end%20%u65B9%u6CD5%uFF0C%u5C31%u53EF%u4EE5%u5728%u54CD%u5E94%u7684%u65F6%u5019%u53D1%u9001%u6570%u636E%u4E86%u3002%0A%0A%60%60%60%0Astatsd_client%3A%20function%20%28req%2C%20res%2C%20next%29%20%7B%0A%20var%20startTime%20%3D%20new%20Date%28%29%3B%0A%20//%20Shadow%20end%20request%0A%20var%20end%20%3D%20res.end%3B%0A%20res.end%20%3D%20function%20%28%29%20%7B%0A%20%20%20end.apply%28res%2C%20arguments%29%3B%0A%20%20%20//%20Statistics%20the%20status%20code%2C%20especailly%20for%20500%2C%20404%0A%20%20%20statsdClient.increment%28%27status_codes.%27%20+%20res.statusCode%29%3B%0A%20%20%20var%20timeElapse%20%3D%20new%20Date%28%29%20-%20startTime%3B%0A%20%20%20if%20%28req.route%20%26%26%20req.route.path%29%20%7B%0A%20%20%20%20%20var%20path%20%3D%20req.route.path%3B%0A%20%20%20%20%20if%20%28Object.prototype.toString.call%28path%29%20%3D%3D%3D%20%27%5Bobject%20RegExp%5D%27%29%20%7B%0A%20%20%20%20%20%20%20path%20%3D%20path.source%3B%0A%20%20%20%20%20%7D%0A%20%20%20%20%20if%20%28path%20%3D%3D%3D%20%22/%22%29%20%7B%0A%20%20%20%20%20%20%20path%20%3D%20%22root%22%3B%0A%20%20%20%20%20%7D%0A%20%20%20%20%20//%20Statistics%20the%20page%20hit%20count%20and%20time%20to%20render%20the%20page%0A%20%20%20%20%20var%20key%20%3D%20%27pages.%27%20+%20req.method.toLowerCase%28%29%20+%20%27_%27%20+%20path.replace%28/%3A/g%2C%20%22%22%29.replace%28/%5C//%2C%20%22%22%29.replace%28/%5C//g%2C%20%22_%22%29%3B%0A%20%20%20%20%20statsdClient.timing%28key%2C%20timeElapse%29%3B%0A%20%20%20%20%20if%20%28res.statusCode%20%3D%3D%3D%20404%29%20%7B%0A%20%20%20%20%20%20%20var%20key404%20%3D%20%27404.%27%20+%20req.method.toLowerCase%28%29%20+%20%27_%27%20+%20path.replace%28/%3A/g%2C%20%22%22%29.replace%28/%5C//%2C%20%22%22%29.replace%28/%5C//g%2C%20%22_%22%29%3B%0A%20%20%20%20%20%20%20statsdClient.increment%28key404%29%3B%0A%20%20%20%20%20%7D%0A%20%20%20%7D%0A%20%7D%3B%0A%20next%28%29%3B%0A%7D%2C%0A%60%60%60%0A%0A%u4E0A%u9762%u7684%u4EE3%u7801%u4E2D%u4E00%u4E2A%u53D1%u9001%u4E86%u4E09%u4E2A%u8BA1%u6570%u5668%0A%0A-%20pages.*%0A-%20statusCode.*%0A-%20users.*%0A%0A%u6BD4%u8F83%u91CD%u8981%u7684%u65B9%u6CD5%u662F%0A%0A%60%60%60%0AstatsdClient.timing%28key%2C%20timeElapse%29%3B%0A%0AstatsdClient.increment%28key404%29%3B%0A%60%60%60%0A%0A%u53D1%u9001%u6570%u636E%u662F%u76F4%u63A5%u8C03%u7528%20statsd-client%20%u5305%u63D0%u4F9B%u7684%u65B9%u6CD5%u3002%0A%u8FD9%u4E2A%u4E24%u4E2A%u65B9%u6CD5%u662F%u8BB0%u5F55%u8BF7%u6C42%u7684%u54CD%u5E94%u65F6%u957F%u548C%u8BB0%u5F55%20404%20%u72B6%u6001%u7684%u6B21%u6570%u3002%0A%0A%u6570%u636E%u53D1%u9001%u5C31%u641E%u5B9A%u4E86%u3002%0A%u63A5%u4E0B%u6765%u5728%20Graphite%20%u7684%20dashboard%20%u505A%u51E0%u4E2A%u7EDF%u8BA1%uFF0C%u8FD9%u91CC%u63D0%u4F9B%u63A5%u53E3%20api%0A%u67E5%u770B%u8FC7%u53BB%u4E00%u6BB5%u65F6%u95F4%u5185%u5E73%u5747%u8BBF%u95EE%u6B21%u6570%u6700%u9AD8%u768410%u4E2A%u63A5%u53E3%uFF1AhighestAverage%28stats.timers.koala.pages.*.count%2C10%29%0A%u67E5%u770B%u8FC7%u53BB%u4E00%u6BB5%u65F6%u95F4%u5185%u5E73%u5747%u8017%u65F6%u6700%u591A%u76845%u4E2A%u63A5%u53E3%uFF1AhighestAverage%28stats.timers.koala.pages.*.mean%2C5%29%0A%u4E00%u5929%u5185%u6240%u6709%u63A5%u53E3%u7684%u8BBF%u95EE%u6B21%u6570%uFF1AsumSeries%28summarize%28stats.timers.koala.pages.*.count%2C%221d%22%29%29</center>"
  },
  {
    "title": "思想是什么",
    "created": "2016-01-24T18:51:57.000Z",
    "updated": "2016-01-24T18:51:57.000Z",
    "tags": [
      "网摘",
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.io/#/?provider=evernote&guid=9bff1ab5-1362-4b78-ba49-f9333093f0f2&notebook=)</del>\n\n### 思想是什么\n\n– 摘自阮一峰博客\n\n#### 什么是思想？\n\n首先，思想就是观点。当你对一件事物有观点时，你就是有思想的。根据我的观察，在别人告诉他以前，大多数人其实都是没有观点的。观点越多且越接近本质，那么你的思想也越是丰富和深刻。  \n这里要注意两个问题：  \n（1）观点不是事实。  \n观点是基于事实之上的一种系统性判断和理解框架，事实是观点的基础。你了解和掌握的事实越多，就越容易做出自己的判断。（注意：这个命题既不是充分条件，也不是必要条件，只是在大多数情况下成立而已。）但是，事实本身不是观点。我们可以看到有这种人，他非常博学，但是没有思想。  \n（2）观点不一定是正确的。  \n错误的思想也是思想。观点既然是一种判断，那么当然有可能判断错误。不过，更多的情况是，很难判断某种思想是否正确，大多数思想都只是在一定的范围内是正确的。  \n因此，你可以问一下自己：你是否对大多数事物都有自己的观点，而且可以为这些观点辩护（defend），也就是可以说出支持这些看法的理由？  \n如果回答是肯定的，那么你就是有思想的。\n\n#### 世界上的所有观点，如果细分一下，无非有四个组成部分：\n\n（1）事实。也就是客观的存在，是百分之百成立的，比如“太阳从东方升起”。  \n（2）前提。这是做出推断的依据，是不需要证明的公理，比如“两点之间直线最短”。很多前提都是价值判断。  \n（3）逻辑。也就是做出推理的规则，就好像体育比赛必须遵守规则一样，思想也有自己的逻辑规则。逻辑本质上就是数学，所以马克思会说：“任何学科只有到可以用数学表达的阶段，它才是完善的”。  \n（4）结论。也就是最后得到的观点。  \n因此，我们有这样一个简单的公式：\n\n#### 事实＋前提＋逻辑＝观点\n\n我做一个简单的分析示范。很多人说应该提高对高收入者的所得税，这个观点是怎么来的？  \n（1）“事实”是社会中收入分配不均，有人穷有人富；  \n（2）“前提”是缩小贫富差距对社会发展有好处。  \n（3）“逻辑”是提高所得税是缩小贫富差距的一种手段。  \n（4）“结论”就是前面的那个观点。\n\n<center style=\"display:none\">%23%23%23%u601D%u60F3%u662F%u4EC0%u4E48%0A--%20%u6458%u81EA%u962E%u4E00%u5CF0%u535A%u5BA2%0A%0A%0A%23%23%23%23%u4EC0%u4E48%u662F%u601D%u60F3%uFF1F%0A%0A%u9996%u5148%uFF0C%u601D%u60F3%u5C31%u662F%u89C2%u70B9%u3002%u5F53%u4F60%u5BF9%u4E00%u4EF6%u4E8B%u7269%u6709%u89C2%u70B9%u65F6%uFF0C%u4F60%u5C31%u662F%u6709%u601D%u60F3%u7684%u3002%u6839%u636E%u6211%u7684%u89C2%u5BDF%uFF0C%u5728%u522B%u4EBA%u544A%u8BC9%u4ED6%u4EE5%u524D%uFF0C%u5927%u591A%u6570%u4EBA%u5176%u5B9E%u90FD%u662F%u6CA1%u6709%u89C2%u70B9%u7684%u3002%u89C2%u70B9%u8D8A%u591A%u4E14%u8D8A%u63A5%u8FD1%u672C%u8D28%uFF0C%u90A3%u4E48%u4F60%u7684%u601D%u60F3%u4E5F%u8D8A%u662F%u4E30%u5BCC%u548C%u6DF1%u523B%u3002%0A%u8FD9%u91CC%u8981%u6CE8%u610F%u4E24%u4E2A%u95EE%u9898%uFF1A%0A%uFF081%uFF09%u89C2%u70B9%u4E0D%u662F%u4E8B%u5B9E%u3002%0A%u89C2%u70B9%u662F%u57FA%u4E8E%u4E8B%u5B9E%u4E4B%u4E0A%u7684%u4E00%u79CD%u7CFB%u7EDF%u6027%u5224%u65AD%u548C%u7406%u89E3%u6846%u67B6%uFF0C%u4E8B%u5B9E%u662F%u89C2%u70B9%u7684%u57FA%u7840%u3002%u4F60%u4E86%u89E3%u548C%u638C%u63E1%u7684%u4E8B%u5B9E%u8D8A%u591A%uFF0C%u5C31%u8D8A%u5BB9%u6613%u505A%u51FA%u81EA%u5DF1%u7684%u5224%u65AD%u3002%uFF08%u6CE8%u610F%uFF1A%u8FD9%u4E2A%u547D%u9898%u65E2%u4E0D%u662F%u5145%u5206%u6761%u4EF6%uFF0C%u4E5F%u4E0D%u662F%u5FC5%u8981%u6761%u4EF6%uFF0C%u53EA%u662F%u5728%u5927%u591A%u6570%u60C5%u51B5%u4E0B%u6210%u7ACB%u800C%u5DF2%u3002%uFF09%u4F46%u662F%uFF0C%u4E8B%u5B9E%u672C%u8EAB%u4E0D%u662F%u89C2%u70B9%u3002%u6211%u4EEC%u53EF%u4EE5%u770B%u5230%u6709%u8FD9%u79CD%u4EBA%uFF0C%u4ED6%u975E%u5E38%u535A%u5B66%uFF0C%u4F46%u662F%u6CA1%u6709%u601D%u60F3%u3002%0A%uFF082%uFF09%u89C2%u70B9%u4E0D%u4E00%u5B9A%u662F%u6B63%u786E%u7684%u3002%0A%u9519%u8BEF%u7684%u601D%u60F3%u4E5F%u662F%u601D%u60F3%u3002%u89C2%u70B9%u65E2%u7136%u662F%u4E00%u79CD%u5224%u65AD%uFF0C%u90A3%u4E48%u5F53%u7136%u6709%u53EF%u80FD%u5224%u65AD%u9519%u8BEF%u3002%u4E0D%u8FC7%uFF0C%u66F4%u591A%u7684%u60C5%u51B5%u662F%uFF0C%u5F88%u96BE%u5224%u65AD%u67D0%u79CD%u601D%u60F3%u662F%u5426%u6B63%u786E%uFF0C%u5927%u591A%u6570%u601D%u60F3%u90FD%u53EA%u662F%u5728%u4E00%u5B9A%u7684%u8303%u56F4%u5185%u662F%u6B63%u786E%u7684%u3002%0A%u56E0%u6B64%uFF0C%u4F60%u53EF%u4EE5%u95EE%u4E00%u4E0B%u81EA%u5DF1%uFF1A%u4F60%u662F%u5426%u5BF9%u5927%u591A%u6570%u4E8B%u7269%u90FD%u6709%u81EA%u5DF1%u7684%u89C2%u70B9%uFF0C%u800C%u4E14%u53EF%u4EE5%u4E3A%u8FD9%u4E9B%u89C2%u70B9%u8FA9%u62A4%uFF08defend%uFF09%uFF0C%u4E5F%u5C31%u662F%u53EF%u4EE5%u8BF4%u51FA%u652F%u6301%u8FD9%u4E9B%u770B%u6CD5%u7684%u7406%u7531%uFF1F%0A%u5982%u679C%u56DE%u7B54%u662F%u80AF%u5B9A%u7684%uFF0C%u90A3%u4E48%u4F60%u5C31%u662F%u6709%u601D%u60F3%u7684%u3002%0A%0A%23%23%23%23%u4E16%u754C%u4E0A%u7684%u6240%u6709%u89C2%u70B9%uFF0C%u5982%u679C%u7EC6%u5206%u4E00%u4E0B%uFF0C%u65E0%u975E%u6709%u56DB%u4E2A%u7EC4%u6210%u90E8%u5206%uFF1A%0A%uFF081%uFF09%u4E8B%u5B9E%u3002%u4E5F%u5C31%u662F%u5BA2%u89C2%u7684%u5B58%u5728%uFF0C%u662F%u767E%u5206%u4E4B%u767E%u6210%u7ACB%u7684%uFF0C%u6BD4%u5982%u201C%u592A%u9633%u4ECE%u4E1C%u65B9%u5347%u8D77%u201D%u3002%0A%uFF082%uFF09%u524D%u63D0%u3002%u8FD9%u662F%u505A%u51FA%u63A8%u65AD%u7684%u4F9D%u636E%uFF0C%u662F%u4E0D%u9700%u8981%u8BC1%u660E%u7684%u516C%u7406%uFF0C%u6BD4%u5982%u201C%u4E24%u70B9%u4E4B%u95F4%u76F4%u7EBF%u6700%u77ED%u201D%u3002%u5F88%u591A%u524D%u63D0%u90FD%u662F%u4EF7%u503C%u5224%u65AD%u3002%0A%uFF083%uFF09%u903B%u8F91%u3002%u4E5F%u5C31%u662F%u505A%u51FA%u63A8%u7406%u7684%u89C4%u5219%uFF0C%u5C31%u597D%u50CF%u4F53%u80B2%u6BD4%u8D5B%u5FC5%u987B%u9075%u5B88%u89C4%u5219%u4E00%u6837%uFF0C%u601D%u60F3%u4E5F%u6709%u81EA%u5DF1%u7684%u903B%u8F91%u89C4%u5219%u3002%u903B%u8F91%u672C%u8D28%u4E0A%u5C31%u662F%u6570%u5B66%uFF0C%u6240%u4EE5%u9A6C%u514B%u601D%u4F1A%u8BF4%uFF1A%u201C%u4EFB%u4F55%u5B66%u79D1%u53EA%u6709%u5230%u53EF%u4EE5%u7528%u6570%u5B66%u8868%u8FBE%u7684%u9636%u6BB5%uFF0C%u5B83%u624D%u662F%u5B8C%u5584%u7684%u201D%u3002%0A%uFF084%uFF09%u7ED3%u8BBA%u3002%u4E5F%u5C31%u662F%u6700%u540E%u5F97%u5230%u7684%u89C2%u70B9%u3002%0A%u56E0%u6B64%uFF0C%u6211%u4EEC%u6709%u8FD9%u6837%u4E00%u4E2A%u7B80%u5355%u7684%u516C%u5F0F%uFF1A%0A%0A%23%23%23%23%u4E8B%u5B9E%uFF0B%u524D%u63D0%uFF0B%u903B%u8F91%uFF1D%u89C2%u70B9%0A%u6211%u505A%u4E00%u4E2A%u7B80%u5355%u7684%u5206%u6790%u793A%u8303%u3002%u5F88%u591A%u4EBA%u8BF4%u5E94%u8BE5%u63D0%u9AD8%u5BF9%u9AD8%u6536%u5165%u8005%u7684%u6240%u5F97%u7A0E%uFF0C%u8FD9%u4E2A%u89C2%u70B9%u662F%u600E%u4E48%u6765%u7684%uFF1F%0A%uFF081%uFF09%u201C%u4E8B%u5B9E%u201D%u662F%u793E%u4F1A%u4E2D%u6536%u5165%u5206%u914D%u4E0D%u5747%uFF0C%u6709%u4EBA%u7A77%u6709%u4EBA%u5BCC%uFF1B%0A%uFF082%uFF09%u201C%u524D%u63D0%u201D%u662F%u7F29%u5C0F%u8D2B%u5BCC%u5DEE%u8DDD%u5BF9%u793E%u4F1A%u53D1%u5C55%u6709%u597D%u5904%u3002%0A%uFF083%uFF09%u201C%u903B%u8F91%u201D%u662F%u63D0%u9AD8%u6240%u5F97%u7A0E%u662F%u7F29%u5C0F%u8D2B%u5BCC%u5DEE%u8DDD%u7684%u4E00%u79CD%u624B%u6BB5%u3002%0A%uFF084%uFF09%u201C%u7ED3%u8BBA%u201D%u5C31%u662F%u524D%u9762%u7684%u90A3%u4E2A%u89C2%u70B9%u3002%0A%0A</center>"
  },
  {
    "title": "好玩的 livereload。",
    "created": "2016-01-07T20:57:10.000Z",
    "updated": "2016-01-07T20:57:10.000Z",
    "tags": [
      "posts"
    ],
    "content": "<del style=\"position:relative;display:block;z-index:10;\">[Edit](http://maxiang.io/#/?provider=evernote&guid=21dd6cca-303e-4956-b00e-be3ea0fc7876&notebook=)</del>\n\n### 好玩的 livereload。\n\nlivereload 工具可以自动监听项目文件的修改事件，配合浏览器插件（websocket），即时刷新浏览器页面，写 css 和 html 的绝佳利息，F5 救星。\n\nLivereload的[官网](http://livereload.com)，它支持mac/linux/windows，同时还有chrome/firefox的浏览器插件。它对windows的支持比较差，很容易崩溃，而且是收费的。所以我们只需要用它的浏览器插件就可以了（免费的），然后再找一个免费的替代器换掉服务器端。\n\n我选择的是：[python-livereload](https://github.com/lepture/python-livereload)，它是一个python程序，以命令行方式启动，可以跟livereload的浏览器插件通信，效果不错。注意最好从github中下载源代码安装，通过pip或easy_install安装也行，但是我本机使用 pip 安装会有问题，最后还是偷懒直接用 apt-get 方式安装了。\n\n    1.sudo apt-get install python-livereload\n\nChrome 的插件：  \n[https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei](https://chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei)\n\n使用方式如下：\n\n    1.cd myproject 2.cd app 3.livereload （执行此命令就开始监听文件变化）4.5.然后启用浏览器的livereload插件即可。\n\n参考文档：[我的web开发最强组合：Play1+angularjs+bootstrap ++ (idea + livereload)](http://freewind.in/posts/1167-my-most-powerful-tools-for-web-dev-play1-angularjs-bootstrap-idea-livereload/)\n\n<center style=\"display:none\">%23%23%23%u597D%u73A9%u7684%20livereload%u3002%0Alivereload%20%u5DE5%u5177%u53EF%u4EE5%u81EA%u52A8%u76D1%u542C%u9879%u76EE%u6587%u4EF6%u7684%u4FEE%u6539%u4E8B%u4EF6%uFF0C%u914D%u5408%u6D4F%u89C8%u5668%u63D2%u4EF6%uFF08websocket%uFF09%uFF0C%u5373%u65F6%u5237%u65B0%u6D4F%u89C8%u5668%u9875%u9762%uFF0C%u5199%20css%20%u548C%20html%20%u7684%u7EDD%u4F73%u5229%u606F%uFF0CF5%20%u6551%u661F%u3002%0A%0ALivereload%u7684%5B%u5B98%u7F51%5D%28http%3A//livereload.com%29%uFF0C%u5B83%u652F%u6301mac/linux/windows%uFF0C%u540C%u65F6%u8FD8%u6709chrome/firefox%u7684%u6D4F%u89C8%u5668%u63D2%u4EF6%u3002%u5B83%u5BF9windows%u7684%u652F%u6301%u6BD4%u8F83%u5DEE%uFF0C%u5F88%u5BB9%u6613%u5D29%u6E83%uFF0C%u800C%u4E14%u662F%u6536%u8D39%u7684%u3002%u6240%u4EE5%u6211%u4EEC%u53EA%u9700%u8981%u7528%u5B83%u7684%u6D4F%u89C8%u5668%u63D2%u4EF6%u5C31%u53EF%u4EE5%u4E86%uFF08%u514D%u8D39%u7684%uFF09%uFF0C%u7136%u540E%u518D%u627E%u4E00%u4E2A%u514D%u8D39%u7684%u66FF%u4EE3%u5668%u6362%u6389%u670D%u52A1%u5668%u7AEF%u3002%0A%0A%u6211%u9009%u62E9%u7684%u662F%uFF1A%5Bpython-livereload%5D%28https%3A//github.com/lepture/python-livereload%29%uFF0C%u5B83%u662F%u4E00%u4E2Apython%u7A0B%u5E8F%uFF0C%u4EE5%u547D%u4EE4%u884C%u65B9%u5F0F%u542F%u52A8%uFF0C%u53EF%u4EE5%u8DDFlivereload%u7684%u6D4F%u89C8%u5668%u63D2%u4EF6%u901A%u4FE1%uFF0C%u6548%u679C%u4E0D%u9519%u3002%u6CE8%u610F%u6700%u597D%u4ECEgithub%u4E2D%u4E0B%u8F7D%u6E90%u4EE3%u7801%u5B89%u88C5%uFF0C%u901A%u8FC7pip%u6216easy_install%u5B89%u88C5%u4E5F%u884C%uFF0C%u4F46%u662F%u6211%u672C%u673A%u4F7F%u7528%20pip%20%u5B89%u88C5%u4F1A%u6709%u95EE%u9898%uFF0C%u6700%u540E%u8FD8%u662F%u5077%u61D2%u76F4%u63A5%u7528%20apt-get%20%u65B9%u5F0F%u5B89%u88C5%u4E86%u3002%0A%0A%60%60%60%0Asudo%20apt-get%20install%20python-livereload%0A%60%60%60%0AChrome%20%u7684%u63D2%u4EF6%uFF1A%0A%5Bhttps%3A//chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei%5D%28https%3A//chrome.google.com/webstore/detail/livereload/jnihajbhpnppcggbcgedagnkighmdlei%29%0A%0A%u4F7F%u7528%u65B9%u5F0F%u5982%u4E0B%uFF1A%0A%0A%60%60%60%0Acd%20myproject%20%0Acd%20app%20%0Alivereload%09%uFF08%u6267%u884C%u6B64%u547D%u4EE4%u5C31%u5F00%u59CB%u76D1%u542C%u6587%u4EF6%u53D8%u5316%uFF09%0A%0A%u7136%u540E%u542F%u7528%u6D4F%u89C8%u5668%u7684livereload%u63D2%u4EF6%u5373%u53EF%u3002%0A%60%60%60%0A%0A%0A%0A%u53C2%u8003%u6587%u6863%uFF1A%5B%u6211%u7684web%u5F00%u53D1%u6700%u5F3A%u7EC4%u5408%uFF1APlay1+angularjs+bootstrap%20++%20%28idea%20+%20livereload%29%5D%28http%3A//freewind.in/posts/1167-my-most-powerful-tools-for-web-dev-play1-angularjs-bootstrap-idea-livereload/%29</center>"
  }
]
